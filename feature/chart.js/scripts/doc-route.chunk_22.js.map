{"version":3,"sources":["webpack://payex/./src/App/components/Topbar/index.js","webpack://payex/./src/App/Documentation/components/Topbar/index.js"],"names":["TopbarBtn","_ref","icon","text","target","iconClass","classnames","react_default","a","createElement","type","className","data-toggle-nav","concat","Fragment","TopbarMenu","_ref2","menu","id","items","map","item","i","react","key","href","onClick","e","preventDefault","Topbar","_ref3","topbarContent","fixed","logout","Topbar_TopbarBtn","btn","Topbar_TopbarMenu","propTypes","PropTypes","object","bool","_objectSpread","DeprecatedAlert","Alert","Overview","utils","value","lib_default","data","name","language","showCasePanel","codeFigure","components_Topbar","FixedTopbar","TopbarText","Topbar_DeprecatedAlert","Topbar_Overview","Topbar_FixedTopbar","Component","topbar","init","Topbar_TopbarText","component"],"mappings":"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","file":"scripts/doc-route.chunk_22.js?73e5ffd215a20fa21caf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TopbarBtn = ({ icon, text, target }) => {\n    const iconClass = classnames(\"material-icons\", icon === \"menu\" ? \"topbar-btn-icon\" : \"\");\n\n    if (icon || text) {\n        return (\n            <button type=\"button\" className=\"topbar-btn\" data-toggle-nav={target ? `#${target}` : null}>{\"\\n\\t\\t\"}\n                {icon ?\n                    <>\n                        <i className={iconClass}>{icon}</i>\n                        {\"\\n\\t\\t\"}\n                    </>\n                    : null}\n                {text ?\n                    <>\n                        <span className=\"topbar-btn-text\">{text}</span>\n                        {\"\\n\\t\"}\n                    </>\n                    : null}\n            </button>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst TopbarMenu = ({ menu }) => {\n    const { id, items } = menu;\n\n    return (\n        <nav id={id} className=\"topbar-nav\">\n            {items.map((item, i) => (\n                <Fragment key={i}>\n                    {\"\\n\"}<a href=\"#\" onClick={e => e.preventDefault()}>{item}</a>\n                </Fragment>\n            ))}{\"\\n\"}\n        </nav>\n    );\n};\n\nconst Topbar = ({ topbarContent, fixed, logout }) => (\n    <header className={`topbar ${fixed ? \"topbar-fixed\" : \"\"}`}>{\"\\n\"}\n        <>\n            {topbarContent ?\n            <>\n                <TopbarBtn icon={topbarContent.btn.icon} text={topbarContent.btn.text} target={topbarContent.id} />{\"\\n\"}\n                <TopbarMenu menu={topbarContent} />\n            </> : null}\n            {\"\\n\"}<a href=\"#\" className=\"topbar-logo\" onClick={e => e.preventDefault()}></a>{\"\\n\"}\n            {logout ?\n                <>\n                    <TopbarBtn icon=\"exit_to_app\" text=\"Log out\" />{\"\\n\"}\n                </> :\n                null}\n        </>\n    </header>\n);\n\nTopbar.propTypes = {\n    topbarContent: PropTypes.object,\n    fixed: PropTypes.bool,\n    logout: PropTypes.bool\n};\n\nexport default Topbar;\n","import React, { Component } from \"react\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocToc, Property, Attribute } from \"#\";\nimport TopbarComponent from \"@/Topbar\";\nimport { topbar } from \"$/px-script/main\";\nimport Alert from \"@/Alert\";\n\nconst menu = {\n    btn: {\n        icon: \"menu\",\n        text: \"Menu\"\n    },\n    items: [\"Link 1\", \"Link 2\", \"Link 3\"]\n};\n\nconst topbarContent = {\n    id: \"topbar-nav\",\n    ...menu\n};\n\n// TODO: Remove when deprecated parts are deleted.\nconst DeprecatedAlert = () => (\n    <Alert type=\"danger\">\n        <h3>Component contains deprecated parts</h3>\n        <p>The following parts are deprecated and will be removed:</p>\n        <ul>\n            <li>Right nav</li>\n            <li>Levels in left nav</li>\n            <li>topbar-btn-right and topbar-btn-left classes will be replaced by topbar-btn</li>\n        </ul>\n        <p>For continued support, please follow the examples in the documentation.</p>\n    </Alert>\n);\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            To use a topbar the bare minimum markup required is:\n        </p>\n        <ul>\n            <li><Property value=\".topbar\" /> wrapper.</li>\n            <li>Anchor with class <Property value=\".topbar-logo\" /> to display the logo and make it clickable.</li>\n        </ul>\n        <p>\n            With this you get a topbar with the PayEx logo.\n            In the topbar you can add additional functionality like a menu containing links. To enable this add a <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> and\n            a <PrismCode className=\"language-html\">{\"<nav>\"}</PrismCode> containing anchors. Remember to include <Attribute data name=\"toggle-nav\" value=\"{your_nav_id}\"/> as a <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> attribute\n            to get the menu to appear when the menu-button is clicked.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <TopbarComponent topbarContent={topbarContent} logout />\n        </ComponentPreview>\n    </>\n);\n\nconst FixedTopbar = () => (\n    <>\n        <h2 id=\"fixed-topbar\">Fixed topbar</h2>\n        <p>\n            Add <Property value=\".topbar-fixed\" /> with your <Property value=\".topbar\" /> to get a fixed topbar.\n            For a demonstration of the usage see the documentations top bar or implement it in your own project!\n        </p>\n        <ComponentPreview language=\"html\" codeFigure>\n            <TopbarComponent fixed />\n        </ComponentPreview>\n    </>\n);\n\nconst TopbarText = () => (\n    <div className=\"col-lg-10 doc-body\">\n        <DeprecatedAlert />\n        <p className=\"lead\">Topbar...</p>\n        <Overview />\n        <FixedTopbar />\n    </div>\n);\n\nclass Topbar extends Component {\n    componentDidMount () {\n        topbar.init(1);\n    }\n\n    render () {\n        return (\n            <div className=\"doc-container\">\n                <div className=\"row\">\n                    <TopbarText />\n                    <DocToc component={TopbarText} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Topbar;\n\n/* For testing */\nexport { Overview, TopbarText, FixedTopbar, DeprecatedAlert };\n"],"sourceRoot":""}