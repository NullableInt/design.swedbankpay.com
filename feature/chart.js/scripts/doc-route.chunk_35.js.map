{"version":3,"sources":["webpack://payex/./src/App/Documentation/getting-started/Contributing/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","CreatingYourComponent","CreateADocumentationPage","AddComponentToRoutes","AddingStyles","AddingJavaScript","ContributingText","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_prism__WEBPACK_IMPORTED_MODULE_1__","react_prism__WEBPACK_IMPORTED_MODULE_1___default","_utils__WEBPACK_IMPORTED_MODULE_2__","a","createElement","Fragment","id","value","language","codeFigure","className","Contributing","component"],"mappings":"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","file":"scripts/doc-route.chunk_35.js?87493462f5a1f0e96332","sourcesContent":["import React from \"react\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocToc, Property } from \"#\";\n\nconst CreatingYourComponent = () => (\n    <>\n        <h2 id=\"creating-your-component\">Creating your component</h2>\n        <p>Create a new file under <Property value=\"./src/App/components/[MyExampleComponent]/\" /> for your component, name it <Property value=\"index.js\" />:</p>\n        <ComponentPreview language=\"javascript\" codeFigure>\n            {\"//example component\\n\\n\"}\n            {\"import React from \\\"react\\\";\"}\n            {\"import PropTypes from \\\"prop-types\\\";\\n\\n\"}\n            {\"const MyExampleComponent = ({ type, title, separator }) => (\\n\"}\n            {\"<div className={`well well-${type}`}>\\n\"}\n            {\"        <h3>{title}</h3>\\n\"}\n            {\"        {separator ? <hr /> : null}\\n\"}\n            {\"        This is my example component in a well.\\n\"}\n            {\"    </div>\\n\"}\n            {\");\\n\\n\"}\n            {\"MyExampleComponent.propTypes = {\\n\"}\n            {\"type: PropTypes.oneOf([\\\"light\\\", \\\"dark\\\"]).isRequired,\"}\n            {\"title: PropTypes.string.isRequired,\"}\n            {\"separator: PropTypes.bool\"}\n            {\"};\\n\\n\"}\n            {\"export default MyExampleComponent;\"}\n        </ComponentPreview>\n    </>\n);\n\nconst CreateADocumentationPage = () => (\n    <>\n        <h2 id=\"create-a-documentation-page\">Create a documentation page</h2>\n        <p>Create a new file under <Property value=\"./src/App/Documentation/Components/[MyExampleDocumentationComponent]/\" /> for your component, call it <Property value=\"index.js\" />:</p>\n        <ComponentPreview language=\"javascript\" codeFigure>\n            {\"//example documentation component\\n\\n\"}\n            {\"import React from \\\"react\\\";\\n\\n\"}\n            {\"import { ComponentPreview, DocToc } from \\\"#\\\";\"}\n            {\"import MyExampleComponent from \\\"@/MyExampleComponent\\\";\\n\\n\"}\n            {\"const MyExampleDocumentationComponentText = () => (\\n\"}\n            {\"    <div className=\\\"col-lg-10 doc-body\\\">\\n\"}\n            {\"        <p className=\\\"lead\\\">This is the documentation for My Example Component.</p>\\n\"}\n            {\"        <h2 id=\\\"example-usage\\\">Example usage</h2>\\n\"}\n            {\"        <ComponentPreview language=\\\"html\\\" showCasePanel codeFigure>\\n\"}\n            {\"            <MyExampleComponent type=\\\"dark\\\" title=\\\"My Example Component\\\" separator />\\n\"}\n            {\"        </ComponentPreview>\\n\"}\n            {\"    </div>\\n\"}\n            {\");\\n\\n\"}\n            {\"const MyExampleDocumentationComponent = () => (\\n\"}\n            {\"    <div className=\\\"doc-container\\\">\\n\"}\n            {\"        <div className=\\\"row\\\">\\n\"}\n            {\"            <MyExampleDocumentationComponentText />\\n\"}\n            {\"            <DocToc component={MyExampleDocumentationComponentText} />\\n\"}\n            {\"        </div>\\n\"}\n            {\"    </div>\\n\"}\n            {\");\\n\\n\"}\n            {\"export default MyExampleDocumentationComponent;\"}\n        </ComponentPreview>\n        <p>Use the custom <Property value=\"ComponentPreview\" /> component to preview your component. It has several props, for this example we are going to be using <Property value=\"language\" />, <Property value=\"showCasePanel\" /> and <Property value=\"codeFigure\" />.</p>\n        <p>We are also using the `DocToc` component to add a dynamic table of contents to the documentation of your component. This component scans the provided component for <PrismCode className=\"language-html\">{\"<h2>\"}</PrismCode>-tags and creates anchors for easier navigation. Just remember to add an id to the <PrismCode className=\"language-html\">{\"<h2>\"}</PrismCode>-tag.</p>\n    </>\n);\n\nconst AddComponentToRoutes = () => (\n    <>\n        <h2 id=\"add-component-to-routes\">Add component to routes</h2>\n        <p>In <Property value=\"./src/App/routes/docs.js\" /> under the components object add the following:</p>\n        <ComponentPreview language=\"javascript\" codeFigure>\n            {\"/**\\n\"}\n            {\" * Components\\n\"}\n            {\" */\\n\"}\n            {\"{\\n\"}\n            {\"    title: \\\"Components\\\",\\n\"}\n            {\"    path: \\\"/docs/components\\\",\\n\"}\n            {\"    redirect: \\\"/docs/components/alerts\\\",\\n\"}\n            {\"    routes: [\\n\"}\n            {\"        ...\\n\"}\n            {\"        ...\\n\"}\n            {\"        // ADD THIS\\n\"}\n            {\"        {\\n\"}\n            {\"            title: \\\"My Example Documentation Component\\\",\\n\"}\n            {\"            path: \\\"/docs/components/my-example-documentation-component\\\",\\n\"}\n            {\"            componentPath: \\\"components/My-example-documentation-component\\\"\\n\"}\n            {\"        },\\n\"}\n            {\"        ...\\n\"}\n            {\"        ...\\n\"}\n            {\"    ]\\n\"}\n            {\"},\\n\"}\n        </ComponentPreview>\n        <p>You will now be able to go to the route you provided to preview your component. Run <Property value=\"npm start\" /> if you haven{\"'\"}t already done so, and navigate to <Property value=\"localhost:3000/docs/components/my-example-documentation-component\" /> to see your component in action.</p>\n    </>\n);\n\nconst AddingStyles = () => {\n    const ImportingTheStyles = () => (\n        <>\n            <h3>Importing the styles</h3>\n            <p>Import it in the appropriate root-file (<Property value=\"px.less\" /> for the core styles, under <Property value=\"/themes\" /> if the component is going to be part of a specific theme).</p>\n            <p>Assuming you are creating a core component the import would look like this:</p>\n            <ComponentPreview language=\"css\" codeFigure>\n                {\"// px.less\\n\"}\n                {\"...\\n\"}\n                {\"...\\n\\n\"}\n\n                {\"// Components\\n\"}\n                {\"...\\n\"}\n                {\"...\\n\"}\n                {\"@import \\\"components/my-example-component\\\";\\n\"}\n                {\"...\"}\n            </ComponentPreview>\n        </>\n    );\n\n    const CreatingVariables = () => (\n        <>\n            <h3>Creating variables</h3>\n            <p>To add custom variables to your component modify <Property value=\"./src/less/_variables.less\" />, and add a section for your component. Add it alphabetically and update the table of contents.</p>\n            <p>Adding a section should look like this:</p>\n            <ComponentPreview language=\"css\" codeFigure>\n                {\"// _variables.less\\n\\n\"}\n                {\"// [number]. My Example Component\\n\"}\n                {\"// ==========================================================================\\n\\n\"}\n                {\"@my-example-component-color: @gray-3;\\n\"}\n                {\"@my-example-component-background: @gray-8;\\n\"}\n                {\"@my-example-component-padding: 1rem;\\n\"}\n                {\"@my-example-component-font-family: \\\"Arial\\\";\\n\"}\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <div>\n            <h2 id=\"adding-styles\">Adding styles</h2>\n            <p>To add styling for your component create a new file in <Property value=\"./src/less/components/\" />, name it <Property value=\"my-example-component.less\" />.</p>\n            <ImportingTheStyles />\n            <CreatingVariables />\n            <p>Your the styles for <Property value=\"MyExampleComponent\" /> should now be included properly, and you should see changes immediatly while running dev.</p>\n            <p>When writing styles for your component, try to use <Property value=\"rem\" /> (<Property value=\"1rem\" /> = ~<Property value=\"16px\" />) and the predefined variables (only if it makes sense of course) as much as possible. And follow the linting rules set by <Property value=\"./.stylelintrc\" />.</p>\n        </div>\n    );\n};\n\nconst AddingJavaScript = () => {\n    const CreateAScriptFile = () => (\n        <div>\n            <h3>Create a script file for your component</h3>\n            <p>Create a new file under <Property value=\"./src/px-script/main/[MyExampleComponent]/\" /> for your component, name it <Property value=\"index.js\" />:</p>\n            <ComponentPreview language=\"javascript\" codeFigure>\n                {\"const int = () => {\\n\"}\n                {\"alert(\\\"MyExampleComponent was initialized\\\");\\n\"}\n                {\"};\\n\\n\"}\n                {\"const MyExampleComponent = {\\n\"}\n                {\"init\\n\"}\n                {\"};\\n\\n\"}\n                {\"export default MyExampleComponent;\"}\n            </ComponentPreview>\n            <p>Note: All essential functionality for your component needs to be called within the <Property value=\"init\" /> method.</p>\n        </div>\n    );\n\n    const AddScriptToPX = () => (\n        <div>\n            <h3>Add your components script to px-script</h3>\n            <p>Open <Property value=\"./src/px-script/main/index.js\" /> and add your component:</p>\n            <ComponentPreview language=\"javascript\" codeFigure>\n                {\"...\\n\"}\n                {\"import MyExampleComponent from \\\"./MyExampleComponent\\\";\\n\"}\n                {\"...\\n\"}\n                {\"const px = {\\n\"}\n                {\"...\\n\"}\n                {\"MyExampleComponent,\\n\"}\n                {\"...\\n\"}\n                {\"};\\n\\n\"}\n                {\"...\\n\"}\n                {\"export { ... MyExampleComponent, ... }\\n\"}\n            </ComponentPreview>\n        </div>\n    );\n\n    const InitializingTheScript = () => (\n        <div>\n            <h2>Initializing the script in the documentation</h2>\n            <p>Considering the documentation is built in react your documentation component will load after <Property value=\"px-script\" /> runs it{\"'\"}s <Property value=\"initAll\" /> method, you will need to run your component{\"'\"}s init method when the component actually renders.</p>\n            <p>You can do this by slightly modifying the <Property value=\"MyExampleDocumentationComponent\" />:</p>\n            <ComponentPreview language=\"javascript\" codeFigure>\n                {\"//example documentation component\\n\\n\"}\n                {\"// change this line\\n\"}\n                {\"import React, { Component } from \\\"react\\\";\\n\"}\n                {\"...\\n\"}\n                {\"// import your components script\\n\"}\n                {\"import { MyExampleComponent } from \\\"../../../../px-script/main\\\";\\n\\n\"}\n                {\"...\\n\"}\n                {\"...\\n\"}\n                {\"// modify MyExampleDocumentationComponent\\n\"}\n                {\"class MyExampleDocumentationComponent extends Component {\\n\"}\n                {\"componentDidMount () {\\n\"}\n                {\"MyExampleComponent.init();\\n\"}\n                {\"}\\n\\n\"}\n                {\"render() {\\n\"}\n                {\"return (\\n\"}\n                {\"<div className=\\\"doc-container\\\">\\n\"}\n                {\"\\t\\t\\t\\t<div className=\\\"row\\\">\\n\"}\n                {\"\\t\\t\\t\\t\\t<MyExampleDocumentationComponentText />\\n\"}\n                {\"\\t\\t\\t\\t\\t<DocToc component={MyExampleDocumentationComponentText} />\\n\"}\n                {\"\\t\\t\\t\\t</div>\\n\"}\n                {\"\\t\\t\\t</div>\\n\"}\n                {\")\\n\"}\n                {\"}\\n\"}\n                {\"}\\n\"}\n            </ComponentPreview>\n        </div>\n    );\n\n    return (\n        <div>\n            <h2 id=\"adding-javascript\">Adding javascript</h2>\n            <p>If your component needs javascript to run, you will need to add the javascript to the <Property value=\"px-script\" /></p>\n            <CreateAScriptFile />\n            <AddScriptToPX />\n            <InitializingTheScript />\n        </div>\n    );\n};\n\nconst ContributingText = () => (\n    <div className=\"col-lg-10\">\n        <p className=\"lead\">To create a new component</p>\n        <CreatingYourComponent />\n        <CreateADocumentationPage />\n        <AddComponentToRoutes />\n        <AddingStyles />\n        <AddingJavaScript />\n    </div>\n);\n\nconst Contributing = () => (\n    <div className=\"doc-container\">\n        <div className=\"row\">\n            <ContributingText />\n            <DocToc component={ContributingText} />\n        </div>\n    </div>\n);\n\nexport default Contributing;\n\n/* For testing */\nexport { CreatingYourComponent, CreateADocumentationPage, AddComponentToRoutes, AddingStyles, AddingJavaScript, ContributingText };\n"],"sourceRoot":""}