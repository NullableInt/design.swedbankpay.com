{"version":3,"sources":["webpack://swedbankpay/./src/App/components/ActionLink/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ActionLinkContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","ActionLink","props","a","createElement","Fragment","newTab","className","href","target","_ref","linkText","badge","smallText","multiline","concat","type","text","propTypes","PropTypes","shape","string","isRequired","bool"],"mappings":"iHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,sCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAAO,EAAAC,GAGME,EAAa,SAAAC,GAAK,OACpBL,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACKH,EAAMI,OACHT,EAAAM,EAAAC,cAAA,KAAGG,UAAU,kCAAkCC,KAAK,IAAIC,OAAO,UAAU,KACrEZ,EAAAM,EAAAC,cAACT,EAAsBO,IAG3BL,EAAAM,EAAAC,cAAA,KAAGG,UAAU,cAAcC,KAAK,KAAM,KAClCX,EAAAM,EAAAC,cAACT,EAAsBO,MAMjCP,EAAoB,SAACe,GAAD,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,MAAOC,EAApBH,EAAoBG,UAAWC,EAA/BJ,EAA+BI,UAAWR,EAA1CI,EAA0CJ,OAA1C,OACtBT,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACKC,EAAST,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KAAER,EAAAM,EAAAC,cAAA,KAAGG,UAAU,kBAAb,eAA8C,MAAW,KACpEK,EAAQf,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KAAER,EAAAM,EAAAC,cAAA,QAAMG,UAAS,SAAAQ,OAAWH,EAAMI,OAASJ,EAAMK,MAAa,MAAW,KACjFH,EACGjB,EAAAM,EAAAC,cAAA,QAAMG,UAAU,yBAAyB,KACpCI,EAAU,KACVE,EAAYhB,EAAAM,EAAAC,cAAA,QAAMG,UAAU,cAAcM,GAAoB,KAAO,MAG1EhB,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACKM,EAAU,KACVE,EAAYhB,EAAAM,EAAAC,cAAA,QAAMG,UAAU,cAAcM,GAAoB,KAAO,MAE5E,OAIVZ,EAAWiB,UAAY,CACnBhB,MAAOiB,IAAUC,MAAM,CACnBT,SAAUQ,IAAUE,OAAOC,WAC3BV,MAAOO,IAAUC,MAAM,CACnBJ,KAAMG,IAAUE,OAAOC,WACvBL,KAAME,IAAUE,OAAOC,aAE3BT,UAAWM,IAAUE,OACrBP,UAAWK,IAAUI,KACrBjB,OAAQa,IAAUI,QAI1B5B,EAAkBuB,UAAY,CAC1BP,SAAUQ,IAAUE,OAAOC,WAC3BV,MAAOO,IAAUC,MAAM,CACnBJ,KAAMG,IAAUE,OAAOC,WACvBL,KAAME,IAAUE,OAAOC,aAE3BT,UAAWM,IAAUE,OACrBP,UAAWK,IAAUI,KACrBjB,OAAQa,IAAUI,MAGPtB","file":"scripts/doc-route.chunk_71.js?1236f04f89be0afa76a8","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ActionLink = props => (\n    <>\n        {props.newTab ?\n            <a className=\"action-link action-link-new-tab\" href=\"#\" target=\"_blank\">{\"\\n\"}\n                <ActionLinkContent {...props} />\n            </a>\n            :\n            <a className=\"action-link\" href=\"#\" >{\"\\n\"}\n                <ActionLinkContent {...props} />\n            </a>\n        }\n    </>\n);\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline, newTab }) => (\n    <>\n        {newTab ? <><i className=\"material-icons\">open_in_new</i>{\"\\n\"}</> : null}\n        {badge ? <><span className={`badge ${badge.type}`}>{badge.text}</span>{\"\\n\"}</> : null}\n        {multiline ?\n            <span className=\"action-link-multiline\">{\"\\n\"}\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </span>\n            :\n            <>\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </>\n        }{\"\\n\"}\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n"],"sourceRoot":""}