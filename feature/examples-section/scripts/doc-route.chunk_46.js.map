{"version":3,"sources":["webpack://swedbankpay/./src/App/Documentation/examples/customers/constants.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/index.js","webpack://swedbankpay/./src/App/components/InputGroup/index.js","webpack://swedbankpay/./src/App/components/FormComponents/Checkbox.js","webpack://swedbankpay/./src/App/components/FormComponents/Datepicker.js","webpack://swedbankpay/./src/App/components/FormComponents/FormControlText.js","webpack://swedbankpay/./src/App/components/FormComponents/Radio.js","webpack://swedbankpay/./src/App/components/FormComponents/Rangeslider.js","webpack://swedbankpay/./src/App/components/FormComponents/Togglebox.js","webpack://swedbankpay/./src/App/components/FormComponents/index.js","webpack://swedbankpay/./src/App/components/MediaObject/index.js","webpack://swedbankpay/./src/App/components/ActionLink/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedDatePickerGroup/index.js","webpack://swedbankpay/./src/App/components/Steps/index.js","webpack://swedbankpay/./src/App/components/Chart/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedDialog/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedCharts/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedInquiries/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedOrders/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack://swedbankpay/./src/App/Documentation/examples/customers/CustomersDetailed/index.js"],"names":["customersList","id","firstName","lastName","email","phone","location","status","statusText","default","success","warning","danger","customersDetailedActionList","name","icon","customersDetailedOrders","_toConsumableArray","Array","map","Math","floor","random","customersDetailedOrdersSteps","title","completed","ongoing","selected","customersDetailedLatestInquiry","date","numMessages","resolved","message","customersDetailedPreviousInquiries","keys","i","concat","actionList","window","dg","createNumArray","length","baseNum","addNum","customers_toConsumableArray","Customers","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","customerIndex","Component","init","setState","customersDetailedElement","document","getElementById","scrollTo","top","offsetTop","left","behavior","_this2","customersDetailedTabs","component","test","react_default","a","createElement","Fragment","CustomersDetailedOrders","CustomersDetailedInquiries","CustomersDetailedCharts","customerIdName","customerOrders","customerInquiries","CustomersDetailedSettings","utils","CustomersOverview","setCustomerIndex","CustomersDetailed","customer","propTypes","PropTypes","bool","__webpack_require__","r","__webpack_exports__","d","Addon","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_ref","type","value","color","disabled","className","Feedback","_ref2","InputGroup","_ref3","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","opt","key","data-success","data-error","string","isRequired","oneOf","array","oneOfType","Checkbox","checked","defaultChecked","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","data-datepicker","data-datepicker-format","data-datepicker-time","data-datepicker-min","data-datepicker-max","data-datepicker-value","data-datepicker-months","data-datepicker-fulldate","data-datepicker-mode","data-datepicker-allowinput","data-required","FormControlText","text","Radio","Rangeslider","step","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","FormComponents_Checkbox","FormComponents_Datepicker","FormComponents_FormControlText","FormComponents_Radio","FormComponents_Rangeslider","FormComponents_Togglebox","MediaObject","size","imgUrl","heading","textSmall","mediaRight","muted","mediaClasses","iconClasses","src","headingClasses","mediaHeading","ActionLink","link","otherProps","_objectWithoutProperties","newTab","href","rel","target","ActionLinkContent","linkText","badge","smallText","multiline","shape","_components_FormComponents__WEBPACK_IMPORTED_MODULE_1__","datepicker","CustomersDetailedDatePickerGroup","useEffect","DefaultSteps","subtitle","StepContent","RenderSteps","steps","clickable","RenderStepsNav","_ref4","clickableItem","some","item","arrowLeft","arrowRight","Steps","_ref5","vertical","stepsClasses","Chart","_this$props","options","colorPool","chart","object","arrayOf","CustomersDetailedDialog","role","aria-modal","aria-labelledby","aria-describedby","data-dialog-close","exact","datasetDataLength","totalNumMessages","reduce","accumulator","inquiry","_components_Chart__WEBPACK_IMPORTED_MODULE_2__","data","labels","toString","datasets","fill","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","filter","CustomersDetailedInquiryCard","_CustomersDetailedDatePickerGroup__WEBPACK_IMPORTED_MODULE_2__","_components_MediaObject__WEBPACK_IMPORTED_MODULE_3__","_components_Steps__WEBPACK_IMPORTED_MODULE_3__","_components_ActionLink__WEBPACK_IMPORTED_MODULE_4__","order","_components_InputGroup__WEBPACK_IMPORTED_MODULE_2__","dialog","tabs","tabIndex","tabScrollState","setScrollState","e","preventDefault","tabScroll","scrollStart","scrollLeft","scrollTotalAmount","offsetLeft","offsetWidth","_utils__WEBPACK_IMPORTED_MODULE_2__","language","showCasePanel","codeFigure","aria-haspopup","onClick","data-dialog-open","_components_CustomersDetailedDialog___WEBPACK_IMPORTED_MODULE_3__","tab","selectTab"],"mappings":"qjBAEO,IAAMA,EAAgB,CACzB,CACIC,GAAI,KACJC,UAAW,OACXC,SAAU,WACVC,MAAO,0BACPC,MAAO,iBACPC,SAAU,QACVC,OAAQ,WAEZ,CACIN,GAAI,KACJC,UAAW,OACXC,SAAU,WACVC,MAAO,0BACPC,MAAO,iBACPC,SAAU,YACVC,OAAQ,WAEZ,CACIN,GAAI,KACJC,UAAW,MACXC,SAAU,WACVC,MAAO,yBACPC,MAAO,iBACPC,SAAU,OACVC,OAAQ,WAEZ,CACIN,GAAI,KACJC,UAAW,OACXC,SAAU,WACVC,MAAO,0BACPC,MAAO,iBACPC,SAAU,SACVC,OAAQ,WAEZ,CACIN,GAAI,KACJC,UAAW,SACXC,SAAU,SACVC,MAAO,0BACPC,MAAO,iBACPC,SAAU,aACVC,OAAQ,UAEZ,CACIN,GAAI,KACJC,UAAW,QACXC,SAAU,cACVC,MAAO,8BACPC,MAAO,iBACPC,SAAU,QACVC,OAAQ,WAEZ,CACIN,GAAI,KACJC,UAAW,QACXC,SAAU,cACVC,MAAO,8BACPC,MAAO,iBACPC,SAAU,YACVC,OAAQ,YAIHC,EAAa,CACtBC,QAAS,MACTC,QAAS,YACTC,QAAS,OACTC,OAAQ,WAGCC,EAA8B,CACvC,CACIC,KAAM,OACNC,KAAM,QAEV,CACID,KAAM,SACNC,KAAM,WAIDC,EAA0BC,EAAIC,MAAM,KAAKC,IAAI,kBAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,MAExFC,EAA+B,CACxC,CACIC,MAAO,eACPC,WAAW,GAEf,CACID,MAAO,iBACPE,SAAS,EACTC,UAAU,GAEd,CACIH,MAAO,iBAEX,CACIA,MAAO,oBAIFI,EAAiC,CAC1C3B,GAAI,gBACJ4B,KAAM,aACNC,YAAa,EACbC,UAAU,EACVC,QAAS,ySAMAC,EAAqChB,EAAIC,MAAM,IAAIgB,QAAQf,IAAI,SAAAgB,GAAC,MAAK,CAC9ElC,GAAI,aAAFmC,OAAeD,GACjBN,KAAM,GAAFO,OAAKD,EAAI,GAAT,KAAAC,OAAehB,KAAKC,MAAM,GAAS,GAAJc,GAAW,GAAK,IAAM,IAArDC,OAA0DhB,KAAKC,MAAM,GAAS,GAAJc,GAA1E,OAAAC,OAAwF,GAAKD,EAAI,GAAK,IAAM,IAA5GC,OAAiH,GAAKD,GAC1HL,YAAaV,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAC9CS,SAAUX,KAAKE,SAAW,GAC1BU,QAAS,oDAAFI,OAAsDD,EAAtD,4BAAAC,OAAkFD,EAAI,GAAtF,KAAAC,OAA4FhB,KAAKC,MAAM,GAAS,GAAJc,GAAW,GAAK,IAAM,IAAlIC,OAAuIhB,KAAKC,MAAM,GAAS,GAAJc,GAAvJ,OAAAC,OAAqK,GAAKD,EAAI,GAAK,IAAM,IAAzLC,OAA8L,GAAKD,M,goCCrGtME,EAAeC,OAAOC,GAAtBF,WAEFG,EAAiB,SAACC,EAAQC,EAASC,GAAlB,OACnBC,EAAI1B,MAAMuB,IAAStB,IAAI,kBACnBC,KAAKC,MAAMD,KAAKE,SAAWqB,GAAUvB,KAAKC,MAAMD,KAAKE,SAAWqB,GAAUvB,KAAKC,MAAMD,KAAKE,SAAWqB,GACrGvB,KAAKC,MAAMD,KAAKE,SAAWqB,GAAUvB,KAAKC,MAAMD,KAAKE,SAAWqB,GAAUD,KAI5EG,E,YACF,SAAAA,EAAaC,GAAO,IAAAC,EAAA,O,4FAAAC,CAAAC,KAAAJ,IAChBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACTC,cAAe,GAHHP,E,sPADAQ,gB,mDAShBlB,EAAWmB,S,0CAIXnB,EAAWmB,S,uCAGGF,GACdL,KAAKQ,SAAS,CACVH,kBAGJ,IAAMI,EAA2BC,SAASC,eAAe,sBAEzDtB,OAAOuB,SAAS,CACZC,IAAKJ,EAAyBK,UAAY,IAC1CC,KAAM,EACNC,SAAU,c,+BAIR,IAAAC,EAAAjB,KAGAkB,EAAwB,CAC1B,CACIrD,KAAM,gBACNsD,UAAWnB,KAAKH,MAAMuB,KAClBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEAH,EAAAC,EAAAC,cAACE,EAAA,QAAD,CACInD,6BAA8BA,EAC9BP,wBAAyBA,KAGrC,CACIF,KAAM,qBACNsD,UAAWnB,KAAKH,MAAMuB,KAClBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEAH,EAAAC,EAAAC,cAACG,EAAA,QAAD,CACI/C,+BAAgCA,EAChCK,mCAAoCA,KAGhD,CACInB,KAAM,iBACNsD,UAAWnB,KAAKH,MAAMuB,KAClBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEAH,EAAAC,EAAAC,cAACI,EAAA,QAAD,CACIC,eAAc,GAAAzC,OAAKpC,EAAciD,KAAKI,MAAMC,eAAerD,GAA7C,KAAAmC,OAAmDpC,EAAciD,KAAKI,MAAMC,eAAepD,UAA3F,KAAAkC,OAAwGpC,EAAciD,KAAKI,MAAMC,eAAenD,UAC9J2E,eAAc,GAAA1C,OAAAQ,EAAM5B,GAAN,CAA+B,OAC7C+D,kBAAiB,GAAA3C,OAAAQ,EAAMX,GAAN,CAA0CL,IAC3DY,eAAgBA,KAG5B,CACI1B,KAAM,WACNsD,UAAWnB,KAAKH,MAAMuB,KAClBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,MAEAH,EAAAC,EAAAC,cAACQ,EAAA,QAAD,QAIZ,OACIV,EAAAC,EAAAC,cAACS,EAAA,aAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,QAAD,CACIC,iBAAkB,SAAA7B,GAAa,OAAIY,EAAKiB,iBAAiB7B,IACzDtD,cAAeA,EACfQ,WAAYA,IAEhB8D,EAAAC,EAAAC,cAACY,EAAA,QAAD,CACIC,SAAUrF,EAAciD,KAAKI,MAAMC,eACnCa,sBAAuBA,EACvBtD,4BAA6BA,EAC7BL,WAAYA,U,gCAOhCqC,EAAUyC,UAAY,CAClBjB,KAAMkB,IAAUC,MAGL3C,a,gCC/Hf4C,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIaN,EAAQ,SAACQ,GAAD,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,MAAOC,EAAvBJ,EAAuBI,SAAvB,MACP,WAATH,EACGP,EAAAxB,EAAAC,cAAA,UAAQ8B,KAAK,SAASI,UAAS,WAAAtE,OAAaoE,GAASC,SAAUA,GAC1DF,GAEHR,EAAAxB,EAAAC,cAAA,QAAMkC,UAAU,qBAA+B,SAATJ,EAAmBP,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAkBH,GAAaA,IAGzGI,EAAW,SAACC,GAAD,IAAG7F,EAAH6F,EAAG7F,KAAH,OACbgF,EAAAxB,EAAAC,cAAA,QAAMkC,UAAU,yBAAyB,SACrCX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAkB3F,GAAU,SAI3C8F,EAAa,SAACC,GAwBd,IAvBF7G,EAuBE6G,EAvBF7G,GACAqG,EAsBEQ,EAtBFR,KACAS,EAqBED,EArBFC,YACAC,EAoBEF,EApBFE,QACAC,EAmBEH,EAnBFG,SACAC,EAkBEJ,EAlBFI,SACAC,EAiBEL,EAjBFK,aACAC,EAgBEN,EAhBFM,aACAX,EAeEK,EAfFL,SACAY,EAcEP,EAdFO,SACAC,EAaER,EAbFQ,MACAC,EAYET,EAZFS,gBACAC,EAWEV,EAXFU,cACAC,EAUEX,EAVFW,YACAC,EASEZ,EATFY,WACAC,EAQEb,EARFa,eACAC,EAOEd,EAPFc,aACAC,EAMEf,EANFe,YACAC,EAKEhB,EALFgB,gBACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,UACAC,EAEEnB,EAFFmB,aACAC,EACEpB,EADFoB,eAEMC,EAAQ,CACV7B,KAAMA,GAAQ,KACdI,UAAW,eACXzG,GAAIA,GAAM,KACV8G,YAAaA,GAAe,KAC5BI,aAAcA,GAAgB,GAC9BV,SAAUA,GAAY,KACtBY,SAAUA,GAAY,KACtBD,aAAcA,GAAgB,KAC9BF,SAAUA,GAAY,KACtBF,QAASA,EAAU,GAAK,KACxBoB,gBAAiBnB,EAAW,GAAK,MAG/BoB,EAAkBC,IACpB,cACAf,EAAkB,OAAHnF,OAAUmF,GAAoB,KAC7CQ,EAAe,eAAiB,MAGpC,OACIhC,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cAAc,KACxBY,EAAQvB,EAAAxB,EAAAC,cAAA,SAAO+D,QAAStI,GAAKqH,GAAiB,KAAMA,EAAQ,KAAO,KACpEvB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAW2B,GAAkB,KAC7BZ,EAAc1B,EAAAxB,EAAAC,cAACqB,EAAD,CAAOS,KAAMoB,EAAYnB,MAAOkB,EAAajB,MAAOmB,EAAgBlB,SAAUA,IAAe,KAAOgB,EAAc,KAAO,KAC9H,aAATnB,EACGP,EAAAxB,EAAAC,cAAA,WAAc2D,GACH,WAAT7B,EACEP,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,eAAeD,SAAUA,EAAUY,SAAUA,GAAW,SACrEG,EAAcrG,IAAI,SAACqH,EAAKrG,GAAN,OACf4D,EAAAxB,EAAAC,cAACsB,EAAA,SAAD,CAAU2C,IAAKD,EAAMrG,GACjB4D,EAAAxB,EAAAC,cAAA,cAASgE,GAAerG,IAAMqF,EAAc/E,OAAS,EAAK,SAAW,MAEzE,QAGRsD,EAAAxB,EAAAC,cAAA,QAAW2D,GAClB,KACAJ,EAAehC,EAAAxB,EAAAC,cAACmC,EAAD,CAAU5F,KAAMgH,IAAmB,KAfvD,IAe8DA,EAAe,KAAO,KAC/EH,EAAe7B,EAAAxB,EAAAC,cAACqB,EAAD,CAAOS,KAAMuB,EAAatB,MAAOqB,EAAcpB,MAAOsB,EAAiBrB,SAAUA,IAAe,KAAOmB,EAAe,KAAO,MAEhJI,EAAYjC,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aAAagC,eAAcR,GAAkB,KAAMS,aAAYV,GAAgB,MAAOD,GAAmB,OAKjJnB,EAAWvB,UAAY,CACnBgB,KAAMf,IAAUqD,OAAOC,WACvB5I,GAAIsF,IAAUqD,OACd7B,YAAaxB,IAAUqD,OACvB5B,QAASzB,IAAUqD,OACnB3B,SAAU1B,IAAUC,KACpB0B,SAAU3B,IAAUC,KACpB2B,aAAc5B,IAAUqD,OACxBxB,aAAc7B,IAAUqD,OACxBnC,SAAUlB,IAAUC,KACpB6B,SAAU9B,IAAUC,KACpB8B,MAAO/B,IAAUqD,OACjBrB,gBAAiBhC,IAAUuD,MAAM,CAAC,UAAW,QAAS,KACtDtB,cAAejC,IAAUwD,MACzBtB,YAAalC,IAAUqD,OACvBlB,WAAYnC,IAAUuD,MAAM,CAAC,SAAU,OAAQ,KAC/CnB,eAAgBpC,IAAUuD,MAAM,CAAC,YAAa,UAAW,gBACzDlB,aAAcrC,IAAUqD,OACxBf,YAAatC,IAAUuD,MAAM,CAAC,SAAU,OAAQ,KAChDhB,gBAAiBvC,IAAUuD,MAAM,CAAC,YAAa,UAAW,gBAC1Df,aAAcxC,IAAUqD,OACxBZ,UAAWzC,IAAUyD,UAAU,CAC3BzD,IAAUqD,OACVrD,IAAUC,OAEdyC,aAAc1C,IAAUqD,OACxBV,eAAgB3C,IAAUqD,QAGf/B,a,2ECnHToC,EAAW,SAAC5C,GAAqC,IAAnCpG,EAAmCoG,EAAnCpG,GAAIiJ,EAA+B7C,EAA/B6C,QAASzC,EAAsBJ,EAAtBI,SAAUa,EAAYjB,EAAZiB,MACjCa,EAAQ,CACV7B,KAAM,WACNrG,GAAIA,GAAM,KACVwG,SAAUA,GAAY,KACtB0C,eAAgBD,GAAW,MAG/B,OACI5E,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YAAY,KACvBpC,EAAAC,EAAAC,cAAA,QAAW2D,GAAU,KACpBb,EAAQhD,EAAAC,EAAAC,cAAA,SAAO+D,QAAStI,GAAKqH,GAAiB,KAAMA,EAAQ,KAAO,OAKhF2B,EAAS3D,UAAY,CACjBrF,GAAIsF,IAAUqD,OACdM,QAAS3D,IAAUC,KACnBiB,SAAUlB,IAAUC,KACpB8B,MAAO/B,IAAUqD,QAGNK,Q,QCtBTG,EAAa,SAAC/C,GAAwH,IAAtHgD,EAAsHhD,EAAtHgD,OAAQC,EAA8GjD,EAA9GiD,KAAMC,EAAwGlD,EAAxGkD,IAAKC,EAAmGnD,EAAnGmD,IAAKC,EAA8FpD,EAA9FoD,OAAQlD,EAAsFF,EAAtFE,MAAOe,EAA+EjB,EAA/EiB,MAAOG,EAAwEpB,EAAxEoB,YAAaC,EAA2DrB,EAA3DqB,WAAYgC,EAA+CrD,EAA/CqD,SAAUC,EAAqCtD,EAArCsD,KAAMC,EAA+BvD,EAA/BuD,WAAY1C,EAAmBb,EAAnBa,SAAUjH,EAASoG,EAATpG,GACzHkI,EAAQ,CACVlI,KACAyG,UAAW,eACXJ,KAAM,OACNuD,kBAAmB,GACnBC,yBAA0BT,GAAU,KACpCU,uBAAwBT,GAAQ,KAChCU,sBAAuBT,GAAO,KAC9BU,sBAAuBT,GAAO,KAC9BU,wBAAyB3D,GAAS,KAClC4D,yBAA0BV,GAAU,KACpCW,2BAA4BV,GAAY,KACxCW,uBAAwBV,GAAQ,KAChCW,6BAA8BV,GAAc,KAC5CW,gBAAiBrD,GAAY,MAGjC,OACII,EACIhD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,cAAc,KACzBpC,EAAAC,EAAAC,cAAA,SAAO+D,QAAStI,GAAM,MAAOqH,GAAe,KAC5ChD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,eAAe,KACzBe,EAAcnD,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CAAOP,KAAOoB,EAAanB,MAAQkB,IAAmB,KAAM,KAC3EnD,EAAAC,EAAAC,cAAA,QAAW2D,GAAU,OAG7B7D,EAAAC,EAAAC,cAAA,QAAW2D,IAGvBiB,EAAW9D,UAAY,CACnB+D,OAAQ9D,IAAUuD,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,YACvDQ,KAAM/D,IAAUC,KAChB+D,IAAKhE,IAAUqD,OACfY,IAAKjE,IAAUqD,OACfa,OAAQlE,IAAUqD,OAClBrC,MAAOhB,IAAUqD,OACjBtB,MAAO/B,IAAUqD,OACjB3I,GAAIsF,IAAUqD,OACd1B,SAAU3B,IAAUC,MAGT4D,QC3CToB,EAAkB,SAACnE,GAAD,IAAGoE,EAAHpE,EAAGoE,KAAMnD,EAATjB,EAASiB,MAAT,OACpBhD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,cAAc,KACxBY,EAAQhD,EAAAC,EAAAC,cAAA,aAAQ8C,GAAiB,KAAMA,EAAQ,KAAO,KACvDhD,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,qBAAqB+D,GAAa,OAI1DD,EAAgBlF,UAAY,CACxBmF,KAAMlF,IAAUqD,OAAOC,WACvBvB,MAAO/B,IAAUqD,QAGN4B,QCZTE,EAAQ,SAACrE,GAA2C,IAAzCpG,EAAyCoG,EAAzCpG,GAAIiJ,EAAqC7C,EAArC6C,QAASzC,EAA4BJ,EAA5BI,SAAUa,EAAkBjB,EAAlBiB,MAC9Ba,EAAQ,CACV7B,KAAM,QACNrG,GAAIA,GAAM,KACVa,KAJkDuF,EAAXvF,MAIzB,KACd2F,SAAUA,GAAY,KACtB0C,eAAgBD,GAAW,MAG/B,OACI5E,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SAAS,KACpBpC,EAAAC,EAAAC,cAAA,QAAW2D,GAAU,KACpBb,EAAQhD,EAAAC,EAAAC,cAAA,SAAO+D,QAAStI,GAAKqH,GAAiB,KAAMA,EAAQ,KAAO,OAKhFoD,EAAMpF,UAAY,CACdrF,GAAIsF,IAAUqD,OACd9H,KAAMyE,IAAUqD,OAChBM,QAAS3D,IAAUC,KACnBiB,SAAUlB,IAAUC,KACpB8B,MAAO/B,IAAUqD,QAGN8B,QCzBTC,EAAc,SAACtE,GAA0H,IAAxHvF,EAAwHuF,EAAxHvF,KAAMyI,EAAkHlD,EAAlHkD,IAAKC,EAA6GnD,EAA7GmD,IAAKoB,EAAwGvE,EAAxGuE,KAAMpE,EAAkGH,EAAlGG,MAAOD,EAA2FF,EAA3FE,MAAOE,EAAoFJ,EAApFI,SAAUoE,EAA0ExE,EAA1EwE,WAAYC,EAA8DzE,EAA9DyE,iBAAkBC,EAA4C1E,EAA5C0E,kBAAmBC,EAAyB3E,EAAzB2E,mBAC5G7C,EAAQ,CACV7B,KAAM,QACNxF,OACAyI,MACAC,MACAoB,OACAzD,aAAcZ,EACdE,YAaJ,OACInC,EAAAC,EAAAC,cAAA,OAAKkC,UAAS,2BAAAtE,OAA6BoE,GAAgB,QAA7C,WAAApE,OAA8D4I,GAA0C,UAAY,KAC9H1G,EAAAC,EAAAC,cAAA,QAAW2D,GAAS0C,EAAa,KAAO,KACvCA,EAAavG,EAAAC,EAAAC,cAbH,kBACfF,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,eAAgB,SAC9BpC,EAAAC,EAAAC,cAAA,SAAI,WACCsG,EAAmBxG,EAAAC,EAAAC,cAAA,YAAOsG,GAA2B,KAAMA,EAAmB,WAAa,KAC5FxG,EAAAC,EAAAC,cAAA,QAAMyG,iBAAA,GAAe1E,GAAc,WAClCwE,EAAoBzG,EAAAC,EAAAC,cAAA,YAAOuG,GAA4B,KAAMA,EAAoB,SAAW,MAC5F,SAOS,MAAiB,KAAMF,EAAa,KAAO,OAKrEF,EAAYrF,UAAY,CACpBxE,KAAMyE,IAAUqD,OAChBW,IAAKhE,IAAU2F,OACf1B,IAAKjE,IAAU2F,OACfN,KAAMrF,IAAU2F,OAChB1E,MAAOjB,IAAUuD,MAAM,CAAC,QAAS,UAAW,YAC5CvC,MAAOhB,IAAU2F,OACjBzE,SAAUlB,IAAUC,KACpBqF,WAAYtF,IAAUC,KACtBsF,iBAAkBvF,IAAUqD,OAC5BmC,kBAAmBxF,IAAUqD,OAC7BoC,mBAAoBzF,IAAUqD,QAGnB+B,QC3CTQ,EAAY,SAAC9E,GAAqC,IAAnCpG,EAAmCoG,EAAnCpG,GAAIiJ,EAA+B7C,EAA/B6C,QAASzC,EAAsBJ,EAAtBI,SAAUa,EAAYjB,EAAZiB,MAClCa,EAAQ,CACV7B,KAAM,WACNrG,GAAIA,GAAM,KACVwG,SAAUA,GAAY,KACtB0C,eAAgBD,GAAW,MAG/B,OACI5E,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aAAa,KACxBpC,EAAAC,EAAAC,cAAA,QAAW2D,GAAU,KACpBb,EAAQhD,EAAAC,EAAAC,cAAA,SAAO+D,QAAStI,GAAKqH,GAAiB,KAAMA,EAAQ,KAAO,OAKhF6D,EAAU7F,UAAY,CAClBrF,GAAIsF,IAAUqD,OACdM,QAAS3D,IAAUC,KACnBiB,SAAUlB,IAAUC,KACpB8B,MAAO/B,IAAUqD,QAGNuC,QC1Bf1F,EAAAG,EAAAD,EAAA,6BAAAyF,IAAA3F,EAAAG,EAAAD,EAAA,+BAAA0F,IAAA5F,EAAAG,EAAAD,EAAA,oCAAA2F,IAAA7F,EAAAG,EAAAD,EAAA,0BAAA4F,IAAA9F,EAAAG,EAAAD,EAAA,gCAAA6F,IAAA/F,EAAAG,EAAAD,EAAA,8BAAA8F,IAOe9F,EAAA,SACXsD,WACAG,aACAoB,kBACAE,QACAC,cACAQ,c,gCCbJ1F,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIMuF,EAAc,SAACrF,GAAwE,IAAtEsF,EAAsEtF,EAAtEsF,KAAMC,EAAgEvF,EAAhEuF,OAAQ7K,EAAwDsF,EAAxDtF,KAAM8K,EAAkDxF,EAAlDwF,QAASpB,EAAyCpE,EAAzCoE,KAAMqB,EAAmCzF,EAAnCyF,UAAWC,EAAwB1F,EAAxB0F,WAAYC,EAAY3F,EAAZ2F,MAcvEC,EAAe3D,IACjB,QACAyD,EAAa,cAAgB,KAC7BJ,EAAO,SAAHvJ,OAAYuJ,GAAS,MAGvBO,EAAc5D,IAChB,iBACA0D,EAAQ,aAAe,MAG3B,OACIjG,EAAAxB,EAAAC,cAAA,OAAKkC,UAAWuF,GACVL,GAAU7K,EACRgF,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aAAa,KACvBkF,EAAS7F,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,SAAGsB,EAAAxB,EAAAC,cAAA,OAAK2H,IAAKP,IAAb,IAAyB,KAAzB,KAAqC,KAC9C7K,EAAOgF,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,SAAGsB,EAAAxB,EAAAC,cAAA,KAAGkC,UAAWwF,GAAcnL,GAA/B,IAA0C,KAA1C,KAAsD,MAEhE,KACNgF,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cAhCF,WACjB,IAAM0F,EAAiB9D,IAAW0D,EAAQ,aAAe,MAEzD,OAAQL,GACJ,IAAK,KACD,OAAO5F,EAAAxB,EAAAC,cAAA,MAAIkC,UAAW0F,GAAiBP,GAC3C,IAAK,KACD,OAAO9F,EAAAxB,EAAAC,cAAA,MAAIkC,UAAW0F,GAAiBP,GAC3C,QACI,OAAO9F,EAAAxB,EAAAC,cAAA,MAAIkC,UAAW0F,GAAiBP,IAwBtCQ,GACDtG,EAAAxB,EAAAC,cAAA,SAAIsH,EAAY/F,EAAAxB,EAAAC,cAAA,aAAQiG,GAAgBA,MAMxDiB,EAAYpG,UAAY,CACpBqG,KAAMpG,IAAUuD,MAAM,CAAC,KAAM,OAC7B8C,OAAQrG,IAAUqD,OAClB7H,KAAMwE,IAAUqD,OAChBiD,QAAStG,IAAUqD,OAAOC,WAC1B4B,KAAMlF,IAAUqD,OAChBkD,UAAWvG,IAAUC,KACrBuG,WAAYxG,IAAUC,KACtBwG,MAAOzG,IAAUC,MAGNkG,a,+eCrDf,IAAMY,EAAa,SAAAxJ,GAAS,IAChByJ,EAAwBzJ,EAAxByJ,KAASC,EADOC,EACQ3J,EADR,UAGxB,OACIiD,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACK+H,EAAWE,OACR3G,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kCAAkCiG,KAAMJ,GAAc,IAAKK,IAAI,sBAAsBC,OAAO,UAAU,KAC/G9G,EAAAxB,EAAAC,cAACsI,EAAsBN,IAG3BzG,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,cAAciG,KAAK,KAAM,KAClC5G,EAAAxB,EAAAC,cAACsI,EAAsBN,MAOrCM,EAAoB,SAACzG,GAAD,IAAG0G,EAAH1G,EAAG0G,SAAUC,EAAb3G,EAAa2G,MAAOC,EAApB5G,EAAoB4G,UAAWC,EAA/B7G,EAA+B6G,UAAWR,EAA1CrG,EAA0CqG,OAA1C,OACtB3G,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACKiI,EAAS3G,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KAAEsB,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,eAA8C,MAAW,KACpEsG,EAAQjH,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KAAEsB,EAAAxB,EAAAC,cAAA,QAAMkC,UAAS,SAAAtE,OAAW4K,EAAM1G,OAAS0G,EAAMvC,MAAa,MAAW,KACjFyC,EACGnH,EAAAxB,EAAAC,cAAA,QAAMkC,UAAU,yBAAyB,KACpCqG,EAAU,KACVE,EAAYlH,EAAAxB,EAAAC,cAAA,QAAMkC,UAAU,cAAcuG,GAAoB,KAAO,MAG1ElH,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACKsI,EAAU,KACVE,EAAYlH,EAAAxB,EAAAC,cAAA,QAAMkC,UAAU,cAAcuG,GAAoB,KAAO,MAE5E,OAIVX,EAAWhH,UAAY,CACnBxC,MAAOyC,IAAU4H,MAAM,CACnBJ,SAAUxH,IAAUqD,OAAOC,WAC3BmE,MAAOzH,IAAU4H,MAAM,CACnB7G,KAAMf,IAAUqD,OAAOC,WACvB4B,KAAMlF,IAAUqD,OAAOC,aAE3BoE,UAAW1H,IAAUqD,OACrBsE,UAAW3H,IAAUC,KACrBkH,OAAQnH,IAAUC,KAClB+G,KAAMhH,IAAUqD,UAIxBkE,EAAkBxH,UAAY,CAC1ByH,SAAUxH,IAAUqD,OAAOC,WAC3BmE,MAAOzH,IAAU4H,MAAM,CACnB7G,KAAMf,IAAUqD,OAAOC,WACvB4B,KAAMlF,IAAUqD,OAAOC,aAE3BoE,UAAW1H,IAAUqD,OACrBsE,UAAW3H,IAAUC,KACrBkH,OAAQnH,IAAUC,MAGP8G,a,gCChEf7G,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAsH,EAAA3H,EAAA,IAIQ4H,EAAe/K,OAAOC,GAAtB8K,WAkCOC,UAhC0B,WAMrC,OAJAC,oBAAU,WACNF,EAAW7J,SAIXuC,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACXX,EAAAxB,EAAAC,cAAC4I,EAAA,WAAD,CACI7G,MAAM,aACNe,MAAM,QACNI,WAAW,OACXD,YAAY,QACZiC,UAAQ,EACRzJ,GAAG,gCAGX8F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACXX,EAAAxB,EAAAC,cAAC4I,EAAA,WAAD,CACI7G,MAAM,aACNe,MAAM,MACNI,WAAW,OACXD,YAAY,QACZiC,UAAQ,EACRzJ,GAAG,iC,gCC/BvBwF,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,iCAAA6H,IAAA,IAAA1H,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIMqH,EAAe,CACjB,CACIhM,MAAO,WACPiM,SAAU,iBACVhM,WAAW,GAEf,CACID,MAAO,WACPE,SAAS,GAEb,CACIF,MAAO,aACPG,UAAU,GAEd,CACIH,MAAO,cAITkM,EAAc,SAACrH,GAAD,IAAG5E,EAAH4E,EAAG5E,UAAWgM,EAAdpH,EAAcoH,SAAUjM,EAAxB6E,EAAwB7E,MAAxB,OAChBuE,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACKhD,EAAYsE,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KAAEsB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,6BAAf,SAAyD,MAAY,KACnFlF,EACAiM,EAAW1H,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KAAI,KAAMsB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,mBAAmB+G,IAAqB,OAI/EE,EAAc,SAAC/G,GAAD,IAAGgH,EAAHhH,EAAGgH,MAAH,OAChB7H,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACKmJ,EAAMzM,IAAI,SAAA2F,EAA+D3E,GAA/D,IAAGX,EAAHsF,EAAGtF,MAAOiM,EAAV3G,EAAU2G,SAAUhM,EAApBqF,EAAoBrF,UAAWC,EAA/BoF,EAA+BpF,QAASC,EAAxCmF,EAAwCnF,SAAUkM,EAAlD/G,EAAkD+G,UAAlD,OACP9H,EAAAxB,EAAAC,cAAA,MAAIiE,IAAKtG,EAAGuE,UAAW4B,IAAW7G,EAAY,kBAAoB,KAC9DC,EAAU,gBAAkB,KAC5BC,EAAW,iBAAmB,OAC5BkM,EACE9H,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KAAI,KAAJ,IAAWsB,EAAAxB,EAAAC,cAAA,SAAGuB,EAAAxB,EAAAC,cAACkJ,EAAD,CAAajM,UAAWA,EAAWgM,SAAUA,EAAUjM,MAAOA,KAA5E,IAA2F,KAA3F,KAEAuE,EAAAxB,EAAAC,cAACkJ,EAAD,CAAajM,UAAWA,EAAWgM,SAAUA,EAAUjM,MAAOA,SAO5EsM,EAAiB,SAACC,GAAc,IAAZH,EAAYG,EAAZH,MACtB,IAAKA,EACD,OAAO,KAGX,IAAMI,EAAgBJ,EAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKL,YAExCM,EAAYH,EAAgBjI,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,iCAAf,uBAA2E,KACvG0H,EAAaJ,EAAgBjI,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,kCAAf,wBAA6E,KAEhH,OAAOX,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACHsB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,oBACTyH,EACFpI,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,yBAAf,UACE0H,KAKRC,EAAQ,SAACC,GAAwB,IAAtBV,EAAsBU,EAAtBV,MAAOW,EAAeD,EAAfC,SACdC,EAAelG,IACjB,QACAiG,EAAW,iBAAmB,MAGlC,OAAQxI,EAAAxB,EAAAC,cAAA,OAAKkC,UAAW8H,GACpBzI,EAAAxB,EAAAC,cAAA,UACKoJ,EAAQ7H,EAAAxB,EAAAC,cAACmJ,EAAD,CAAaC,MAAOA,IAAY7H,EAAAxB,EAAAC,cAACmJ,EAAD,CAAaC,MAAOJ,KAEjEzH,EAAAxB,EAAAC,cAACsJ,EAAD,CAAgBF,MAAOA,MAI/BS,EAAM/I,UAAY,CACdsI,MAAOrI,IAAUwD,MACjBwF,SAAUhJ,IAAUC,KACpBqI,UAAWtI,IAAUC,MAGV6I,a,s3BCnFTI,E,8ZAAclL,gB,kDACK,IAAAmL,EACkBzL,KAAKH,MAAhC7C,EADSyO,EACTzO,GAAI0O,EADKD,EACLC,QAASC,EADJF,EACIE,UAErBrM,GAAGsM,MAAM5O,EAAI0O,EAASC,K,+BAItB,OACI7I,EAAAxB,EAAAC,cAAA,UAAQvE,GAAIgD,KAAKH,MAAM7C,U,gCAKnCwO,EAAMnJ,UAAY,CACdrF,GAAIsF,IAAUqD,OAAOC,WACrB8F,QAASpJ,IAAUuJ,OAAOjG,WAC1B+F,UAAWrJ,IAAUwJ,QAAQxJ,IAAUqD,SAG5B6F,a,gCCvBfhJ,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAGM+I,EAA0B,SAAC3I,GAAD,IAAGhB,EAAHgB,EAAGhB,SAAH,OAC5BU,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,SAASzG,GAAG,4BAA4BgP,KAAK,SAASC,aAAW,OAAOC,kBAAgB,iBAAiBC,mBAAiB,qBACrIrJ,EAAAxB,EAAAC,cAAA,eACIuB,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,gBAAgBzG,GAAG,kBACjC8F,EAAAxB,EAAAC,cAAA,6BAAqBa,EAASpF,GAA9B,IAAmCoF,EAASnF,UAA5C,IAAwDmF,EAASlF,SAAjE,KACA4F,EAAAxB,EAAAC,cAAA,UAAQ8B,KAAK,SAASI,UAAU,gBAC5BX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,WAGRX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cAAczG,GAAG,qBAC5B8F,EAAAxB,EAAAC,cAAA,qEAA6Da,EAASpF,GAAtE,IAA2EoF,EAASnF,UAApF,IAAgGmF,EAASlF,SAAzG,MAEJ4F,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,iBACdX,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,kBAAkBJ,KAAK,SAAS+I,oBAAkB,QAApE,UACAtJ,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,sBAAsBJ,KAAK,UAA7C,cAMhB0I,EAAwB1J,UAAY,CAChCD,SAAUE,IAAU+J,MAAM,CACtBrP,GAAIsF,IAAUqD,OAAOC,WACrB3I,UAAWqF,IAAUqD,OAAOC,WAC5B1I,SAAUoF,IAAUqD,OAAOC,WAC3BzI,MAAOmF,IAAUqD,OAAOC,WACxBxI,MAAOkF,IAAUqD,OAAOC,WACxBvI,SAAUiF,IAAUqD,OAAOC,WAC3BtI,OAAQgF,IAAUqD,OAAOC,aAC1BA,YAGQmG,a,waC9Bf,IAAMpK,EAA0B,SAACyB,GAA0E,IAAxExB,EAAwEwB,EAAxExB,eAAgBC,EAAwDuB,EAAxDvB,eAAgBC,EAAwCsB,EAAxCtB,kBAAmBvC,EAAqB6D,EAArB7D,eAC5E+M,EAAoBzK,EAAerC,OACnC+M,EAAmBzK,EAAkB0K,OAAO,SAACC,EAAaC,GAAd,OAA0BD,EAAcC,EAAQ7N,aAAa,GAE/G,OACIiE,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACIsB,EAAAxB,EAAAC,cAAA,oBACAuB,EAAAxB,EAAAC,cAAA,wCACAuB,EAAAxB,EAAAC,cAACoL,EAAA,QAAD,CACI3P,GAAG,8BACH0O,QAAS,CACLrI,KAAM,MACNuJ,KAAM,CACFC,OAAQ7O,EAAIC,MAAMqO,GAAmBrN,QAAQf,IAAI,SAAAgB,GAAC,OAAK,MAAQoN,EAAoB,GAAKpN,GAAG4N,aAC3FC,SAAU,CACN,CACI1I,MAAOzC,EACPgL,KAAM/K,EACNmL,MAAM,GAEV,CACI3I,MAAO,oBACPuI,KAAMrN,EAAe+M,EAAmB,IAAM,KAC9CU,MAAM,GAEV,CACI3I,MAAO,YACPuI,KAAMrN,EAAe+M,EAAmB,IAAK,KAC7CU,MAAM,KAIlBtB,QAAS,CACLuB,OAAQ,CACJC,MAAO,CAAC,CACJC,WAAY,CACRC,SAAS,EACTC,YAAa,4BAQrCvK,EAAAxB,EAAAC,cAAA,uBACAuB,EAAAxB,EAAAC,cAAA,wCACAuB,EAAAxB,EAAAC,cAACoL,EAAA,QAAD,CACI3P,GAAG,8BACH0O,QAAS,CACLrI,KAAM,OACNuJ,KAAM,CACFC,OAAQ/K,EAAkB5D,IAAI,SAAAwO,GAAO,OAAIA,EAAQ9N,OACjDmO,SAAU,CACN,CACI1I,MAAOzC,EACPgL,KAAM9K,EAAkB5D,IAAI,SAAAwO,GAAO,OAAIA,EAAQ7N,cAC/CmO,MAAM,GAEV,CACI3I,MAAO,oBACPuI,KAAMrN,EAAeuC,EAAkBtC,OAAQ,EAAG,GAClDwN,MAAM,KAIlBtB,QAAS,CACLuB,OAAQ,CACJC,MAAO,CAAC,CACJI,MAAO,CACHC,aAAa,UAOrCzK,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACXX,EAAAxB,EAAAC,cAAA,iCACAuB,EAAAxB,EAAAC,cAACoL,EAAA,QAAD,CAAO3P,GAAG,8BACN0O,QAAS,CACLrI,KAAM,MACNuJ,KAAM,CACFC,OAAQ,CAAC,WAAY,aAAc,WACnCE,SAAU,CACN,CACIH,KAAM,CAAC9K,EAAkB0L,OAAO,SAAAd,GAAO,OAAIA,EAAQ5N,WAAUU,OAAQsC,EAAkB0L,OAAO,SAAAd,GAAO,OAAKA,EAAQ5N,WAAUU,OAAQ,UAO5JsD,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACXX,EAAAxB,EAAAC,cAAA,kCACAuB,EAAAxB,EAAAC,cAACoL,EAAA,QAAD,CAAO3P,GAAG,8BACN0O,QAAS,CACLrI,KAAM,MACNuJ,KAAM,CACFC,OAAQ,CAAC,WAAY,WAAY,YAAa,aAAc,SAC5DE,SAAU,CACN,CACIH,KAAM,CACFzO,KAAKC,MAAyB,GAAnBmO,GACXpO,KAAKC,MAAyB,GAAnBmO,GACXpO,KAAKC,MAAyB,IAAnBmO,GACXpO,KAAKC,MAAyB,GAAnBmO,GACXpO,KAAKC,MAAyB,IAAnBmO,cAcvD5K,EAAwBU,UAAY,CAChCT,eAAgBU,IAAUqD,OAAOC,WACjC/D,eAAgBS,IAAUwJ,QAAQxJ,IAAU2F,QAAQrC,WACpD9D,kBAAmBQ,IAAUwJ,QAAQxJ,IAAU+J,MAAM,CACjDrP,GAAIsF,IAAUqD,OAAOC,WACrBhH,KAAM0D,IAAUqD,OAAOC,WACvB/G,YAAayD,IAAU2F,OAAOrC,WAC9B9G,SAAUwD,IAAUC,KAAKqD,WACzB7G,QAASuD,IAAUqD,OAAOC,cAC1BA,YAGOjE,a,gCC3Ifa,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,iDAAA+K,IAAA,IAAA5K,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAA0K,EAAAlL,EAAA,IAAAmL,EAAAnL,EAAA,IAMMiL,EAA+B,SAACrK,GAAD,IAAGsJ,EAAHtJ,EAAGsJ,QAAShE,EAAZtF,EAAYsF,KAAZ,OACjC5F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,uBACXX,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,eACdX,EAAAxB,EAAAC,cAAA,sBAAApC,OAAiBuN,EAAQ1P,GAAzB,OAAAmC,OAAiCuN,EAAQ9N,QAE7CkE,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,qBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,iCACXX,EAAAxB,EAAAC,cAACoM,EAAA,QAAD,CACIjF,KAAMA,EACN5K,KAAK,UACL8K,QAAS8D,EAAQ7N,YAAYiO,WAC7BtF,KAAK,aAGT1E,EAAAxB,EAAAC,cAACoM,EAAA,QAAD,CACIjF,KAAMA,EACN5K,KAAM4O,EAAQ5N,SAAW,eAAiB,WAC1C8J,QAAS8D,EAAQ5N,SAAW,WAAa,iBAKrDgE,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,sBACXX,EAAAxB,EAAAC,cAACoM,EAAA,QAAD,CACIjF,KAAK,KACL5K,KAAK,UACL8K,QAAS8D,EAAQ7N,YAAYiO,WAC7BtF,KAAK,aAGT1E,EAAAxB,EAAAC,cAACoM,EAAA,QAAD,CACIjF,KAAK,KACL5K,KAAM4O,EAAQ5N,SAAW,eAAiB,WAC1C8J,QAAS8D,EAAQ5N,SAAW,WAAa,iBAKrDgE,EAAAxB,EAAAC,cAAA,8BACAuB,EAAAxB,EAAAC,cAAA,SAAImL,EAAQ3N,UAEhB+D,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eAAcX,EAAAxB,EAAAC,cAAA,KAAGmI,KAAK,KAAR,0BAKnChI,EAA6B,SAACiC,GAAD,IAAGhF,EAAHgF,EAAGhF,+BAAgCK,EAAnC2E,EAAmC3E,mCAAnC,OAC/B8D,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACIsB,EAAAxB,EAAAC,cAAA,4BACAuB,EAAAxB,EAAAC,cAACkM,EAAD,CAA8Bf,QAAS/N,EAAgC+J,KAAK,OAE5E5F,EAAAxB,EAAAC,cAAA,gCACAuB,EAAAxB,EAAAC,cAACmM,EAAA,QAAD,MACA5K,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACVzE,EAAmCd,IAAI,SAAAwO,GAAO,OAC3C5J,EAAAxB,EAAAC,cAAA,OAAKiE,IAAKkH,EAAQ1P,GAAIyG,UAAU,mBAC5BX,EAAAxB,EAAAC,cAACkM,EAAD,CAA8Bf,QAASA,EAAShE,KAAK,aAOzE+E,EAA6BpL,UAAY,CACrCqK,QAASpK,IAAU+J,MAAM,CACrBrP,GAAIsF,IAAUqD,OAAOC,WACrBhH,KAAM0D,IAAUqD,OAAOC,WACvB/G,YAAayD,IAAU2F,OAAOrC,WAC9B9G,SAAUwD,IAAUC,KAAKqD,WACzB7G,QAASuD,IAAUqD,OAAOC,aAC3BA,WACH8C,KAAMpG,IAAUqD,OAAOC,YAG3BlE,EAA2BW,UAAY,CACnC1D,+BAAgC2D,IAAU+J,MAAM,CAC5CrP,GAAIsF,IAAUqD,OAAOC,WACrBhH,KAAM0D,IAAUqD,OAAOC,WACvB/G,YAAayD,IAAU2F,OAAOrC,WAC9B9G,SAAUwD,IAAUC,KAAKqD,WACzB7G,QAASuD,IAAUqD,OAAOC,aAC3BA,WACH5G,mCAAoCsD,IAAUwJ,QAAQxJ,IAAU+J,MAAM,CAClErP,GAAIsF,IAAUqD,OAAOC,WACrBhH,KAAM0D,IAAUqD,OAAOC,WACvB/G,YAAayD,IAAU2F,OAAOrC,WAC9B9G,SAAUwD,IAAUC,KAAKqD,WACzB7G,QAASuD,IAAUqD,OAAOC,cAC1BA,YAGOlE,a,gCCpGfc,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAA0K,EAAAlL,EAAA,IAAAoL,EAAApL,EAAA,IAAAqL,EAAArL,EAAA,IAOMf,EAA0B,SAAC2B,GAAD,IAAG9E,EAAH8E,EAAG9E,6BAA8BP,EAAjCqF,EAAiCrF,wBAAjC,OAC5B+E,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACIsB,EAAAxB,EAAAC,cAAA,0BACAuB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,6BACXX,EAAAxB,EAAAC,cAAA,mCACAuB,EAAAxB,EAAAC,cAAA,0BACAuB,EAAAxB,EAAAC,cAAA,6BACAuB,EAAAxB,EAAAC,cAAA,sCACAuB,EAAAxB,EAAAC,cAAA,2CACAuB,EAAAxB,EAAAC,cAAA,iJACAuB,EAAAxB,EAAAC,cAACsM,EAAA,QAAD,CAAqB/D,SAAS,aAAaE,UAAU,iBAAiBC,WAAW,MAGzFnH,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,yBACXX,EAAAxB,EAAAC,cAAA,uCACAuB,EAAAxB,EAAAC,cAACqM,EAAA,QAAD,CAAgBjD,MAAOrM,EAA8BgN,UAAQ,MAIrExI,EAAAxB,EAAAC,cAAA,6BACAuB,EAAAxB,EAAAC,cAACmM,EAAA,QAAD,MACC3P,EAAwBG,IAAI,SAAC4P,EAAO5O,GAAR,OACzB4D,EAAAxB,EAAAC,cAAA,OAAKiE,IAAKtG,EAAGuE,UAAU,6BACnBX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,UACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eACXX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,oBAAb,WAAAtE,OACgBD,EADhB,OAGA4D,EAAAxB,EAAAC,cAAA,sBAAApC,OACsB,EAAJD,EADlB,qBAAAC,OAC2CD,MAInD4D,EAAAxB,EAAAC,cAAA,WACIuB,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,gCAAb,KAA+CqK,KAGvDhL,EAAAxB,EAAAC,cAACsM,EAAA,QAAD,CAAqB/D,SAAS,aAAaE,UAAS,WAAA7K,OAAaD,EAAb,KAAmB+K,WAAW,SAMlGxI,EAAwBY,UAAY,CAChC/D,6BAA8BgE,IAAUwJ,QAAQxJ,IAAU4H,MAAM,CAC5D3L,MAAO+D,IAAUqD,OAAOC,WACxBnH,QAAS6D,IAAUC,KACnB/D,UAAW8D,IAAUC,KACrB7D,SAAU4D,IAAUC,QACpBqD,WACJ7H,wBAAyBuE,IAAUwJ,QAAQxJ,IAAU2F,QAAQrC,YAGlDnE,a,gaCvBAM,UAnCmB,kBAC9Be,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACIsB,EAAAxB,EAAAC,cAAA,2BACAuB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,mCACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,mBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,sBACXX,EAAAxB,EAAAC,cAAC4I,EAAA,UAAD,CAAWnN,GAAG,uCAAuCiJ,SAAO,EAAC5B,MAAM,4BACnEvB,EAAAxB,EAAAC,cAAC4I,EAAA,UAAD,CAAWnN,GAAG,uCAAuCqH,MAAM,iCAGnEvB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,mBACXX,EAAAxB,EAAAC,cAAC4I,EAAA,UAAD,CAAWnN,GAAG,uCAAuCqH,MAAM,yBAC3DvB,EAAAxB,EAAAC,cAAC4I,EAAA,UAAD,CAAWnN,GAAG,uCAAuCiJ,SAAO,EAAC5B,MAAM,6BAG3EvB,EAAAxB,EAAAC,cAAA,wCACAuB,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,YACVzF,EAAIC,MAAM,GAAGgB,QAAQf,IAAI,SAAA+M,GAAI,OAC1BnI,EAAAxB,EAAAC,cAAA,OAAKiE,IAAKyF,EAAMxH,UAAU,8BACtBX,EAAAxB,EAAAC,cAAC4I,EAAA,SAAD,CAAUnN,GAAE,wCAAAmC,OAA0C8L,GAAQhF,SAAO,EAAC5B,MAAK,iBAAAlF,OAAmB8L,EAAO,SAKjHnI,EAAAxB,EAAAC,cAAA,2BACAuB,EAAAxB,EAAAC,cAACwM,EAAA,QAAD,CACI1K,KAAK,SACLkB,cAAe,CAAC,qBAAsB,sBAAuB,qBAC7DC,YAAY,SAGhB1B,EAAAxB,EAAAC,cAAA,UAAQkC,UAAU,qBAAlB,W,w4BC9B6BpE,OAAOC,GAApCF,E,EAAAA,WAAY4O,E,EAAAA,OAAQC,E,EAAAA,KAEtB9L,E,YACF,SAAAA,EAAatC,GAAO,IAAAC,EAAA,O,4FAAAC,CAAAC,KAAAmC,IAChBrC,EAAAG,EAAAD,KAAAE,EAAAiC,GAAAhC,KAAAH,KAAMH,KACDO,MAAQ,CACT8N,SAAU,EACVC,eAAgB,MAJJrO,E,sPADQQ,gB,mDAUxBlB,EAAWmB,OACXyN,EAAOzN,OACP0N,EAAK1N,OACL0N,EAAKG,eAAe,0BAA2BpO,KAAKI,MAAM+N,kB,0CAI1DH,EAAOzN,OACP0N,EAAK1N,S,gCAGE8N,EAAGnP,GACVmP,EAAEC,iBAEF,IAAMC,EAAY7N,SAASC,eAAe,8BACpC6N,EAAcD,EAAUE,WACxBC,EAAqBL,EAAEzE,OAAO+E,WAAcJ,EAAUK,YAAc,EAAMP,EAAEzE,OAAOgF,YAAc,EAAMJ,EAE7GxO,KAAKQ,SAAS,CACV0N,SAAUhP,EACViP,eAAgB,CACZO,oBACAF,mB,+BAKF,IAAAvN,EAAAjB,KACN,OACI8C,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAE,SAAA,KACIsB,EAAAxB,EAAAC,cAAA,MAAIvE,GAAG,sBAAP,sBACA8F,EAAAxB,EAAAC,cAACsN,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDlM,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,qBACXX,EAAAxB,EAAAC,cAAA,cACIuB,EAAAxB,EAAAC,cAAA,MAAIkC,UAAU,cACVX,EAAAxB,EAAAC,cAAA,UAAIuB,EAAAxB,EAAAC,cAAA,KAAGmI,KAAK,KAAR,cACJ5G,EAAAxB,EAAAC,cAAA,UAAIuB,EAAAxB,EAAAC,cAAA,YAAOvB,KAAKH,MAAMuC,SAASpF,MAEnC8F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,oBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,OACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,qBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,kBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aACXX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,mBAEJX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cACXX,EAAAxB,EAAAC,cAAA,aAAApC,OAAQa,KAAKH,MAAMuC,SAASnF,UAA5B,KAAAkC,OAAyCa,KAAKH,MAAMuC,SAASlF,WAC7D4F,EAAAxB,EAAAC,cAAA,YAAApC,OAAOa,KAAKH,MAAMuC,SAASjF,MAA3B,KAAAgC,OAAoCa,KAAKH,MAAMuC,SAAShF,WAIpE0F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,qBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,kBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,aACXX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,mBAEJX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cACXX,EAAAxB,EAAAC,cAAA,aAAApC,OAAQa,KAAKH,MAAMuC,SAASnF,UAA5B,KAAAkC,OAAyCa,KAAKH,MAAMuC,SAASlF,eAK7E4F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,eACXX,EAAAxB,EAAAC,cAAA,OAAKvE,GAAG,gCAAgCyG,UAAU,gCAC9CX,EAAAxB,EAAAC,cAAA,UAAQvE,GAAG,mBAAmBqG,KAAK,SAASI,UAAU,gBAAgBwL,gBAAc,QAChFnM,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,cAEJX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cAAcyI,kBAAgB,oBACzCpJ,EAAAxB,EAAAC,cAAA,KAAGmI,KAAK,IAAIwF,QAAS,SAAAb,GAAC,OAAIA,EAAEC,mBAAkBxL,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,QAA9C,QACAX,EAAAxB,EAAAC,cAAA,KAAGmI,KAAK,IAAIwF,QAAS,SAAAb,GAAC,OAAIA,EAAEC,kBAAkBa,mBAAiB,6BAA4BrM,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,kBAAb,UAA3F,aAIZX,EAAAxB,EAAAC,cAAC6N,EAAA,QAAD,CAAyBhN,SAAUpC,KAAKH,MAAMuC,YAElDU,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,yBACXX,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,oBACXX,EAAAxB,EAAAC,cAAA,KAAGkC,UAAU,sBAAsBzD,KAAKH,MAAMuC,SAASjF,QAE3D2F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,oBACXX,EAAAxB,EAAAC,cAAA,SAAIvB,KAAKH,MAAMuC,SAAShF,UAIpC0F,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,iBACXX,EAAAxB,EAAAC,cAAA,8BACAuB,EAAAxB,EAAAC,cAAA,QAAMkC,UAAS,iBAAAtE,OAAmBa,KAAKH,MAAMuC,SAAS9E,SAAW0C,KAAKH,MAAMtC,WAAWyC,KAAKH,MAAMuC,SAAS9E,YAIvHwF,EAAAxB,EAAAC,cAAA,OAAKkC,UAAU,cACXX,EAAAxB,EAAAC,cAAA,OAAKvE,GAAG,0BAA0ByG,UAAU,oBAAoB,KAC5DX,EAAAxB,EAAAC,cAAA,MAAIvE,GAAG,8BACFgD,KAAKH,MAAMqB,sBAAsBhD,IAAI,SAACmR,EAAKnQ,GAAN,OAClC4D,EAAAxB,EAAAC,cAAA,MAAIiE,IAAG,YAAArG,OAAcD,GAAKuE,UAAWxC,EAAKb,MAAM8N,WAAahP,EAAI,SAAW,MAAO,KAC/E4D,EAAAxB,EAAAC,cAAA,KAAGmI,KAAK,IAAIwF,QAAS,SAAAb,GAAC,OAAIpN,EAAKqO,UAAUjB,EAAGnP,KAAKmQ,EAAIxR,MAAU,UAM9EmC,KAAKH,MAAMqB,sBAAsBlB,KAAKI,MAAM8N,UAAU/M,oB,gCAWvFgB,EAAkBE,UAAY,CAC1BD,SAAUE,IAAU+J,MAAM,CACtBrP,GAAIsF,IAAUqD,OAAOC,WACrB3I,UAAWqF,IAAUqD,OAAOC,WAC5B1I,SAAUoF,IAAUqD,OAAOC,WAC3BzI,MAAOmF,IAAUqD,OAAOC,WACxBxI,MAAOkF,IAAUqD,OAAOC,WACxBvI,SAAUiF,IAAUqD,OAAOC,WAC3BtI,OAAQgF,IAAUqD,OAAOC,aAC1BA,WACH1E,sBAAuBoB,IAAUwJ,QAAQxJ,IAAU+J,MAAM,CACrDxO,KAAMyE,IAAUqD,OAAOC,WACvBzE,UAAWmB,IAAUuJ,OAAOjG,cAC5BA,YAGOzD","file":"scripts/doc-route.chunk_46.js?1398a359af91fcb7bc61","sourcesContent":["// Constants that can be taken out of the index.js file is put here, to keep the index.js file smaller and less confusing\n\nexport const customersList = [\n    {\n        id: \"c1\",\n        firstName: \"Sven\",\n        lastName: \"Svensson\",\n        email: \"sven.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Visby\",\n        status: \"default\"\n    },\n    {\n        id: \"c2\",\n        firstName: \"Anna\",\n        lastName: \"Svensson\",\n        email: \"anna.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Stockholm\",\n        status: \"success\"\n    },\n    {\n        id: \"c3\",\n        firstName: \"Ola\",\n        lastName: \"Nordmann\",\n        email: \"ola.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Oslo\",\n        status: \"success\"\n    },\n    {\n        id: \"c4\",\n        firstName: \"Kari\",\n        lastName: \"Nordmann\",\n        email: \"kari.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Bergen\",\n        status: \"warning\"\n    },\n    {\n        id: \"c5\",\n        firstName: \"Holger\",\n        lastName: \"Danske\",\n        email: \"holger.danske@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Copenhagen\",\n        status: \"danger\"\n    },\n    {\n        id: \"c6\",\n        firstName: \"Matti\",\n        lastName: \"Meikäläinen\",\n        email: \"matti.meikalainen@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Lahti\",\n        status: \"success\"\n    },\n    {\n        id: \"c7\",\n        firstName: \"Helma\",\n        lastName: \"Egilsdóttir\",\n        email: \"helma.egilsdottir@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Reykjavík\",\n        status: \"default\"\n    }\n];\n\nexport const statusText = {\n    default: \"New\",\n    success: \"Delivered\",\n    warning: \"Late\",\n    danger: \"Missing\"\n};\n\nexport const customersDetailedActionList = [\n    {\n        name: \"Edit\",\n        icon: \"edit\"\n    },\n    {\n        name: \"Delete\",\n        icon: \"delete\"\n    }\n];\n\nexport const customersDetailedOrders = [...Array(15)].map(() => (Math.floor(Math.random() * 1000)) + 1000); // Generates 15 random orders with value between 1000 and 2000 to display\n\nexport const customersDetailedOrdersSteps = [\n    {\n        title: \"Check status\",\n        completed: true\n    },\n    {\n        title: \"Confirm status\",\n        ongoing: true,\n        selected: true\n    },\n    {\n        title: \"Handle status\"\n    },\n    {\n        title: \"Complete status\"\n    }\n];\n\nexport const customersDetailedLatestInquiry = {\n    id: \"InquiryID#456\",\n    date: \"24.10.2019\",\n    numMessages: 8,\n    resolved: false,\n    message: \"This is the initial message of the inquiry. The initial message is always sent by the customer. \\\n    It starts an inquiry thread in which the support team can respond to and stay in contact with the customer. \\\n    The inquiry is marked as unresolved until the support staff marks it as resolved.\"\n};\n\n// Generates 15 previous inquiries to display as an example\nexport const customersDetailedPreviousInquiries = [...Array(15).keys()].map(i => ({\n    id: `InquiryID#${i}`,\n    date: `${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`, // Uses simple formulas to generate different dates, to get varied dates\n    numMessages: Math.floor(Math.random() * 20) + 3,\n    resolved: Math.random() > 0.1,\n    message: `This is the initial message of inquiry InquiryID#${i}. This message was sent ${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`\n}));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DocContainer } from \"@docutils\";\n\nimport CustomersOverview from \"./CustomersOverview\";\nimport CustomersDetailed from \"./CustomersDetailed\";\nimport CustomersDetailedOrders from \"./CustomersDetailed/components/CustomersDetailedOrders\";\nimport CustomersDetailedInquiries from \"./CustomersDetailed/components/CustomersDetailedInquiries\";\nimport CustomersDetailedCharts from \"./CustomersDetailed/components/CustomersDetailedCharts\";\nimport CustomersDetailedSettings from \"./CustomersDetailed/components/CustomersDetailedSettings\";\n\nimport {\n    customersList,\n    statusText,\n    customersDetailedActionList,\n    customersDetailedOrders,\n    customersDetailedOrdersSteps,\n    customersDetailedLatestInquiry,\n    customersDetailedPreviousInquiries\n} from \"./constants\";\n\nconst { actionList } = window.dg;\n\nconst createNumArray = (length, baseNum, addNum) => (\n    [...Array(length)].map(() => (\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) +\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + baseNum)\n    ) // The multiple Math.floor(Math.random) is there to achieve a lower variance\n);\n\nclass Customers extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerIndex: 0\n        };\n    }\n\n    componentDidUpdate () {\n        actionList.init();\n    }\n\n    componentDidMount () {\n        actionList.init();\n    }\n\n    setCustomerIndex (customerIndex) {\n        this.setState({\n            customerIndex\n        });\n\n        const customersDetailedElement = document.getElementById(\"customers-detailed\");\n\n        window.scrollTo({\n            top: customersDetailedElement.offsetTop + 100,\n            left: 0,\n            behavior: \"instant\"\n        });\n    }\n\n    render () {\n\n        // customersDetailedTabs is kept here because of the component value\n        const customersDetailedTabs = [\n            {\n                name: \"Order history\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedOrders\n                        customersDetailedOrdersSteps={customersDetailedOrdersSteps}\n                        customersDetailedOrders={customersDetailedOrders}\n                    />\n            },\n            {\n                name: \"Customer inquiries\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedInquiries\n                        customersDetailedLatestInquiry={customersDetailedLatestInquiry}\n                        customersDetailedPreviousInquiries={customersDetailedPreviousInquiries}\n                    />\n            },\n            {\n                name: \"Summary charts\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedCharts\n                        customerIdName={`${customersList[this.state.customerIndex].id} ${customersList[this.state.customerIndex].firstName} ${customersList[this.state.customerIndex].lastName}`}\n                        customerOrders={[...customersDetailedOrders, 1994]}\n                        customerInquiries={[...customersDetailedPreviousInquiries, customersDetailedLatestInquiry]}\n                        createNumArray={createNumArray}\n                    />\n            },\n            {\n                name: \"Settings\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedSettings />\n            }\n        ];\n\n        return (\n            <DocContainer>\n                <CustomersOverview\n                    setCustomerIndex={customerIndex => this.setCustomerIndex(customerIndex)}\n                    customersList={customersList}\n                    statusText={statusText}\n                />\n                <CustomersDetailed\n                    customer={customersList[this.state.customerIndex]}\n                    customersDetailedTabs={customersDetailedTabs}\n                    customersDetailedActionList={customersDetailedActionList}\n                    statusText={statusText}\n                />\n            </DocContainer>\n        );\n    }\n}\n\nCustomers.propTypes = {\n    test: PropTypes.bool\n};\n\nexport default Customers;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className=\"form-group\">{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            <div className={inputGrpClasses}>{\"\\n\"}\n                {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                {type === \"textarea\" ?\n                    <textarea {...attrs}></textarea>\n                    : type === \"select\" ?\n                        <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                            {selectOptions.map((opt, i) => (\n                                <Fragment key={opt + i}>\n                                    <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                </Fragment>\n                            ))}{\"\\n\\t\"}\n                        </select>\n                        :\n                        <input {...attrs} />}\n                {\"\\n\"}\n                {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n            </div>\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"success\", \"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"executive\", \"guiding\", \"destructive\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"executive\", \"guiding\", \"destructive\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses}>{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n\n    return (\n        <>\n            {otherProps.newTab ?\n                <a className=\"action-link action-link-new-tab\" href={link ? link : \"#\"} rel=\"noopener noreferrer\" target=\"_blank\">{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n                :\n                <a className=\"action-link\" href=\"#\" >{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n            }\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline, newTab }) => (\n    <>\n        {newTab ? <><i className=\"material-icons\">open_in_new</i>{\"\\n\"}</> : null}\n        {badge ? <><span className={`badge ${badge.type}`}>{badge.text}</span>{\"\\n\"}</> : null}\n        {multiline ?\n            <span className=\"action-link-multiline\">{\"\\n\"}\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </span>\n            :\n            <>\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </>\n        }{\"\\n\"}\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React, { useEffect } from \"react\";\n\nimport { Datepicker as DatepickerComponent } from \"@components/FormComponents\";\n\nconst { datepicker } = window.dg;\n\nconst CustomersDetailedDatePickerGroup = () => {\n\n    useEffect(() => {\n        datepicker.init();\n    });\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2000-01-01\"\n                    label=\"From:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-from\"\n                />\n            </div>\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2020-01-01\"\n                    label=\"To:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-to\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CustomersDetailedDatePickerGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst DefaultSteps = [\n    {\n        title: \"Step one\",\n        subtitle: \"24.12.17 12:10\",\n        completed: true\n    },\n    {\n        title: \"Step two\",\n        ongoing: true\n    },\n    {\n        title: \"Step three\",\n        selected: true\n    },\n    {\n        title: \"Step four\"\n    }\n];\n\nconst StepContent = ({ completed, subtitle, title }) => (\n    <>\n        {completed ? <><div className=\"material-icons steps-icon\" >check</div>{ \"\\n\" }</> : null}\n        {title}\n        {subtitle ? <>{ \"\\n\" }<div className=\"steps-sub-title\">{subtitle}</div></> : null}\n    </>\n);\n\nconst RenderSteps = ({ steps }) => (\n    <>\n        {steps.map(({ title, subtitle, completed, ongoing, selected, clickable }, i) => (\n            <li key={i} className={classnames(completed ? \"steps-completed\" : null,\n                ongoing ? \"steps-ongoing\" : null,\n                selected ? \"steps-selected\" : null)}>\n                { clickable ?\n                    <>{ \"\\n\" } <a><StepContent completed={completed} subtitle={subtitle} title={title}/></a> { \"\\n\" } </>\n                    :\n                    <StepContent completed={completed} subtitle={subtitle} title={title}/>\n                }\n            </li>\n        ))}\n    </>\n);\n\nconst RenderStepsNav = ({ steps }) => {\n    if (!steps) {\n        return null;\n    }\n\n    const clickableItem = steps.some(item => item.clickable);\n\n    const arrowLeft = clickableItem ? <div className=\"material-icons steps-nav-left\">keyboard_arrow_left</div> : null;\n    const arrowRight = clickableItem ? <div className=\"material-icons steps-nav-right\">keyboard_arrow_right</div> : null;\n\n    return <>\n        <div className=\"steps-responsive\">\n            { arrowLeft }\n            <div className=\"steps-responsive-text\">Step 3</div>\n            { arrowRight }\n        </div>\n    </>;\n};\n\nconst Steps = ({ steps, vertical }) => {\n    const stepsClasses = classnames(\n        \"steps\",\n        vertical ? \"steps-vertical\" : null,\n    );\n\n    return (<div className={stepsClasses}>\n        <ol>\n            {steps ? <RenderSteps steps={steps} /> : <RenderSteps steps={DefaultSteps} />}\n        </ol>\n        <RenderStepsNav steps={steps} />\n    </div>);\n};\n\nSteps.propTypes = {\n    steps: PropTypes.array,\n    vertical: PropTypes.bool,\n    clickable: PropTypes.bool\n};\n\nexport default Steps;\n\n// exporting for testing purposes\nexport { DefaultSteps };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Chart extends Component {\n    componentDidMount () {\n        const { id, options, colorPool } = this.props;\n\n        dg.chart(id, options, colorPool);\n    }\n\n    render () {\n        return (\n            <canvas id={this.props.id} />\n        );\n    }\n}\n\nChart.propTypes = {\n    id: PropTypes.string.isRequired,\n    options: PropTypes.object.isRequired,\n    colorPool: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CustomersDetailedDialog = ({ customer }) => (\n    <div className=\"dialog\" id=\"customers-detailed-dialog\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"aria-label-dia\" aria-describedby=\"aria-describe-dia\">\n        <section>\n            <header className=\"dialog-header\" id=\"aria-label-dia\">\n                <h4>Delete customer {customer.id} {customer.firstName} {customer.lastName}?</h4>\n                <button type=\"button\" className=\"dialog-close\">\n                    <i className=\"material-icons\">close</i>\n                </button>\n            </header>\n            <div className=\"dialog-body\" id=\"aria-describe-dia\">\n                <p>Are you sure you want to permanently delete the customer {customer.id} {customer.firstName} {customer.lastName}?</p>\n            </div>\n            <footer className=\"dialog-footer\">\n                <button className=\"btn btn-guiding\" type=\"button\" data-dialog-close=\"true\">Cancel</button>\n                <button className=\"btn btn-destructive\" type=\"button\">Delete</button>\n            </footer>\n        </section>\n    </div>\n);\n\nCustomersDetailedDialog.propTypes = {\n    customer: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default CustomersDetailedDialog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Chart from \"@components/Chart\";\n\nconst CustomersDetailedCharts = ({ customerIdName, customerOrders, customerInquiries, createNumArray }) => {\n    const datasetDataLength = customerOrders.length;\n    const totalNumMessages = customerInquiries.reduce((accumulator, inquiry) => accumulator + inquiry.numMessages, 0);\n\n    return (\n        <>\n            <h3>Orders</h3>\n            <h4>Historical purchase prices</h4>\n            <Chart\n                id=\"customers-detailed-charts-1\"\n                options={{\n                    type: \"bar\",\n                    data: {\n                        labels: [...Array(datasetDataLength).keys()].map(i => (2019 - (datasetDataLength - 1) + i).toString()),\n                        datasets: [\n                            {\n                                label: customerIdName,\n                                data: customerOrders,\n                                fill: false\n                            },\n                            {\n                                label: \"Customers average\",\n                                data: createNumArray(datasetDataLength, 1000, 200),\n                                fill: false\n                            },\n                            {\n                                label: \"Estimated\",\n                                data: createNumArray(datasetDataLength, 850, 200),\n                                fill: false\n                            }\n                        ]\n                    },\n                    options: {\n                        scales: {\n                            yAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: \"British Pound (£)\"\n                                }\n                            }]\n                        }\n                    }\n                }}\n            />\n\n            <h3>Inquiries</h3>\n            <h4>Number of inquiry messages</h4>\n            <Chart\n                id=\"customers-detailed-charts-2\"\n                options={{\n                    type: \"line\",\n                    data: {\n                        labels: customerInquiries.map(inquiry => inquiry.date),\n                        datasets: [\n                            {\n                                label: customerIdName,\n                                data: customerInquiries.map(inquiry => inquiry.numMessages),\n                                fill: false\n                            },\n                            {\n                                label: \"Customers average\",\n                                data: createNumArray(customerInquiries.length, 3, 4), // The multiple Math.floor(Math.random) is there to achieve a less random looking distribution\n                                fill: false\n                            }\n                        ]\n                    },\n                    options: {\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    beginAtZero: true\n                                }\n                            }]\n                        }\n                    }\n                }}\n            />\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <h4>Status distribution</h4>\n                    <Chart id=\"customers-detailed-charts-3\"\n                        options={{\n                            type: \"pie\",\n                            data: {\n                                labels: [\"Resolved\", \"Unresolved\", \"Unknown\"],\n                                datasets: [\n                                    {\n                                        data: [customerInquiries.filter(inquiry => inquiry.resolved).length, customerInquiries.filter(inquiry => !inquiry.resolved).length, 1]\n                                    }\n                                ]\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"col-lg-6\">\n                    <h4>Time before response</h4>\n                    <Chart id=\"customers-detailed-charts-4\"\n                        options={{\n                            type: \"pie\",\n                            data: {\n                                labels: [\"< 2 days\", \"< 1 week\", \"< 1 month\", \"< 3 months\", \"Other\"],\n                                datasets: [\n                                    {\n                                        data: [\n                                            Math.floor(totalNumMessages * 0.4),\n                                            Math.floor(totalNumMessages * 0.3),\n                                            Math.floor(totalNumMessages * 0.15),\n                                            Math.floor(totalNumMessages * 0.1),\n                                            Math.floor(totalNumMessages * 0.05)\n                                        ]\n                                    }\n                                ]\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nCustomersDetailedCharts.propTypes = {\n    customerIdName: PropTypes.string.isRequired,\n    customerOrders: PropTypes.arrayOf(PropTypes.number).isRequired,\n    customerInquiries: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailedCharts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CustomersDetailedDatePickerGroup from \"../CustomersDetailedDatePickerGroup\";\nimport MediaObjectComponent from \"@components/MediaObject\";\n\nconst CustomersDetailedInquiryCard = ({ inquiry, size }) => (\n    <div className=\"card card-secondary\">\n        <header className=\"card-header\">\n            <h4>{`Inquiry: ${inquiry.id} | ${inquiry.date}`}</h4>\n        </header>\n        <div className=\"card-body\">\n            <div className=\"d-none d-sm-block\">\n                <div className=\"d-flex justify-content-around\">\n                    <MediaObjectComponent\n                        size={size}\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size={size}\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <div className=\"d-sm-none\">\n                <div className=\"d-flex flex-column\">\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <h5>Initial message:</h5>\n            <p>{inquiry.message}</p>\n        </div>\n        <div className=\"card-footer\">\n            <div className=\"footer-link\"><a href=\"#\">See inquiry thread</a></div>\n        </div>\n    </div>\n);\n\nconst CustomersDetailedInquiries = ({ customersDetailedLatestInquiry, customersDetailedPreviousInquiries }) => (\n    <>\n        <h3>Latest inquiry</h3>\n        <CustomersDetailedInquiryCard inquiry={customersDetailedLatestInquiry} size=\"lg\" />\n\n        <h3>Previous inquiries</h3>\n        <CustomersDetailedDatePickerGroup />\n        <div className=\"row\">\n            {customersDetailedPreviousInquiries.map(inquiry => (\n                <div key={inquiry.id} className=\"col-lg-6 d-flex\">\n                    <CustomersDetailedInquiryCard inquiry={inquiry} size=\"sm\" />\n                </div>\n            ))}\n        </div>\n    </>\n);\n\nCustomersDetailedInquiryCard.propTypes = {\n    inquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    size: PropTypes.string.isRequired\n};\n\nCustomersDetailedInquiries.propTypes = {\n    customersDetailedLatestInquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    customersDetailedPreviousInquiries: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailedInquiries;\n\nexport { CustomersDetailedInquiryCard };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CustomersDetailedDatePickerGroup from \"../CustomersDetailedDatePickerGroup\";\nimport StepsComponent from \"@components/Steps\";\nimport ActionLinkComponent from \"@components/ActionLink\";\n\nconst CustomersDetailedOrders = ({ customersDetailedOrdersSteps, customersDetailedOrders }) => (\n    <>\n        <h3>Latest order</h3>\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <div className=\"slab border slab-elevated\">\n                    <h5>Order: OrderID#123456</h5>\n                    <p>Price: £ 1994</p>\n                    <p>Date: 22.10.2019</p>\n                    <p>Product ID: ProductID#321</p>\n                    <p>Product name: Product name ABC</p>\n                    <p>Addtional information: Description of the product and/or additional comments from the customer with regards to the order or product.</p>\n                    <ActionLinkComponent linkText=\"Edit order\" smallText=\"OrderID#123456\" multiline={true} />\n                </div>\n            </div>\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n                <h5>Detailed internal status:</h5>\n                <StepsComponent steps={customersDetailedOrdersSteps} vertical />\n            </div>\n        </div>\n\n        <h3>Previous orders</h3>\n        <CustomersDetailedDatePickerGroup />\n        {customersDetailedOrders.map((order, i) => (\n            <div key={i} className=\"slab border slab-elevated\">\n                <div className=\"d-flex\">\n                    <div className=\"flex-grow-1\">\n                        <div className=\"flex-column\">\n                            <p className=\"font-weight-bold\">\n                                {`OrderID#${i}: `}\n                            </p>\n                            <p>\n                                {`ProductID#${i * 5} Product name XYZ${i}`}\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        <p className=\"font-weight-bold text-nowrap\">£ {order}</p>\n                    </div>\n                </div>\n                <ActionLinkComponent linkText=\"Edit order\" smallText={`OrderID#${i}:`} multiline={true} />\n            </div>\n        ))}\n    </>\n);\n\nCustomersDetailedOrders.propTypes = {\n    customersDetailedOrdersSteps: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        ongoing: PropTypes.bool,\n        completed: PropTypes.bool,\n        selected: PropTypes.bool\n    })).isRequired,\n    customersDetailedOrders: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nexport default CustomersDetailedOrders;\n","import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-executive\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ComponentPreview } from \"@docutils\";\n\nimport CustomersDetailedDialog from \"./components/CustomersDetailedDialog/\";\n\nconst { actionList, dialog, tabs } = window.dg;\n\nclass CustomersDetailed extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            tabScrollState: null\n        };\n    }\n\n    componentDidUpdate () {\n        actionList.init();\n        dialog.init();\n        tabs.init();\n        tabs.setScrollState(\"customers-detailed-tabs\", this.state.tabScrollState);\n    }\n\n    componentDidMount () {\n        dialog.init();\n        tabs.init();\n    }\n\n    selectTab (e, i) {\n        e.preventDefault();\n\n        const tabScroll = document.getElementById(\"customers-detailed-tabs-ul\");\n        const scrollStart = tabScroll.scrollLeft;\n        const scrollTotalAmount = (e.target.offsetLeft - (tabScroll.offsetWidth / 2) + (e.target.offsetWidth / 2)) - scrollStart;\n\n        this.setState({\n            tabIndex: i,\n            tabScrollState: {\n                scrollTotalAmount,\n                scrollStart\n            }\n        });\n    }\n\n    render () {\n        return (\n            <>\n                <h2 id=\"customers-detailed\">Customers detailed</h2>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <div className=\"container\">\n                        <div className=\"panel panel-brand\">\n                            <header>\n                                <ol className=\"breadcrumb\">\n                                    <li><a href=\"#\">Customers</a></li>\n                                    <li><span>{this.props.customer.id}</span></li>\n                                </ol>\n                                <div className=\"row\">\n                                    <div className=\"col-auto mr-auto\">\n                                        <div className=\"row\">\n                                            <div className=\"col-xs-auto\">\n                                                <div className=\"d-none d-sm-block\">\n                                                    <div className=\"media media-sm\">\n                                                        <div className=\"media-img\">\n                                                            <i className=\"material-icons\">account_circle</i>\n                                                        </div>\n                                                        <div className=\"media-body\">\n                                                            <h4>{`${this.props.customer.firstName} ${this.props.customer.lastName}`}</h4>\n                                                            <p>{`${this.props.customer.email} ${this.props.customer.phone}`}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"d-block d-sm-none\">\n                                                    <div className=\"media media-sm\">\n                                                        <div className=\"media-img\">\n                                                            <i className=\"material-icons\">account_circle</i>\n                                                        </div>\n                                                        <div className=\"media-body\">\n                                                            <h4>{`${this.props.customer.firstName} ${this.props.customer.lastName}`}</h4>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-xs-auto\">\n                                                <div id=\"customer-detailed-action-list\" className=\"action-list anchor-top-right\">\n                                                    <button id=\"actionListToggle\" type=\"button\" className=\"action-toggle\" aria-haspopup=\"true\">\n                                                        <i className=\"material-icons\">more_vert</i>\n                                                    </button>\n                                                    <div className=\"action-menu\" aria-labelledby=\"actionListToggle\">\n                                                        <a href=\"#\" onClick={e => e.preventDefault()}><i className=\"material-icons\">edit</i>Edit</a>\n                                                        <a href=\"#\" onClick={e => e.preventDefault()} data-dialog-open=\"customers-detailed-dialog\"><i className=\"material-icons\">delete</i>Delete</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <CustomersDetailedDialog customer={this.props.customer} />\n                                        </div>\n                                        <div className=\"row d-block d-sm-none\">\n                                            <div className=\"col-sm-auto pl-0\">\n                                                <p className=\"mb-0 text-truncate\">{this.props.customer.email}</p>\n                                            </div>\n                                            <div className=\"col-sm-auto pl-0\">\n                                                <p>{this.props.customer.phone}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-auto pl-0\">\n                                        <h4>Delivery status:</h4>\n                                        <span className={`status status-${this.props.customer.status}`}>{this.props.statusText[this.props.customer.status]}</span>\n                                    </div>\n                                </div>\n                            </header>\n                            <div className=\"panel-body\">\n                                <div id=\"customers-detailed-tabs\" className=\"tabs tabs-scroll\">{\"\\n\"}\n                                    <ul id=\"customers-detailed-tabs-ul\">\n                                        {this.props.customersDetailedTabs.map((tab, i) => (\n                                            <li key={`tab-item-${i}`} className={this.state.tabIndex === i ? \"active\" : null}>{\"\\n\"}\n                                                <a href=\"#\" onClick={e => this.selectTab(e, i)}>{tab.name}</a>{\"\\n\"}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n\n                                {this.props.customersDetailedTabs[this.state.tabIndex].component}\n                            </div>\n                        </div>\n                    </div>\n                </ComponentPreview>\n            </>\n        );\n    }\n\n}\n\nCustomersDetailed.propTypes = {\n    customer: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    }).isRequired,\n    customersDetailedTabs: PropTypes.arrayOf(PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        component: PropTypes.object.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailed;\n"],"sourceRoot":""}