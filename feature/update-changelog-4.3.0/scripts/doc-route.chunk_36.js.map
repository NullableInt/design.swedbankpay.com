{"version":3,"sources":["webpack://swedbankpay/./src/App/components/Button/index.js","webpack://swedbankpay/./src/App/Resources/resources/typography/index.js","webpack://swedbankpay/./src/App/Documentation/core/Typography/index.js","webpack://swedbankpay/(webpack)/buildin/amd-options.js","webpack://swedbankpay/./node_modules/classnames/index.js"],"names":["Button","_ref","label","id","name","value","href","icon","loading","type","disabled","btnType","fullWidth","pullRight","input","outline","active","size","btnClasses","classnames","concat","attrs","defaultValue","role","aria-pressed","aria-disabled","tabIndex","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_extends","className","Fragment","propTypes","PropTypes","oneOf","isRequired","string","bool","loader","__webpack_require__","r","__webpack_exports__","d","Overview","Download","Guidelines","react__WEBPACK_IMPORTED_MODULE_0__","n","_Documentation_utils__WEBPACK_IMPORTED_MODULE_1__","_components_Button__WEBPACK_IMPORTED_MODULE_2__","basename","process","src","Typography","docToc","ResourcesTypography","Fonts","Headings","HeroTitle","Lead","Inline","TextUtilities","Abbreviations","Blockquotes","AkkuratMono","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_prism__WEBPACK_IMPORTED_MODULE_2__","react_prism__WEBPACK_IMPORTED_MODULE_2___default","_utils__WEBPACK_IMPORTED_MODULE_3__","_Resources_resources_typography__WEBPACK_IMPORTED_MODULE_4__","_components_Button__WEBPACK_IMPORTED_MODULE_5__","expandable","window","dg","aria-expanded","aria-controls","to","language","showCasePanel","codeFigure","title","target","rel","useEffect","init","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","key","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__"],"mappings":"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","file":"scripts/doc-route.chunk_36.js?42baa8c91a12242de06b","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, outline, active, size }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        outline ? \"btn-outline\" : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {(icon && label) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"executive\", \"guiding\", \"destructive\", \"link\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    outline: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"])\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport { DocContainer } from \"@docutils\";\nimport Button from \"@components/Button\";\n\nconst basename = process.env.basename;\n\nconst Overview = () => (\n    <>\n        <img src={`${basename}img/typography/cid_2873206.png`} className=\"img-fluid mb-4\" />\n        <p>\n            Swedbank Pay uses a selection of fonts from Swedbank&apos;s typography toolbox.\n        </p>\n        <p>\n            Our main font is Swedbank Headline Bold, a custom made typeface with an open, welcoming\n            visual voice. In addition Swedbank Sans is used for body copy in printed units whilst Arial is used\n            for body copy on screens.\n        </p>\n\n    </>\n);\n\nconst Download = () => (\n    <>\n        <h2 id=\"download\">Download</h2>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading any typography files, make sure to read the Swedbank Pay typography guidelines. The guidelines can be found below.</p>\n            <div className=\"row justify-content-right\">\n                <div className=\"col-sm-auto mb-3 mb-sm-0\">\n                    <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/cid_2108538.zip`} label=\"Swedbank Headline\" />\n                </div>\n                <div className=\"col-sm-auto\">\n                    <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/cid_2686429.zip`} label=\"Swedbank Sans\" />\n                </div>\n            </div>\n        </div>\n    </>\n);\n\nconst Guidelines = () => (\n    <>\n        <h2 id=\"guidelines\">Typography guidlines</h2>\n        <img src={`${basename}img/typography/cid_2873207.png`} className=\"img-fluid mb-4\" />\n\n        <h4>Use Swedbank Headline Bold in:</h4>\n        <ul>\n            <li>Headlines and highlights</li>\n            <li>Introduction texts</li>\n            <li>Lower level headlines</li>\n        </ul>\n\n        <h4>Use Arial in:</h4>\n        <ul>\n            <li>Body copy on screens</li>\n        </ul>\n\n        <h4>Use Swedbank Sans in:</h4>\n        <ul>\n            <li>Body copy in printed units</li>\n        </ul>\n\n        <h4>Typesetting</h4>\n        <ul>\n            <li>Use large contrast in size between top level headlines and body text</li>\n            <li>Use metric settings for spacing</li>\n        </ul>\n    </>\n);\n\nconst Typography = () => (\n    <DocContainer docToc>\n        <Overview />\n        <Download />\n        <Guidelines />\n    </DocContainer>\n);\n\nexport default Typography;\n\n/* For testing */\nexport { Overview, Download, Guidelines };\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Property } from \"@docutils\";\nimport { Overview, Download, Guidelines } from \"../../../Resources/resources/typography\";\nimport Button from \"@components/Button\";\n\nconst basename = process.env.basename;\nconst { expandable } = window.dg;\n\nconst ResourcesTypography = () => (\n    <div className=\"expandable\">\n        <button type=\"button\" className=\"expandable-header\" aria-expanded=\"false\" aria-controls=\"resources-typograpy-body\">\n            <span className=\"expandable-headline\">Typography guidelines</span>\n            <small className=\"expandable-subtitle\">From <Link to=\"/res/resources/typography\">typography in Resources</Link></small>\n        </button>\n        <div className=\"expandable-body\" id=\"resources-typography-body\">\n            <Overview />\n            <Download />\n            <Guidelines />\n        </div>\n    </div>\n);\n\nconst Fonts = () => (\n        <>\n            <h2 id=\"font\">Font</h2>\n            <p>The standard font Swedbank Pay DesignGuide uses is Arial. The included font weights you can use are: 400, 600 & 800. Both normal and italicized is available.</p>\n        </>\n);\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>Swedbank Pay DesignGuide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <Property value=\".h1\" /> through <Property value=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst HeroTitle = () => (\n    <>\n        <h2 id=\"hero-title\">Hero title</h2>\n        <p>The class <Property value=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <Property value=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <Property value=\".mark\" /> and <Property value=\".small\" /> classes are also available to apply the same styles as <PrismCode className=\"language-html\">{\"<mark>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<small>\"}</PrismCode> while avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> in HTML5. <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> is meant to highlight words or phrases without conveying additional importance while <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/docs/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <PrismCode className=\"language-html\">{\"<abbr>\"}</PrismCode> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <Property value=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <PrismCode className=\"language-html\">{\"<blockquote>\"}</PrismCode> or <Property value=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <PrismCode className=\"language-html\">{\"<footer>\"}</PrismCode> for identifying the source. Wrap the name of the source work in <PrismCode className=\"language-html\">{\"<cite>\"}</PrismCode>.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst AkkuratMono = () => (\n    <>\n        <h2 id=\"akkurat-mono\">Akkurat Mono</h2>\n        <p>The Akkurat Mono font should be used when code is to be presented, for instance with code tags.</p>\n\n        <h3>Download</h3>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.</p>\n            <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/AkkuratMono.zip`} label=\"Akkurat Mono\" />\n        </div>\n    </>\n);\n\nconst Typography = () => {\n\n    useEffect(() => { expandable.init(); });\n\n    return (\n        <DocContainer docToc>\n            <p className=\"lead\">Documentation and examples for Swedbank Pay DesignGuide typography.</p>\n            <ResourcesTypography />\n            <Fonts />\n            <Headings />\n            <HeroTitle />\n            <Lead />\n            <Inline />\n            <TextUtilities />\n            <Abbreviations />\n            <Blockquotes />\n            <AkkuratMono />\n        </DocContainer>\n    );\n};\n\nexport default Typography;\n\n/* For testing */\nexport { ResourcesTypography, Fonts, Headings, HeroTitle, Lead, Inline, TextUtilities, Abbreviations, Blockquotes, AkkuratMono };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}