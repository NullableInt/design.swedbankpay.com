{"version":3,"sources":["webpack://swedbankpay/./src/App/components/CodeTags/index.js","webpack://swedbankpay/./src/App/Documentation/core/Typography/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","CodeTags","_ref","type","code","a","createElement","className","concat","propTypes","PropTypes","string","isRequired","d","ResourcesTypography","Fonts","Headings","HeroTitle","Lead","Inline","TextUtilities","Abbreviations","Blockquotes","AkkuratMono","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_Resources_resources_typography__WEBPACK_IMPORTED_MODULE_3__","_components_Button__WEBPACK_IMPORTED_MODULE_4__","_components_CodeTags__WEBPACK_IMPORTED_MODULE_5__","expandable","window","dg","aria-expanded","aria-controls","to","id","Fragment","language","showCasePanel","codeFigure","title","href","target","rel","icon","process","label","Typography","useEffect","init","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_39.js?930bdace179e0ddff99c","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CodeTags = ({ type, code }) => (\n    <code className={`code-tags code-tags-${type}`}>{code}</code>\n);\n\nCodeTags.propTypes = {\n    type: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired\n};\n\nexport default CodeTags;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport { Overview, Download, Guidelines } from \"../../../Resources/resources/typography\";\nimport Button from \"@components/Button\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst basename = process.env.basename;\nconst { expandable } = window.dg;\n\nconst ResourcesTypography = () => (\n    <div className=\"expandable\">\n        <button type=\"button\" className=\"expandable-header\" aria-expanded=\"false\" aria-controls=\"resources-typograpy-body\">\n            <span className=\"expandable-headline\">Typography guidelines</span>\n            <small className=\"expandable-subtitle\">From <Link to=\"/res/resources/typography\">typography in Resources</Link></small>\n        </button>\n        <div className=\"expandable-body\" id=\"resources-typography-body\">\n            <Overview />\n            <Download />\n            <Guidelines />\n        </div>\n    </div>\n);\n\nconst Fonts = () => (\n        <>\n            <h2 id=\"font\">Font</h2>\n            <p>The standard font Swedbank Pay DesignGuide uses is Arial. The included font weights you can use are: 400, 600 & 800. Both normal and italicized is available.</p>\n        </>\n);\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>Swedbank Pay DesignGuide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <CodeTags type=\"secondary\" code=\".h1\" /> through <CodeTags type=\"secondary\" code=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst HeroTitle = () => (\n    <>\n        <h2 id=\"hero-title\">Hero title</h2>\n        <p>The class <CodeTags type=\"secondary\" code=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <CodeTags type=\"secondary\" code=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <CodeTags type=\"secondary\" code=\".mark\" /> and <CodeTags type=\"secondary\" code=\".small\" /> classes are also available to apply the same styles\n            as <CodeTags type=\"primary\" code={\"<mark>\"} /> and <CodeTags type=\"primary\" code={\"<small>\"} /> while\n            avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <CodeTags type=\"primary\" code={\"<b>\"} /> and <CodeTags type=\"primary\" code={\"<i>\"} /> in\n        HTML5. <CodeTags type=\"primary\" code={\"<b>\"} /> is meant to highlight words or phrases without conveying additional importance\n        while <CodeTags type=\"primary\" code={\"<i>\"} /> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/docs/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <CodeTags type=\"primary\" code={\"<abbr>\"} /> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <CodeTags type=\"secondary\" code=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <CodeTags type=\"primary\" code={\"<blockquote>\"} /> or <CodeTags type=\"secondary\" code=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <CodeTags type=\"primary\" code={\"<footer>\"} /> for identifying the source. Wrap the name of the source work in <CodeTags type=\"primary\" code={\"<cite>\"} />.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst AkkuratMono = () => (\n    <>\n        <h2 id=\"akkurat-mono\">Akkurat Mono</h2>\n        <p>The Akkurat Mono font should be used when code is to be presented, for instance with code tags.</p>\n\n        <h3>Download</h3>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.</p>\n            <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/AkkuratMono.zip`} label=\"Akkurat Mono\" />\n        </div>\n    </>\n);\n\nconst Typography = () => {\n\n    useEffect(() => { expandable.init(); });\n\n    return (\n        <DocContainer docToc>\n            <p className=\"lead\">Documentation and examples for Swedbank Pay DesignGuide typography.</p>\n            <ResourcesTypography />\n            <Fonts />\n            <Headings />\n            <HeroTitle />\n            <Lead />\n            <Inline />\n            <TextUtilities />\n            <Abbreviations />\n            <Blockquotes />\n            <AkkuratMono />\n        </DocContainer>\n    );\n};\n\nexport default Typography;\n\n/* For testing */\nexport { ResourcesTypography, Fonts, Headings, HeroTitle, Lead, Inline, TextUtilities, Abbreviations, Blockquotes, AkkuratMono };\n"],"sourceRoot":""}