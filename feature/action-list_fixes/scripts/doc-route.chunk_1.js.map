{"version":3,"sources":["webpack://payex/./src/App/Documentation/components/Alerts/index.js"],"names":["BasicUsage","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","id","_utils__WEBPACK_IMPORTED_MODULE_3__","language","showCasePanel","codeFigure","_components_Alert__WEBPACK_IMPORTED_MODULE_4__","type","text","AlertWithIcon","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","icon","ClosingTheAlert","react_prism__WEBPACK_IMPORTED_MODULE_2___default","className","close","data","name","value","data-alert-close","ExtendedUsage","Alerts","Component","alert","init","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_1.js?c56ab99d072e3d42d879","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, Attribute, Property, DocContainer } from \"#\";\n\nimport AlertComponent from \"@/Alert\";\nimport { alert } from \"$/px-script/main\";\n\nconst BasicUsage = () => (\n    <>\n        <h2 id=\"basic-usage\">Basic usage</h2>\n        <p>The default behavior of the alert present itself in a box with a border.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"default\" text=\"This is a default alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert!\" />\n        </ComponentPreview>\n    </>\n);\n\nconst AlertWithIcon = () => (\n    <>\n        <h2 id=\"icons\">Icons</h2>\n        <p>To use an alert with an icon... Read more about icon usage here <Link to=\"/docs/core/icons\">here</Link>.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"default\" text=\"This is a default alert with an icon!\" icon=\"info_outline\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert with an icon!\" icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" icon=\"error\" />\n        </ComponentPreview>\n    </>\n);\n\nconst ClosingTheAlert = () => (\n    <>\n        <h2 id=\"closing-the-alert\">Closing the alert</h2>\n        <p>\n            To add a close-button, add the following code inside your alert-element:<br/>\n            <PrismCode className=\"language-html\">{\"<a href=\\\"#\\\" data-alert-close><i class=\\\"material-icons\\\">close</i></a>\"}</PrismCode>\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"default\" text=\"This is a default alert with an icon!\" close icon=\"info_outline\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" close icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert with an icon!\" close icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" close icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" close icon=\"error\" />\n        </ComponentPreview>\n        <h3>External close button</h3>\n        <p>To add an external close-button for your alert add the attribute <Attribute data name=\"alert-close\" value=\"{id}\" /> to the button element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent id=\"alert-success-1\" type=\"success\" text=\"Press the button below to close me\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <button type=\"button\" className=\"btn btn-primary\" data-alert-close=\"alert-success-1\">Close alert</button>\n        </ComponentPreview>\n    </>\n);\n\nconst ExtendedUsage = () => (\n    <>\n        <h2 id=\"extended-usage\">Extended usage</h2>\n        <p>Alerts can also contain additional HTML elements like headings, paragraphs and dividers.</p>\n        <p>Just make sure to wrap the content in a container with the class <Property value=\".alert-body\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"success\" close icon=\"check_circle\">\n                <h3 className=\"color-success\">Success!</h3>\n                <p>PDF was successfully uploaded. <br /> Some additional information.</p>\n                <hr/>\n                <p>By the way, great job!</p>\n            </AlertComponent>\n        </ComponentPreview>\n    </>\n);\n\nclass Alerts extends Component {\n    componentDidMount () {\n        alert.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p>\n                <BasicUsage />\n                <AlertWithIcon />\n                <ClosingTheAlert />\n                <ExtendedUsage />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Alerts;\n\n/* For testing */\nexport { BasicUsage, AlertWithIcon, ClosingTheAlert, ExtendedUsage };\n"],"sourceRoot":""}