{"version":3,"sources":["webpack://swedbankpay/./src/App/Documentation/core/Typography/index.js","webpack://swedbankpay/(webpack)/buildin/amd-options.js","webpack://swedbankpay/./node_modules/classnames/index.js","webpack://swedbankpay/./src/App/components/Button/index.js","webpack://swedbankpay/./src/App/Resources/resources/typography/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ResourcesTypography","Fonts","Headings","HeroTitle","Lead","Inline","TextUtilities","Abbreviations","Blockquotes","AkkuratMono","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_prism__WEBPACK_IMPORTED_MODULE_2__","react_prism__WEBPACK_IMPORTED_MODULE_2___default","_utils__WEBPACK_IMPORTED_MODULE_3__","_Resources_resources_typography__WEBPACK_IMPORTED_MODULE_4__","_components_Button__WEBPACK_IMPORTED_MODULE_5__","expandable","window","dg","a","createElement","className","type","aria-expanded","aria-controls","to","id","Fragment","language","showCasePanel","codeFigure","value","title","href","target","rel","icon","concat","process","label","Typography","useEffect","init","docToc","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","key","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__","Button","_ref","name","loading","disabled","btnType","fullWidth","pullRight","input","outline","active","size","btnClasses","classnames","attrs","defaultValue","role","aria-pressed","aria-disabled","tabIndex","_extends","propTypes","PropTypes","oneOf","isRequired","string","bool","loader","Overview","Download","Guidelines","_Documentation_utils__WEBPACK_IMPORTED_MODULE_1__","_components_Button__WEBPACK_IMPORTED_MODULE_2__","basename","src"],"mappings":"oHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,wCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,0BAAAG,IAAAL,EAAAG,EAAAD,EAAA,6BAAAI,IAAAN,EAAAG,EAAAD,EAAA,8BAAAK,IAAAP,EAAAG,EAAAD,EAAA,yBAAAM,IAAAR,EAAAG,EAAAD,EAAA,2BAAAO,IAAAT,EAAAG,EAAAD,EAAA,kCAAAQ,IAAAV,EAAAG,EAAAD,EAAA,kCAAAS,IAAAX,EAAAG,EAAAD,EAAA,gCAAAU,IAAAZ,EAAAG,EAAAD,EAAA,gCAAAW,IAAA,IAAAC,EAAAd,EAAA,GAAAe,EAAAf,EAAAgB,EAAAF,GAAAG,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAgB,EAAAE,GAAAE,EAAApB,EAAA,IAAAqB,EAAArB,EAAA,IAAAsB,EAAAtB,EAAA,IASQuB,EAAeC,OAAOC,GAAtBF,WAEFnB,EAAsB,kBACxBW,EAAAW,EAAAC,cAAA,OAAKC,UAAU,cACXb,EAAAW,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,oBAAoBE,gBAAc,QAAQC,gBAAc,4BACpFhB,EAAAW,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,yBACAb,EAAAW,EAAAC,cAAA,SAAOC,UAAU,uBAAjB,QAA4Cb,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMe,GAAG,6BAAT,6BAEhDjB,EAAAW,EAAAC,cAAA,OAAKC,UAAU,kBAAkBK,GAAG,6BAChClB,EAAAW,EAAAC,cAACN,EAAA,SAAD,MACAN,EAAAW,EAAAC,cAACN,EAAA,SAAD,MACAN,EAAAW,EAAAC,cAACN,EAAA,WAAD,SAKNhB,EAAQ,kBACNU,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,QAAP,QACAlB,EAAAW,EAAAC,cAAA,4KAINrB,EAAW,kBACbS,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,YAAP,YACAlB,EAAAW,EAAAC,cAAA,qFACAZ,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,yBAEJZ,EAAAW,EAAAC,cAAA,wBAAeZ,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,QAA/B,YAAgDvB,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,QAAhE,6HACAvB,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,eACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,eACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,eACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,eACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,eACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,MAAb,kBAKNrB,EAAY,kBACdQ,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,cAAP,cACAlB,EAAAW,EAAAC,cAAA,sBAAaZ,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,UAA7B,gEACAvB,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,MAAIC,UAAU,QAAd,cACAb,EAAAW,EAAAC,cAAA,KAAGC,UAAU,QAAb,iBAKNpB,EAAO,kBACTO,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,QAAP,QACAlB,EAAAW,EAAAC,cAAA,gDAAuCZ,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,UAAvD,KACAvB,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,KAAGC,UAAU,QAAb,qFAKNnB,EAAS,kBACXM,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,wBAAP,wBACAlB,EAAAW,EAAAC,cAAA,sDACAZ,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,wCAA+BZ,EAAAW,EAAAC,cAAA,yBAA/B,UACAZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,yEACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,6EACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,wFACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,yDACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,yEACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,mDACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,0CACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,qDACHZ,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,4EAEPZ,EAAAW,EAAAC,cAAA,gBACQZ,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,UADxB,QACuCvB,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,WADvD,2DAC0HvB,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,UADhK,QAC0Lb,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,WADhO,iFAGAb,EAAAW,EAAAC,cAAA,oDACwCZ,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,OAD9E,QACqGb,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,OAD3I,cACwKb,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,OAD9M,yFACsTb,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,OAD5V,iDAMFlB,EAAgB,kBAClBK,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,kBAAP,kBACAlB,EAAAW,EAAAC,cAAA,uCAA8BZ,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMe,GAAG,0BAAT,mBAA9B,OAIFrB,EAAgB,kBAClBI,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,iBAAP,iBACAlB,EAAAW,EAAAC,cAAA,8CAAqCZ,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,UAA3E,+NACAb,EAAAW,EAAAC,cAAA,gBAAOZ,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,gBAAvB,yDACAvB,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,QAAMY,MAAM,kBAAZ,QACHxB,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,QAAMY,MAAM,4BAA4BX,UAAU,cAAlD,UAEPb,EAAAW,EAAAC,cAAA,SAAGZ,EAAAW,EAAAC,cAAA,KAAGa,KAAK,iEAAiEC,OAAO,SAASC,IAAI,uBAA7F,aAAH,2BAIF9B,EAAc,WA4BhB,OACIG,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cA7BgB,kBACpBZ,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,eAAP,eACAlB,EAAAW,EAAAC,cAAA,yFAAgFZ,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,gBAAtH,OAAqJb,EAAAW,EAAAC,cAACP,EAAA,SAAD,CAAUkB,MAAM,gBAArK,kCACAvB,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,cAAYC,UAAU,cAClBb,EAAAW,EAAAC,cAAA,sGAuBR,MACAZ,EAAAW,EAAAC,cAlByB,kBAC7BZ,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,6BACAZ,EAAAW,EAAAC,cAAA,kBAASZ,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,YAA/C,oEAAuIb,EAAAW,EAAAC,cAACR,EAAAO,EAAD,CAAWE,UAAU,iBAAiB,UAA7K,KACAb,EAAAW,EAAAC,cAACP,EAAA,iBAAD,CAAkBe,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtDtB,EAAAW,EAAAC,cAAA,cAAYC,UAAU,cAClBb,EAAAW,EAAAC,cAAA,gJAGAZ,EAAAW,EAAAC,cAAA,cAAQZ,EAAAW,EAAAC,cAAA,QAAMY,MAAM,yBAAZ,mBAShB,QAKN1B,EAAc,kBAChBE,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,gBAAP,gBACAlB,EAAAW,EAAAC,cAAA,4GAEAZ,EAAAW,EAAAC,cAAA,sBACAZ,EAAAW,EAAAC,cAAA,OAAKC,UAAU,mCACXb,EAAAW,EAAAC,cAAA,kHACAZ,EAAAW,EAAAC,cAACL,EAAA,QAAD,CAAQO,KAAK,YAAYc,KAAK,gBAAgBH,KAAI,GAAAI,OA9J7CC,6BA8J6C,iCAA8CC,MAAM,oBA0BnGC,UArBI,WAIf,OAFAC,oBAAU,WAAQzB,EAAW0B,SAGzBlC,EAAAW,EAAAC,cAACP,EAAA,aAAD,CAAc8B,QAAM,GAChBnC,EAAAW,EAAAC,cAAA,KAAGC,UAAU,QAAb,uEACAb,EAAAW,EAAAC,cAACvB,EAAD,MACAW,EAAAW,EAAAC,cAACtB,EAAD,MACAU,EAAAW,EAAAC,cAACrB,EAAD,MACAS,EAAAW,EAAAC,cAACpB,EAAD,MACAQ,EAAAW,EAAAC,cAACnB,EAAD,MACAO,EAAAW,EAAAC,cAAClB,EAAD,MACAM,EAAAW,EAAAC,cAACjB,EAAD,MACAK,EAAAW,EAAAC,cAAChB,EAAD,MACAI,EAAAW,EAAAC,cAACf,EAAD,MACAG,EAAAW,EAAAC,cAACd,EAAD,S,mBC3LZ,SAAAsC,GACAC,EAAOC,QAAUF,I;;;;;;;;;;;CCMhB,WACA,aAEA,IAAIG,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,EAAUC,EAAOF,GAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQO,KAAKH,QACP,GAAII,MAAMC,QAAQL,IAAQA,EAAID,OAAQ,CAC5C,IAAIO,EAAQX,EAAWY,MAAM,KAAMP,GAC/BM,GACHV,EAAQO,KAAKG,QAER,GAAgB,WAAZL,EACV,IAAK,IAAIO,KAAOR,EACXP,EAAOgB,KAAKT,EAAKQ,IAAQR,EAAIQ,IAChCZ,EAAQO,KAAKK,IAMjB,OAAOZ,EAAQc,KAAK,KAGgBnB,EAAOC,SAC3CG,EAAWgB,QAAUhB,EACrBJ,EAAOC,QAAUG,GAC+C,WAAtBO,EAAOU,SAA2BA,YAEtEC,KAAAC,EAAA,WACL,OAAOnB,GADFY,MAAAf,EAAe,OAAfD,EAAAC,QAAAsB,GAINnD,OAAOgC,WAAaA,EA1CrB,I,4SCHD,IAAMoB,EAAS,SAACC,GAAiI,IAA/H/B,EAA+H+B,EAA/H/B,MAAOb,EAAwH4C,EAAxH5C,GAAI6C,EAAoHD,EAApHC,KAAMxC,EAA8GuC,EAA9GvC,MAAOE,EAAuGqC,EAAvGrC,KAAMG,EAAiGkC,EAAjGlC,KAAMoC,EAA2FF,EAA3FE,QAASlD,EAAkFgD,EAAlFhD,KAAMmD,EAA4EH,EAA5EG,SAAUC,EAAkEJ,EAAlEI,QAASC,EAAyDL,EAAzDK,UAAWC,EAA8CN,EAA9CM,UAAWC,EAAmCP,EAAnCO,MAAOC,EAA4BR,EAA5BQ,QAASC,EAAmBT,EAAnBS,OAAQC,EAAWV,EAAXU,KAC5HC,EAAaC,IACf,MACA5D,EAAO,OAAHe,OAAUf,GAAS,KACvBwD,EAAU,cAAgB,KAC1BE,EAAO,OAAH3C,OAAU2C,GAAS,KACvBR,EAAU,UAAY,KACtBG,EAAY,YAAc,KAC1BC,EAAY,aAAe,KAC3BG,GAAU9C,EAAO,SAAW,KAC5BwC,GAAYxC,EAAO,WAAa,MAG9BkD,EAAQ,CACVlD,OACAP,KACA6C,OACAa,aAAcrD,EACd0C,SAAUxC,EAAO,KAAOwC,EACxBM,OAAQA,IAAW9C,EAAO,GAAK,KAC/BoD,KAAMpD,EAAO,SAAW,KACxBX,KAAOW,EAA6B,KAAtByC,GAAW,SACzBY,iBAAgBP,GAAgB,KAChCQ,mBAAiBtD,IAAQwC,IAAkB,KAC3Ce,SAAUvD,GAAQwC,EAAW,KAAO,MAGxC,OAAIxC,EAEIzB,EAAAW,EAAAC,cAAA,IAAAqE,EAAA,CAAGpE,UAAW4D,GAAgBE,GAAQ/C,EAAO,OAAS,KACjDA,EAAO5B,EAAAW,EAAAC,cAAA,KAAGC,UAAU,kBAAkBe,GAAY,KACjDA,GAAQG,EAAS/B,EAAAW,EAAAC,cAAA,YAAOmB,GAAgBA,GAKlDsC,EACOrE,EAAAW,EAAAC,cAAA,QAAAqE,EAAA,CAAOpE,UAAW4D,GAAgBE,IAIzC3E,EAAAW,EAAAC,cAAA,SAAAqE,EAAA,CAAQpE,UAAW4D,GAAgBE,GAAQ/C,EAAO,SAAW,KACxDA,EAAO5B,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KAAEnB,EAAAW,EAAAC,cAAA,KAAGC,UAAU,kBAAkBe,GAAU,UAAe,KAChEA,GAAQG,EAAS/B,EAAAW,EAAAC,cAAA,YAAOmB,GAAgBA,EAAOH,EAAO,OAAS,OAK7EiC,EAAOqB,UAAY,CACfpE,KAAMqE,IAAUC,MAAM,CAAC,YAAa,UAAW,cAAe,SAASC,WACvEtD,MAAOoD,IAAUG,OACjBpE,GAAIiE,IAAUG,OACdvB,KAAMoB,IAAUG,OAChB/D,MAAO4D,IAAUG,OACjB7D,KAAM0D,IAAUG,OAChB1D,KAAMuD,IAAUG,OAChBtB,QAASmB,IAAUI,KACnBtB,SAAUkB,IAAUI,KACpBrB,QAASiB,IAAUG,OACnBnB,UAAWgB,IAAUI,KACrBC,OAAQL,IAAUI,KAClBnB,UAAWe,IAAUI,KACrBlB,MAAOc,IAAUI,KACjBjB,QAASa,IAAUI,KACnBhB,OAAQY,IAAUI,KAClBf,KAAMW,IAAUC,MAAM,CAAC,KAAM,KAAM,QAGxBvB,a,gCCxEf5E,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAsG,IAAAxG,EAAAG,EAAAD,EAAA,6BAAAuG,IAAAzG,EAAAG,EAAAD,EAAA,+BAAAwG,IAAA,IAAA5F,EAAAd,EAAA,GAAAe,EAAAf,EAAAgB,EAAAF,GAAA6F,EAAA3G,EAAA,IAAA4G,EAAA5G,EAAA,IAKM6G,EAAWhE,6BAEX2D,EAAW,kBACbzF,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,OAAKmF,IAAG,GAAAlE,OAAKiE,EAAL,kCAA+CjF,UAAU,mBACjEb,EAAAW,EAAAC,cAAA,uFAGAZ,EAAAW,EAAAC,cAAA,oOASF8E,EAAW,kBACb1F,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,YAAP,YACAlB,EAAAW,EAAAC,cAAA,OAAKC,UAAU,mCACXb,EAAAW,EAAAC,cAAA,kJACAZ,EAAAW,EAAAC,cAAA,OAAKC,UAAU,6BACXb,EAAAW,EAAAC,cAAA,OAAKC,UAAU,4BACXb,EAAAW,EAAAC,cAACiF,EAAA,QAAD,CAAQ/E,KAAK,YAAYc,KAAK,gBAAgBH,KAAI,GAAAI,OAAKiE,EAAL,iCAA8C/D,MAAM,uBAE1G/B,EAAAW,EAAAC,cAAA,OAAKC,UAAU,eACXb,EAAAW,EAAAC,cAACiF,EAAA,QAAD,CAAQ/E,KAAK,YAAYc,KAAK,gBAAgBH,KAAI,GAAAI,OAAKiE,EAAL,iCAA8C/D,MAAM,uBAOpH4D,EAAa,kBACf3F,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAQ,SAAA,KACInB,EAAAW,EAAAC,cAAA,MAAIM,GAAG,cAAP,wBACAlB,EAAAW,EAAAC,cAAA,OAAKmF,IAAG,GAAAlE,OAAKiE,EAAL,kCAA+CjF,UAAU,mBAEjEb,EAAAW,EAAAC,cAAA,4CACAZ,EAAAW,EAAAC,cAAA,UACIZ,EAAAW,EAAAC,cAAA,sCACAZ,EAAAW,EAAAC,cAAA,gCACAZ,EAAAW,EAAAC,cAAA,oCAGJZ,EAAAW,EAAAC,cAAA,2BACAZ,EAAAW,EAAAC,cAAA,UACIZ,EAAAW,EAAAC,cAAA,mCAGJZ,EAAAW,EAAAC,cAAA,mCACAZ,EAAAW,EAAAC,cAAA,UACIZ,EAAAW,EAAAC,cAAA,yCAGJZ,EAAAW,EAAAC,cAAA,yBACAZ,EAAAW,EAAAC,cAAA,UACIZ,EAAAW,EAAAC,cAAA,kFACAZ,EAAAW,EAAAC,cAAA,gDAaGoB,UARI,kBACfhC,EAAAW,EAAAC,cAACgF,EAAA,aAAD,CAAczD,QAAM,GAChBnC,EAAAW,EAAAC,cAAC6E,EAAD,MACAzF,EAAAW,EAAAC,cAAC8E,EAAD,MACA1F,EAAAW,EAAAC,cAAC+E,EAAD","file":"scripts/doc-route.chunk_35.js?f352cd8ca1d02603e633","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Property } from \"@docutils\";\nimport { Overview, Download, Guidelines } from \"../../../Resources/resources/typography\";\nimport Button from \"@components/Button\";\n\nconst basename = process.env.basename;\nconst { expandable } = window.dg;\n\nconst ResourcesTypography = () => (\n    <div className=\"expandable\">\n        <button type=\"button\" className=\"expandable-header\" aria-expanded=\"false\" aria-controls=\"resources-typograpy-body\">\n            <span className=\"expandable-headline\">Typography guidelines</span>\n            <small className=\"expandable-subtitle\">From <Link to=\"/res/resources/typography\">typography in Resources</Link></small>\n        </button>\n        <div className=\"expandable-body\" id=\"resources-typography-body\">\n            <Overview />\n            <Download />\n            <Guidelines />\n        </div>\n    </div>\n);\n\nconst Fonts = () => (\n        <>\n            <h2 id=\"font\">Font</h2>\n            <p>The standard font Swedbank Pay DesignGuide uses is Arial. The included font weights you can use are: 400, 600 & 800. Both normal and italicized is available.</p>\n        </>\n);\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>Swedbank Pay DesignGuide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <Property value=\".h1\" /> through <Property value=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst HeroTitle = () => (\n    <>\n        <h2 id=\"hero-title\">Hero title</h2>\n        <p>The class <Property value=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <Property value=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <Property value=\".mark\" /> and <Property value=\".small\" /> classes are also available to apply the same styles as <PrismCode className=\"language-html\">{\"<mark>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<small>\"}</PrismCode> while avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> in HTML5. <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> is meant to highlight words or phrases without conveying additional importance while <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/docs/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <PrismCode className=\"language-html\">{\"<abbr>\"}</PrismCode> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <Property value=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <PrismCode className=\"language-html\">{\"<blockquote>\"}</PrismCode> or <Property value=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <PrismCode className=\"language-html\">{\"<footer>\"}</PrismCode> for identifying the source. Wrap the name of the source work in <PrismCode className=\"language-html\">{\"<cite>\"}</PrismCode>.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst AkkuratMono = () => (\n    <>\n        <h2 id=\"akkurat-mono\">Akkurat Mono</h2>\n        <p>The Akkurat Mono font should be used when code is to be presented, for instance with code tags.</p>\n\n        <h3>Download</h3>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.</p>\n            <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/AkkuratMono.zip`} label=\"Akkurat Mono\" />\n        </div>\n    </>\n);\n\nconst Typography = () => {\n\n    useEffect(() => { expandable.init(); });\n\n    return (\n        <DocContainer docToc>\n            <p className=\"lead\">Documentation and examples for Swedbank Pay DesignGuide typography.</p>\n            <ResourcesTypography />\n            <Fonts />\n            <Headings />\n            <HeroTitle />\n            <Lead />\n            <Inline />\n            <TextUtilities />\n            <Abbreviations />\n            <Blockquotes />\n            <AkkuratMono />\n        </DocContainer>\n    );\n};\n\nexport default Typography;\n\n/* For testing */\nexport { ResourcesTypography, Fonts, Headings, HeroTitle, Lead, Inline, TextUtilities, Abbreviations, Blockquotes, AkkuratMono };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, outline, active, size }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        outline ? \"btn-outline\" : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {(icon && label) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"executive\", \"guiding\", \"destructive\", \"link\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    outline: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"])\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport { DocContainer } from \"@docutils\";\nimport Button from \"@components/Button\";\n\nconst basename = process.env.basename;\n\nconst Overview = () => (\n    <>\n        <img src={`${basename}img/typography/cid_2873206.png`} className=\"img-fluid mb-4\" />\n        <p>\n            Swedbank Pay uses a selection of fonts from Swedbank&apos;s typography toolbox.\n        </p>\n        <p>\n            Our main font is Swedbank Headline Bold, a custom made typeface with an open, welcoming\n            visual voice. In addition Swedbank Sans is used for body copy in printed units whilst Arial is used\n            for body copy on screens.\n        </p>\n\n    </>\n);\n\nconst Download = () => (\n    <>\n        <h2 id=\"download\">Download</h2>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading any typography files, make sure to read the Swedbank Pay typography guidelines. The guidelines can be found below.</p>\n            <div className=\"row justify-content-right\">\n                <div className=\"col-sm-auto mb-3 mb-sm-0\">\n                    <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/cid_2108538.zip`} label=\"Swedbank Headline\" />\n                </div>\n                <div className=\"col-sm-auto\">\n                    <Button type=\"executive\" icon=\"file_download\" href={`${basename}release/fonts/cid_2686429.zip`} label=\"Swedbank Sans\" />\n                </div>\n            </div>\n        </div>\n    </>\n);\n\nconst Guidelines = () => (\n    <>\n        <h2 id=\"guidelines\">Typography guidlines</h2>\n        <img src={`${basename}img/typography/cid_2873207.png`} className=\"img-fluid mb-4\" />\n\n        <h4>Use Swedbank Headline Bold in:</h4>\n        <ul>\n            <li>Headlines and highlights</li>\n            <li>Introduction texts</li>\n            <li>Lower level headlines</li>\n        </ul>\n\n        <h4>Use Arial in:</h4>\n        <ul>\n            <li>Body copy on screens</li>\n        </ul>\n\n        <h4>Use Swedbank Sans in:</h4>\n        <ul>\n            <li>Body copy in printed units</li>\n        </ul>\n\n        <h4>Typesetting</h4>\n        <ul>\n            <li>Use large contrast in size between top level headlines and body text</li>\n            <li>Use metric settings for spacing</li>\n        </ul>\n    </>\n);\n\nconst Typography = () => (\n    <DocContainer docToc>\n        <Overview />\n        <Download />\n        <Guidelines />\n    </DocContainer>\n);\n\nexport default Typography;\n\n/* For testing */\nexport { Overview, Download, Guidelines };\n"],"sourceRoot":""}