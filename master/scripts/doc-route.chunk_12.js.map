{"version":3,"sources":["webpack://payex/./src/App/components/Nav/index.js","webpack://payex/./src/App/Documentation/components/Nav/index.js"],"names":["Nav","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","active","activeParent","Component","e","id","preventDefault","subParent","target","closest","classList","remove","add","setState","_this2","_this$props","items","vertsize","widesize","sidebarClassname","classnames","concat","react_default","a","createElement","className","map","_ref","i","name","icon","subItems","key","itemsname","j","href","onClick","setActive","mediaQueries","propTypes","PropTypes","array","isRequired","oneOf","navItems","navItemsTwoLevels","StandardNav","Fragment","utils","value","lib_default","Link","to","language","showCasePanel","codeFigure","components_Nav","TwoLevels","IconsOnly","Mix","Mobile","nav","init","docToc","Nav_StandardNav","Nav_TwoLevels","Nav_IconsOnly","Nav_Mix","Nav_Mobile"],"mappings":"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","file":"scripts/doc-route.chunk_12.js?7340a34e5f547bddcaa1","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Nav extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            active: \"main-0\",\n            activeParent: null\n        };\n    }\n\n    setActive (e, id) {\n        e.preventDefault();\n\n        const subParent = e.target.closest(\".submenu\");\n\n        if (subParent) {\n            if (this.state.activeParent) {\n                this.state.activeParent.classList.remove(\"submenu-active-parent\");\n            }\n\n            subParent.classList.add(\"submenu-active-parent\");\n            this.setState({ activeParent: subParent });\n        } else if (this.state.activeParent) {\n            this.state.activeParent.classList.remove(\"submenu-active-parent\");\n        }\n\n        this.setState({ active: id });\n\n    }\n\n    render () {\n        const { items, vertsize, widesize } = this.props;\n\n        const sidebarClassname = classnames(\"nav\",\n            vertsize ? `nav-${vertsize}-vertical` : \"\",\n            widesize ? `nav-${widesize}-vertical-wide` : \"\"\n        );\n\n        return (\n            <nav className={sidebarClassname}>\n                <ul>\n                    {items.map(({ name, icon, subItems }, i) => (\n                        <li key={`nav-item-${name}-${i}`}>{\"\\n\"}\n                            { subItems ?\n                                <div className=\"submenu\">{\"\\n\"}\n                                    <i className=\"material-icons\">{icon}</i>{\"\\n\"}\n                                    <span>{name}</span>\n                                    <ul>\n                                        {subItems.map((itemsname, j) => (\n                                            <li key={`nav-subItems-${itemsname}-${j}`} className={this.state.active === `sub-${i}-${j}` ? \"active\" : null}>\n                                                <a href=\"#\" onClick = {e => this.setActive(e, `sub-${i}-${j}`)}>{itemsname}</a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                :\n                                <a href=\"#\" onClick = {e => this.setActive(e, `main-${i}`)} className={this.state.active === `main-${i}` ? \"active\" : null}>{\"\\n\"}\n                                    <i className=\"material-icons\">{icon}</i>{\"\\n\"}\n                                    <span>{name}</span>{\"\\n\"}\n                                </a>}{\"\\n\"}\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        );\n    }\n}\n\nconst mediaQueries = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"];\n\nNav.propTypes = {\n    items: PropTypes.array.isRequired,\n    vertsize: PropTypes.oneOf(mediaQueries),\n    widesize: PropTypes.oneOf(mediaQueries)\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, ExperimentalComponentAlert, Property } from \"#\";\nimport { nav } from \"$/px-script/main\";\nimport NavComponent from \"@/Nav\";\n\nconst navItems = [\n    {\n        name: \"Home\",\n        icon: \"home\"\n    },\n    {\n        name: \"Transactions\",\n        icon: \"shopping_cart\"\n    },\n    {\n        name: \"Notifications\",\n        icon: \"notification_important\"\n    },\n    {\n        name: \"Language\",\n        icon: \"language\"\n    },\n    {\n        name: \"Account\",\n        icon: \"account_balance\"\n    },\n    {\n        name: \"Authentication\",\n        icon: \"fingerprint\"\n    }\n];\n\nconst navItemsTwoLevels = [\n    {\n        name: \"Home\",\n        icon: \"home\"\n    },\n    {\n        name: \"Transactions\",\n        icon: \"shopping_cart\",\n        subItems: [\"Purchase history\", \"Invoice\"]\n    },\n    {\n        name: \"Notifications\",\n        icon: \"notification_important\"\n    },\n    {\n        name: \"Language\",\n        icon: \"language\"\n    },\n    {\n        name: \"Account\",\n        icon: \"account_balance\",\n        subItems: [\"Email\", \"Information\", \"Other things\"]\n    }\n];\n\nconst StandardNav = () => (\n    <>\n        <h2 id=\"nav-standard\">Standard nav</h2>\n        <p>\n            Add class <Property value=\".nav\"/> and <Property value=\".nav-{desired_size}-vertical-wide\"/> to a nav containing an <PrismCode className=\"language-html\">{\"<ul>\"}</PrismCode> to get a standard nav.\n            Add <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<span>\"}</PrismCode> with your desired <Link to=\"/docs/core/icons\">icon</Link> and text. <Property value=\".nav-{desired_size}-vertical-wide\"/> determines\n            when your nav will switch from mobile view to vertical. If you have more than five icons then the first four icons will be the only visible ones in mobile view.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <NavComponent widesize=\"lg\" items={navItems} />\n        </ComponentPreview>\n    </>\n);\n\nconst TwoLevels = () => (\n    <>\n        <h2 id=\"nav-twolevels\">Two levels</h2>\n        <p>\n            You can also display another level of items in the standard nav. Just nest a <PrismCode className=\"language-html\">{\"<DocContainer>\"}</PrismCode> with class <Property value=\".submenu\"/> containing an icon and text like the\n            standard nav and add a new <PrismCode className=\"language-html\">{\"<ul>\"}</PrismCode> with <PrismCode className=\"language-html\">{\"<li>\"}</PrismCode> items. This level does not use icons. List items containing another level are not visible in responsive mode, they will be displayed when the items are expanded.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <NavComponent widesize=\"lg\" items={navItemsTwoLevels} />\n        </ComponentPreview>\n    </>\n);\n\nconst IconsOnly = () => (\n    <>\n        <h2 id=\"nav-tablet\">Icons only</h2>\n        <p>\n            To display only icons use class <Property value=\".nav-{desired_size}-vertical\"/>. Like the first example, this determines when your <Property value=\".nav\"/> will switch from mobile to icons only.\n            In this mode it is possible to display another level of items.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <NavComponent vertsize=\"md\" items={navItemsTwoLevels} />\n        </ComponentPreview>\n    </>\n);\n\nconst Mix = () => (\n    <>\n        <h2 id=\"nav-mix\">Tablet and wide</h2>\n        <p>\n            You can also use both icons only and wide together.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <NavComponent vertsize=\"md\" widesize=\"lg\" items={navItemsTwoLevels} />\n        </ComponentPreview>\n    </>\n);\n\nconst Mobile = () => (\n    <>\n        <h2 id=\"nav-mobile\">Mobile nav</h2>\n        <p>\n            To only display mobile view use class <Property value=\".nav\"/> alone.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <NavComponent items={navItems} />\n        </ComponentPreview>\n    </>\n);\n\nclass Nav extends Component {\n    componentDidUpdate () {\n        nav.init();\n    }\n\n    componentDidMount () {\n        nav.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <ExperimentalComponentAlert />\n                <p className=\"lead\">\n                    Use <PrismCode className=\"language-html\">{\"<nav>\"}</PrismCode>s to create a basic navigational\n                    element containing links.\n                </p>\n                <StandardNav />\n                <TwoLevels />\n                <IconsOnly />\n                <Mix />\n                <Mobile />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Nav;\n\n/* For testing */\nexport { StandardNav, TwoLevels, IconsOnly, Mix, Mobile };\n"],"sourceRoot":""}