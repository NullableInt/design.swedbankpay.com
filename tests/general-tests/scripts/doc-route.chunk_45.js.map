{"version":3,"sources":["webpack://payex/./src/App/Documentation/utils/DocToc/index.js"],"names":["DocToc","props","_this","children","headings","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","component","map","child","type","name","push","title","id","firstChild","secondFirstChild","windowTopPosition","window","pageYOffset","Component","setState","element","scrollTo","top","offsetTop","left","behavior","heading","i","document","getElementById","body","clientHeight","scrollListener","updateWindowPosition","bind","addEventListener","removeEventListener","_this2","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","isWithinBoundary","key","react_router_hash_link__WEBPACK_IMPORTED_MODULE_2__","to","concat","activeClassName","scroll","scrollToElement","propTypes","PropTypes","func","isRequired"],"mappings":"+7BAKA,IA6CMA,cACF,SAAAA,EAAaC,GAAO,IAAAC,EA9CFC,EACZC,EA6Cc,mGAAAC,CAAAC,KAAAN,IAChBE,EAAAK,EAAAD,KAAAE,EAAAR,GAAAS,KAAAH,KAAML,KACDS,MAAQ,CACTN,UAjDUD,EAiDcD,EAAKD,MAAMU,YAAYV,MAAME,SAhDvDC,EAAW,GAEW,mBAAjBD,EAASS,KAChBT,EAASS,IAAI,SAAAC,GACT,GAAwB,+BAApBA,EAAMC,KAAKC,MAA+D,mBAAfF,EAAMC,KACjE,GAAyC,OAArCD,EAAMC,OAAOb,MAAME,SAASW,KAC5BV,EAASY,KAAK,CACVC,MAAOJ,EAAMC,OAAOb,MAAME,SAASF,MAAME,SACzCe,GAAIL,EAAMC,OAAOb,MAAME,SAASF,MAAMiB,SAGvC,CACH,IAAMC,EAAaN,EAAMC,OAAOb,MAAME,SAAS,GAE/C,GAAwB,OAApBgB,EAAWL,KACXV,EAASY,KAAK,CACVC,MAAOE,EAAWlB,MAAME,SACxBe,GAAIC,EAAWlB,MAAMiB,UAGtB,GAA+B,mBAApBC,EAAWL,KAAqB,CAC9C,IAAMM,EAAmBD,EAAWL,OAAOb,MAAME,SAAS,GAE5B,OAA1BiB,EAAiBN,MACjBV,EAASY,KAAK,CACVC,MAAOG,EAAiBnB,MAAME,SAC9Be,GAAIE,EAAiBnB,MAAMiB,UAMrB,OAAfL,EAAMC,MACbV,EAASY,KAAK,CACVC,MAAOJ,EAAMZ,MAAME,SACnBe,GAAIL,EAAMZ,MAAMiB,OAMzBd,GAQCiB,kBAAmBC,OAAOC,aAJdrB,wPADHsB,qEAUblB,KAAKmB,SAAS,CAAEJ,kBAAmBC,OAAOC,sDAG7BG,GAEbJ,OAAOK,SAAS,CACZC,IAAKF,EAAQG,UAAY,IACzBC,KAAM,EACNC,SAAU,wDAKVzB,KAAKI,MAAMN,WACXE,KAAKI,MAAMN,SAASQ,IAAI,SAACoB,EAASC,GAClBD,EAAQJ,IAAb,IAANK,EAAyB,EAAkBC,SAASC,eAAeH,EAAQd,IAAIW,YAGpFvB,KAAKI,MAAMN,SAASY,KAAK,CAAEY,IAAKM,SAASE,KAAKC,gBAGlD/B,KAAKgC,eAAiBhC,KAAKiC,qBAAqBC,KAAKlC,MACrDgB,OAAOmB,iBAAiB,SAAUnC,KAAKgC,gBACvChC,KAAKiC,sEAILjB,OAAOoB,oBAAoB,SAAUpC,KAAKgC,iDAGpC,IAAAK,EAAArC,KACN,OACIsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UACKxC,KAAKI,MAAMN,SAASQ,IAAI,SAACoB,EAASC,GAC/B,GAAID,EAAQd,IAAMc,EAAQf,MAAO,CAC7B,IAAM+B,EAAmBL,EAAKjC,MAAMW,mBAAqBW,EAAQJ,KAC7De,EAAKjC,MAAMW,kBAAoBsB,EAAKjC,MAAMN,SAAS6B,EAAI,GAAGL,IAE9D,OACIgB,EAAAC,EAAAC,cAAA,MAAIG,IAAKhB,EAAGc,UAAWC,EAAmB,SAAW,IACjDJ,EAAAC,EAAAC,cAACI,EAAA,YAAD,CACIC,GAAE,IAAAC,OAAMpB,EAAQd,IAChBmC,gBAAgB,SAChBC,OAAQX,EAAKY,iBAEZvB,EAAQf,mDAarDjB,EAAOwD,UAAY,CAAE7C,UAAW8C,IAAUC,KAAKC,YAEhC3D","file":"scripts/doc-route.chunk_45.js?fbfe379c467db802aefd","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavHashLink as NavLink } from \"react-router-hash-link\";\n\n// FIXME: This function is really moronic and super fragile, but works for now [EH]\nconst _findHeadings = children => {\n    const headings = [];\n\n    if (typeof children.map === \"function\") {\n        children.map(child => {\n            if (child.type.name !== \"ExperimentalComponentAlert\" && typeof child.type === \"function\") {\n                if (child.type().props.children.type === \"h2\") {\n                    headings.push({\n                        title: child.type().props.children.props.children,\n                        id: child.type().props.children.props.id\n                    });\n\n                } else {\n                    const firstChild = child.type().props.children[0];\n\n                    if (firstChild.type === \"h2\") {\n                        headings.push({\n                            title: firstChild.props.children,\n                            id: firstChild.props.id\n                        });\n\n                    } else if (typeof firstChild.type === \"function\") {\n                        const secondFirstChild = firstChild.type().props.children[0]; // Really clever namegiving\n\n                        if (secondFirstChild.type === \"h2\") {\n                            headings.push({\n                                title: secondFirstChild.props.children,\n                                id: secondFirstChild.props.id\n                            });\n                        }\n                    }\n                }\n\n            } else if (child.type === \"h2\") {\n                headings.push({\n                    title: child.props.children,\n                    id: child.props.id\n                });\n            }\n        });\n    }\n\n    return headings;\n};\n\nclass DocToc extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            headings: _findHeadings(this.props.component().props.children),\n            windowTopPosition: window.pageYOffset\n        };\n    }\n\n    updateWindowPosition () {\n        this.setState({ windowTopPosition: window.pageYOffset });\n    }\n\n    scrollToElement (element) {\n        // window.scroll(0, element.offsetTop + 100);\n        window.scrollTo({\n            top: element.offsetTop + 100,\n            left: 0,\n            behavior: \"instant\"\n        });\n    }\n\n    componentDidMount () {\n        if (this.state.headings) {\n            this.state.headings.map((heading, i) => {\n                (i === 0) ? heading.top = 0 : heading.top = document.getElementById(heading.id).offsetTop;\n            });\n\n            this.state.headings.push({ top: document.body.clientHeight });\n        }\n\n        this.scrollListener = this.updateWindowPosition.bind(this);\n        window.addEventListener(\"scroll\", this.scrollListener);\n        this.updateWindowPosition();\n    }\n\n    componentWillUnmount () {\n        window.removeEventListener(\"scroll\", this.scrollListener);\n    }\n\n    render () {\n        return (\n            <div className=\"col-2 d-none d-lg-block\">\n                <div className=\"doc-toc\">\n                    <ul>\n                        {this.state.headings.map((heading, i) => {\n                            if (heading.id && heading.title) {\n                                const isWithinBoundary = this.state.windowTopPosition >= heading.top &&\n                                    this.state.windowTopPosition < this.state.headings[i + 1].top;\n\n                                return (\n                                    <li key={i} className={isWithinBoundary ? \"active\" : \"\"}>\n                                        <NavLink\n                                            to={`#${heading.id}`}\n                                            activeClassName=\"active\"\n                                            scroll={this.scrollToElement}\n                                        >\n                                            {heading.title}\n                                        </NavLink>\n                                    </li>\n                                );\n                            }\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocToc.propTypes = { component: PropTypes.func.isRequired };\n\nexport default DocToc;\n"],"sourceRoot":""}