{"version":3,"sources":["webpack://payex/./src/App/Documentation/utils/Attribute/index.js","webpack://payex/./src/App/components/Alert/index.js","webpack://payex/./src/App/Documentation/utils/DeprecatedComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/ExperimentalComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/Icon/index.js","webpack://payex/./src/App/Documentation/utils/PxScript/index.js","webpack://payex/./src/App/Documentation/utils/DocContainer/index.js","webpack://payex/./src/App/Documentation/utils/index.js","webpack://payex/./src/App/components/InputGroup/index.js","webpack://payex/./src/App/components/FormComponents/Checkbox.js","webpack://payex/./src/App/components/FormComponents/Datepicker.js","webpack://payex/./src/App/components/FormComponents/FormControlText.js","webpack://payex/./src/App/components/FormComponents/Radio.js","webpack://payex/./src/App/components/FormComponents/Rangeslider.js","webpack://payex/./src/App/components/FormComponents/Togglebox.js","webpack://payex/./src/App/components/FormComponents/index.js","webpack://payex/./src/App/Documentation/components/Datepickers/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Property","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_ref","value","a","createElement","className","Attribute","_ref2","data","name","propTypes","PropTypes","string","bool","isRequired","Alert","id","type","icon","close","text","children","concat","href","data-alert-close","onClick","e","preventDefault","oneOf","_components_Alert__WEBPACK_IMPORTED_MODULE_1__","DeprecatedComponentAlert","ExperimentalComponentAlert","Icon","PxScript","renderedParams","renderedSubComponents","component","subComponents","func","params","map","i","key","param","length","array","___WEBPACK_IMPORTED_MODULE_2__","DocContainer","docToc","DocContent","_Attribute__WEBPACK_IMPORTED_MODULE_0__","_ComponentPreview__WEBPACK_IMPORTED_MODULE_1__","_DocContainer__WEBPACK_IMPORTED_MODULE_2__","_DocHeading__WEBPACK_IMPORTED_MODULE_3__","_DocToc__WEBPACK_IMPORTED_MODULE_4__","_DeprecatedComponentAlert__WEBPACK_IMPORTED_MODULE_5__","_ExperimentalComponentAlert__WEBPACK_IMPORTED_MODULE_6__","_Icon__WEBPACK_IMPORTED_MODULE_7__","_PxScript__WEBPACK_IMPORTED_MODULE_8__","Addon","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","color","disabled","Feedback","InputGroup","_ref3","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","opt","data-success","data-error","errorMessag","successMessag","Checkbox","checked","defaultChecked","react_default","Datepicker","format","time","min","max","months","data-datepicker","data-datepicker-format","data-datepicker-time","data-datepicker-min","data-datepicker-max","data-datepicker-value","data-datepicker-months","data-required","FormControlText","Radio","Rangeslider","step","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","FormComponents_Checkbox","FormComponents_Datepicker","FormComponents_FormControlText","FormComponents_Radio","FormComponents_Rangeslider","FormComponents_Togglebox","moment","window","AboutDatepickers","Fragment","SimpleDatepicker","_utils__WEBPACK_IMPORTED_MODULE_1__","language","showCasePanel","codeFigure","_components_FormComponents__WEBPACK_IMPORTED_MODULE_2__","InitialValue","_components_Alert__WEBPACK_IMPORTED_MODULE_4__","CustomFormat","IncludeTime","Required","ShowingMultipleMonths","DateRange","subtract","add","Options","Datepickers","Component","datepicker","init"],"mappings":"sHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAGaJ,EAAW,SAAAM,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAeL,EAAAM,EAAAC,cAAA,QAAMC,UAAU,kBAAkBH,IAEnEI,EAAY,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,KAAMP,EAAYK,EAAZL,MAC7B,OAAIO,GAAQP,EAEJL,EAAAM,EAAAC,cAAA,YACKI,EAAOX,EAAAM,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,SAAiD,KACzDR,EAAAM,EAAAC,cAAA,QAAMC,UAAU,mBAAmBI,GACnCZ,EAAAM,EAAAC,cAAA,QAAMC,UAAU,oBACZR,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAqB,MACpCH,EACDL,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAqB,OAI1CI,IAASP,EAEZL,EAAAM,EAAAC,cAAA,YACKI,EAAOX,EAAAM,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,SAAiD,KACzDR,EAAAM,EAAAC,cAAA,QAAMC,UAAU,mBAAmBI,KAGnCA,GAAQP,EAEZL,EAAAM,EAAAC,cAAA,YACIP,EAAAM,EAAAC,cAAA,QAAMC,UAAU,oBAAoBH,SAHzC,GASXI,EAAUI,UAAY,CAClBD,KAAME,IAAUC,OAChBV,MAAOS,IAAUC,OACjBJ,KAAMG,IAAUE,MAGpBlB,EAASe,UAAY,CACjBR,MAAOS,IAAUC,OAAOE,YAGbR,8CC5Cf,IAAAV,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAGMgB,EAAQ,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,GAAIC,EAAPhB,EAAOgB,KAAMC,EAAbjB,EAAaiB,KAAMC,EAAnBlB,EAAmBkB,MAAOC,EAA1BnB,EAA0BmB,KAAMC,EAAhCpB,EAAgCoB,SAAhC,OACVxB,EAAAM,EAAAC,cAAA,OAAKY,GAAIA,EAAIX,UAAS,eAAAiB,OAAiBL,IAASC,EAAO,KAAO,GACzDA,EAAOrB,EAAAM,EAAAC,cAAA,KAAGC,UAAU,6BAA6Ba,GAAY,KAAME,EAAO,KAAO,GACjFA,EAAOvB,EAAAM,EAAAC,cAAA,SAAIgB,GAAY,KAAMC,EAAW,KAAO,GAC/CA,EAAWxB,EAAAM,EAAAC,cAAA,OAAKC,UAAU,cAAcgB,GAAkB,KAAMF,EAAQ,KAAO,GAC/EA,EAAQtB,EAAAM,EAAAC,cAAA,KAAGmB,KAAK,IAAIC,mBAAiB,GAAGC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBAAmB,SACxE9B,EAAAM,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAAwC,QACrC,KAAM,OAIrBU,EAAML,UAAY,CACdM,GAAIL,IAAUC,OACdK,KAAMN,IAAUiB,MAAM,CAAC,UAAW,UAAW,UAAW,SAAU,YAAYd,WAC9EI,KAAMP,IAAUC,OAChBO,MAAOR,IAAUE,KACjBO,KAAMT,IAAUC,QAGLG,wCCtBfxB,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiC,EAAAtC,EAAA,KAUeuC,UAPkB,kBAC7BjC,EAAAM,EAAAC,cAACyB,EAAA,EAAD,CAAOZ,KAAK,UACRpB,EAAAM,EAAAC,cAAA,MAAIC,UAAU,gBAAd,yBACAR,EAAAM,EAAAC,cAAA,2GCNRb,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiC,EAAAtC,EAAA,KAUewC,UAPoB,kBAC/BlC,EAAAM,EAAAC,cAACyB,EAAA,EAAD,CAAOZ,KAAK,UACRpB,EAAAM,EAAAC,cAAA,MAAIC,UAAU,gBAAd,gCACAR,EAAAM,EAAAC,cAAA,oHCNRb,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAGMyC,EAAO,SAAA/B,GAAA,IAAGiB,EAAHjB,EAAGiB,KAAH,OAAcrB,EAAAM,EAAAC,cAAA,KAAGC,UAAU,kBAAkBa,IAE1Dc,EAAKtB,UAAY,CAAEQ,KALnB3B,EAAAO,EAAAC,GAKyBY,EAAUC,OAAOE,YAE3BkB,8CCPfzC,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAGMkC,EAAW,SAAAhC,GAAgD,IACzDiC,EACAC,EAFYC,EAA6CnC,EAA7CmC,UAAWC,EAAkCpC,EAAlCoC,cAAeC,EAAmBrC,EAAnBqC,KAAMC,EAAatC,EAAbsC,OAoBhD,OAhBIF,IACAF,EAAwBE,EAAcG,IAAI,SAACJ,EAAWK,GAAZ,OACtC5C,EAAAM,EAAAC,cAAA,QAAMsC,IAAKD,GAAIL,EACXvC,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,SAKRkC,IACAL,EAAiBK,EAAOC,IAAI,SAACG,EAAOF,GAAR,OACxB5C,EAAAM,EAAAC,cAAA,QAAMsC,IAAKD,GAAIE,EACTF,EAAIF,EAAOK,OAAS,EAAK/C,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,MAAgD,SAMnFR,EAAAM,EAAAC,cAAA,YACIP,EAAAM,EAAAC,cAAA,kBACAP,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,KACAR,EAAAM,EAAAC,cAAA,YAAOgC,GACPvC,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,KACC8B,EACDtC,EAAAM,EAAAC,cAAA,QAAMC,UAAU,kBAAkBiC,GAClCzC,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,KACC6B,EACDrC,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,QAKZ4B,EAASvB,UAAY,CACjB0B,UAAWzB,IAAUC,OAAOE,WAC5BuB,cAAe1B,IAAUkC,MACzBP,KAAM3B,IAAUC,OAAOE,WACvByB,OAAQ5B,IAAUkC,OAGPZ,8CC7Cf1C,EAAAC,EAAAC,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAA+C,EAAAvD,EAAA,KAKMwD,EAAe,SAAA9C,GAA0B,IAAvB+C,EAAuB/C,EAAvB+C,OAAQ3B,EAAepB,EAAfoB,SACtB4B,EAAa,kBAAMpD,EAAAM,EAAAC,cAAA,OAAKC,UAAS,YAAAiB,OAAc0B,EAAS,YAAc,WAAa3B,IAEzF,OACIxB,EAAAM,EAAAC,cAAA,OAAKC,UAAU,iBACXR,EAAAM,EAAAC,cAAA,OAAKC,UAAU,OACXR,EAAAM,EAAAC,cAAC6C,EAAD,MACCD,EAASnD,EAAAM,EAAAC,cAAC0C,EAAA,OAAD,CAAQV,UAAWa,IAAiB,QAM9DF,EAAarC,UAAY,CACrBsC,OAAQrC,IAAUE,MAGPkC,8CCtBfxD,EAAAC,EAAAC,GAAA,IAAAyD,EAAA3D,EAAA,KAAAA,EAAAG,EAAAD,EAAA,8BAAAyD,EAAA,UAAA3D,EAAAG,EAAAD,EAAA,6BAAAyD,EAAA,eAAAC,EAAA5D,EAAA,KAAAA,EAAAG,EAAAD,EAAA,qCAAA0D,EAAA,cAAAC,EAAA7D,EAAA,KAAAA,EAAAG,EAAAD,EAAA,iCAAA2D,EAAA,cAAAC,EAAA9D,EAAA,KAAAA,EAAAG,EAAAD,EAAA,+BAAA4D,EAAA,cAAAC,EAAA/D,EAAA,KAAAA,EAAAG,EAAAD,EAAA,2BAAA6D,EAAA,cAAAC,EAAAhE,EAAA,KAAAA,EAAAG,EAAAD,EAAA,6CAAA8D,EAAA,cAAAC,EAAAjE,EAAA,KAAAA,EAAAG,EAAAD,EAAA,+CAAA+D,EAAA,cAAAC,EAAAlE,EAAA,KAAAA,EAAAG,EAAAD,EAAA,yBAAAgE,EAAA,cAAAC,EAAAnE,EAAA,KAAAA,EAAAG,EAAAD,EAAA,6BAAAiE,EAAA,4CCAAnE,EAAAG,EAAAD,EAAA,sBAAAkE,IAAA,IAAA/D,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAA6D,EAAArE,EAAA,KAAAsE,EAAAtE,EAAAO,EAAA8D,GAIaD,EAAQ,SAAA1D,GAAA,IAAGgB,EAAHhB,EAAGgB,KAAMf,EAATD,EAASC,MAAO4D,EAAhB7D,EAAgB6D,MAAOC,EAAvB9D,EAAuB8D,SAAvB,MACP,WAAT9C,EACGpB,EAAAM,EAAAC,cAAA,UAAQa,KAAK,SAASZ,UAAS,WAAAiB,OAAawC,GAASC,SAAUA,GAC1D7D,GAEHL,EAAAM,EAAAC,cAAA,QAAMC,UAAU,qBAA+B,SAATY,EAAmBpB,EAAAM,EAAAC,cAAA,KAAGC,UAAU,kBAAkBH,GAAaA,IAGzG8D,EAAW,SAAAzD,GAAA,IAAGW,EAAHX,EAAGW,KAAH,OACbrB,EAAAM,EAAAC,cAAA,QAAMC,UAAU,yBAAyB,SACrCR,EAAAM,EAAAC,cAAA,KAAGC,UAAU,kBAAkBa,GAAU,SAI3C+C,EAAa,SAAAC,GAwBb,IAvBFlD,EAuBEkD,EAvBFlD,GACAC,EAsBEiD,EAtBFjD,KACAkD,EAqBED,EArBFC,YACAC,EAoBEF,EApBFE,QACAC,EAmBEH,EAnBFG,SACAC,EAkBEJ,EAlBFI,SACAC,EAiBEL,EAjBFK,aACAC,EAgBEN,EAhBFM,aACAT,EAeEG,EAfFH,SACAU,EAcEP,EAdFO,SACAC,EAaER,EAbFQ,MACAC,EAYET,EAZFS,gBACAC,EAWEV,EAXFU,cACAC,EAUEX,EAVFW,YACAC,EASEZ,EATFY,WACAC,EAQEb,EARFa,eACAC,EAOEd,EAPFc,aACAC,EAMEf,EANFe,YACAC,EAKEhB,EALFgB,gBACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,UACAC,EAEEnB,EAFFmB,aACAC,EACEpB,EADFoB,eAEMC,EAAQ,CACVtE,KAAMA,GAAQ,KACdZ,UAAW,eACXW,GAAIA,GAAM,KACVmD,YAAaA,GAAe,KAC5BI,aAAcA,GAAgB,GAC9BR,SAAUA,GAAY,KACtBU,SAAUA,GAAY,KACtBD,aAAcA,GAAgB,KAC9BF,SAAUA,GAAY,KACtBF,QAASA,EAAU,GAAK,KACxBoB,gBAAiBnB,EAAW,GAAK,MAG/BoB,EAAkBC,IACpB,cACAf,EAAe,OAAArD,OAAUqD,GAAoB,KAC7CQ,EAAe,eAAiB,MAGpC,OACItF,EAAAM,EAAAC,cAAA,OAAKC,UAAU,cAAc,KACxBqE,EAAQ7E,EAAAM,EAAAC,cAAA,SAAOuF,QAAS3E,GAAK0D,GAAiB,KAAMA,EAAQ,KAAO,KACpE7E,EAAAM,EAAAC,cAAA,OAAKC,UAAWoF,GAAkB,KAC7BZ,EAAchF,EAAAM,EAAAC,cAACuD,EAAD,CAAO1C,KAAM6D,EAAY5E,MAAO2E,EAAaf,MAAOiB,EAAgBhB,SAAUA,IAAe,KAAOc,EAAc,KAAO,KAC9H,aAAT5D,EACGpB,EAAAM,EAAAC,cAAA,WAAcmF,GACH,WAATtE,EACEpB,EAAAM,EAAAC,cAAA,UAAQC,UAAU,eAAe0D,SAAUA,EAAUU,SAAUA,GAAW,SACrEG,EAAcpC,IAAI,SAACoD,EAAKnD,GAAN,OACf5C,EAAAM,EAAAC,cAACR,EAAA,SAAD,CAAU8C,IAAKkD,EAAMnD,GACjB5C,EAAAM,EAAAC,cAAA,cAASwF,GAAenD,IAAMmC,EAAchC,OAAS,EAAK,SAAW,MAEzE,QAGR/C,EAAAM,EAAAC,cAAA,QAAWmF,GAClB,KACAJ,EAAetF,EAAAM,EAAAC,cAAC4D,EAAD,CAAU9C,KAAMiE,IAAmB,KAfvD,IAe8DA,EAAe,KAAO,KAC/EH,EAAenF,EAAAM,EAAAC,cAACuD,EAAD,CAAO1C,KAAMgE,EAAa/E,MAAO8E,EAAclB,MAAOoB,EAAiBnB,SAAUA,IAAe,KAAOiB,EAAe,KAAO,MAEhJI,EAAYvF,EAAAM,EAAAC,cAAA,OAAKC,UAAU,aAAawF,eAAcP,GAAkB,KAAMQ,aAAYT,GAAgB,MAAOD,GAAmB,OAKjJnB,EAAWvD,UAAY,CACnBO,KAAMN,IAAUC,OAAOE,WACvBE,GAAIL,IAAUC,OACduD,YAAaxD,IAAUC,OACvBwD,QAASzD,IAAUC,OACnByD,SAAU1D,IAAUE,KACpByD,SAAU3D,IAAUE,KACpB0D,aAAc5D,IAAUC,OACxB4D,aAAc7D,IAAUC,OACxBmD,SAAUpD,IAAUE,KACpB4D,SAAU9D,IAAUE,KACpB6D,MAAO/D,IAAUC,OACjB+D,gBAAiBhE,IAAUiB,MAAM,CAAC,UAAW,QAAS,KACtDgD,cAAejE,IAAUkC,MACzBgC,YAAalE,IAAUC,OACvBkE,WAAYnE,IAAUiB,MAAM,CAAC,SAAU,OAAQ,KAC/CmD,eAAgBpE,IAAUiB,MAAM,CAAC,UAAW,YAAa,WACzDoD,aAAcrE,IAAUC,OACxBqE,YAAatE,IAAUiB,MAAM,CAAC,SAAU,OAAQ,KAChDsD,gBAAiBvE,IAAUiB,MAAM,CAAC,UAAW,YAAa,WAC1DuD,aAAcxE,IAAUC,OACxBwE,UAAWzE,IAAUC,OACrBmF,YAAapF,IAAUC,OACvBoF,cAAerF,IAAUC,QAGdqD,4EChHTgC,EAAW,SAAAhG,GAAsC,IAAnCe,EAAmCf,EAAnCe,GAAIkF,EAA+BjG,EAA/BiG,QAASnC,EAAsB9D,EAAtB8D,SAAUW,EAAYzE,EAAZyE,MACjCa,EAAQ,CACVtE,KAAM,WACND,GAAIA,GAAM,KACV+C,SAAUA,GAAY,KACtBoC,eAAgBD,GAAW,MAG/B,OACIE,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,YAAY,KACvB+F,EAAAjG,EAAAC,cAAA,QAAWmF,GAAU,KACpBb,EAAQ0B,EAAAjG,EAAAC,cAAA,SAAOuF,QAAS3E,GAAK0D,GAAiB,KAAMA,EAAQ,KAAO,OAKhFuB,EAASvF,UAAY,CACjBM,GAAIL,IAAUC,OACdsF,QAASvF,IAAUE,KACnBkD,SAAUpD,IAAUE,KACpB6D,MAAO/D,IAAUC,QAGNqF,iBCtBTI,EAAa,SAAApG,GAA6F,IAA1FqG,EAA0FrG,EAA1FqG,OAAQC,EAAkFtG,EAAlFsG,KAAMC,EAA4EvG,EAA5EuG,IAAKC,EAAuExG,EAAvEwG,IAAKC,EAAkEzG,EAAlEyG,OAAQxG,EAA0DD,EAA1DC,MAAOwE,EAAmDzE,EAAnDyE,MAAOJ,EAA4CrE,EAA5CqE,SAAUO,EAAkC5E,EAAlC4E,YAAaC,EAAqB7E,EAArB6E,WAAY9D,EAASf,EAATe,GAC7FuE,EAAQ,CACVlF,UAAW,eACXY,KAAM,OACN0F,kBAAmB,GACnBC,yBAA0BN,GAAU,KACpCO,uBAAwBN,GAAQ,KAChCO,sBAAuBN,GAAO,KAC9BO,sBAAuBN,GAAO,KAC9BO,wBAAyB9G,GAAS,KAClC+G,yBAA0BP,GAAU,KACpCQ,gBAAiB5C,GAAY,KAC7BtD,MAGJ,OACI0D,EACI0B,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,cAAc,KACzB+F,EAAAjG,EAAAC,cAAA,SAAOuF,QAAS3E,GAAM,MAAO0D,GAAe,KAC5C0B,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,eAAe,KACzBwE,EAAcuB,EAAAjG,EAAAC,cAAC6D,EAAA,EAAD,CAAOhD,KAAO6D,EAAa5E,MAAQ2E,IAAmB,KAAM,KAC3EuB,EAAAjG,EAAAC,cAAA,QAAWmF,GAAU,OAG7Ba,EAAAjG,EAAAC,cAAA,QAAWmF,IAGvBc,EAAW3F,UAAY,CACnB4F,OAAQ3F,IAAUiB,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,YACvD2E,KAAM5F,IAAUE,KAChB2F,IAAK7F,IAAUC,OACf6F,IAAK9F,IAAUC,OACf8F,OAAQ/F,IAAUC,OAClBV,MAAOS,IAAUC,OACjB8D,MAAO/D,IAAUC,OACjBI,GAAIL,IAAUC,OACd0D,SAAU3D,IAAUE,MAGTwF,QCxCTc,EAAkB,SAAAlH,GAAA,IAAGmB,EAAHnB,EAAGmB,KAAMsD,EAATzE,EAASyE,MAAT,OACpB0B,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,cAAc,KACxBqE,EAAQ0B,EAAAjG,EAAAC,cAAA,aAAQsE,GAAiB,KAAMA,EAAQ,KAAO,KACvD0B,EAAAjG,EAAAC,cAAA,QAAMC,UAAU,qBAAqBe,GAAa,OAI1D+F,EAAgBzG,UAAY,CACxBU,KAAMT,IAAUC,OAAOE,WACvB4D,MAAO/D,IAAUC,QAGNuG,QCZTC,EAAQ,SAAAnH,GAA4C,IAAzCe,EAAyCf,EAAzCe,GAAIkF,EAAqCjG,EAArCiG,QAASnC,EAA4B9D,EAA5B8D,SAAUW,EAAkBzE,EAAlByE,MAC9Ba,EAAQ,CACVtE,KAAM,QACND,GAAIA,GAAM,KACVP,KAJkDR,EAAXQ,MAIzB,KACdsD,SAAUA,GAAY,KACtBoC,eAAgBD,GAAW,MAG/B,OACIE,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,SAAS,KACpB+F,EAAAjG,EAAAC,cAAA,QAAWmF,GAAU,KACpBb,EAAQ0B,EAAAjG,EAAAC,cAAA,SAAOuF,QAAS3E,GAAK0D,GAAiB,KAAMA,EAAQ,KAAO,OAKhF0C,EAAM1G,UAAY,CACdM,GAAIL,IAAUC,OACdH,KAAME,IAAUC,OAChBsF,QAASvF,IAAUE,KACnBkD,SAAUpD,IAAUE,KACpB6D,MAAO/D,IAAUC,QAGNwG,QCzBTC,EAAc,SAAApH,GAA2H,IAAxHQ,EAAwHR,EAAxHQ,KAAM+F,EAAkHvG,EAAlHuG,IAAKC,EAA6GxG,EAA7GwG,IAAKa,EAAwGrH,EAAxGqH,KAAMxD,EAAkG7D,EAAlG6D,MAAO5D,EAA2FD,EAA3FC,MAAO6D,EAAoF9D,EAApF8D,SAAUwD,EAA0EtH,EAA1EsH,WAAYC,EAA8DvH,EAA9DuH,iBAAkBC,EAA4CxH,EAA5CwH,kBAAmBC,EAAyBzH,EAAzByH,mBAC5GnC,EAAQ,CACVtE,KAAM,QACNR,OACA+F,MACAC,MACAa,OACA/C,aAAcrE,EACd6D,YAaJ,OACIqC,EAAAjG,EAAAC,cAAA,OAAKC,UAAS,2BAAAiB,OAA6BwC,GAAgB,QAA7C,WAAAxC,OAA8DoG,GAA0C,UAAY,KAC9HtB,EAAAjG,EAAAC,cAAA,QAAWmF,GAASgC,EAAa,KAAO,KACvCA,EAAanB,EAAAjG,EAAAC,cAbH,kBACfgG,EAAAjG,EAAAC,cAAA,UAAQC,UAAU,eAAgB,SAC9B+F,EAAAjG,EAAAC,cAAA,SAAI,WACCoH,EAAmBpB,EAAAjG,EAAAC,cAAA,YAAOoH,GAA2B,KAAMA,EAAmB,WAAa,KAC5FpB,EAAAjG,EAAAC,cAAA,QAAMuH,iBAAA,GAAezH,GAAc,WAClCuH,EAAoBrB,EAAAjG,EAAAC,cAAA,YAAOqH,GAA4B,KAAMA,EAAoB,SAAW,MAC5F,SAOS,MAAiB,KAAMF,EAAa,KAAO,OAKrEF,EAAY3G,UAAY,CACpBD,KAAME,IAAUC,OAChB4F,IAAK7F,IAAUiH,OACfnB,IAAK9F,IAAUiH,OACfN,KAAM3G,IAAUiH,OAChB9D,MAAOnD,IAAUiB,MAAM,CAAC,QAAS,UAAW,YAC5C1B,MAAOS,IAAUiH,OACjB7D,SAAUpD,IAAUE,KACpB0G,WAAY5G,IAAUE,KACtB2G,iBAAkB7G,IAAUC,OAC5B6G,kBAAmB9G,IAAUC,OAC7B8G,mBAAoB/G,IAAUC,QAGnByG,QC3CTQ,EAAY,SAAA5H,GAAsC,IAAnCe,EAAmCf,EAAnCe,GAAIkF,EAA+BjG,EAA/BiG,QAASnC,EAAsB9D,EAAtB8D,SAAUW,EAAYzE,EAAZyE,MAClCa,EAAQ,CACVtE,KAAM,WACND,GAAIA,GAAM,KACV+C,SAAUA,GAAY,KACtBoC,eAAgBD,GAAW,MAG/B,OACIE,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,aAAa,KACxB+F,EAAAjG,EAAAC,cAAA,QAAWmF,GAAU,KACpBb,EAAQ0B,EAAAjG,EAAAC,cAAA,SAAOuF,QAAS3E,GAAK0D,GAAiB,KAAMA,EAAQ,KAAO,OAKhFmD,EAAUnH,UAAY,CAClBM,GAAIL,IAAUC,OACdsF,QAASvF,IAAUE,KACnBkD,SAAUpD,IAAUE,KACpB6D,MAAO/D,IAAUC,QAGNiH,QC1BftI,EAAAG,EAAAD,EAAA,sBAAAqI,IAAAvI,EAAAG,EAAAD,EAAA,sBAAAsI,IAAAxI,EAAAG,EAAAD,EAAA,sBAAAuI,IAAAzI,EAAAG,EAAAD,EAAA,sBAAAwI,IAAA1I,EAAAG,EAAAD,EAAA,sBAAAyI,IAAA3I,EAAAG,EAAAD,EAAA,sBAAA0I,muCCOA,IAAMC,EAASC,OAAOD,OAEhBE,EAAmB,kBACrBzI,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,qBAAP,SACAnB,EAAAM,EAAAC,cAAA,udAQFoI,EAAmB,kBACrB3I,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,qBAAP,qBACAnB,EAAAM,EAAAC,cAAA,qEAA4DP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,eAAjF,iCAA8HZ,EAAAM,EAAAC,cAACqI,EAAA,SAAD,CAAUvI,MAAM,gBAA9I,KACAL,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,OACNI,WAAW,OACXD,YAAY,QACZ7D,GAAG,wBAMb8H,EAAe,kBACjBjJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,iBAAP,iBACAnB,EAAAM,EAAAC,cAAA,wEAA+DP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACN,MAAM,cAAcO,KAAK,qBAAxG,KACAZ,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACI3I,MAAOkI,IAAS9B,OAAO,cACvB5B,MAAM,OACNI,WAAW,OACXD,YAAY,QACZ7D,GAAG,2BAGXnB,EAAAM,EAAAC,cAAC2I,EAAA,EAAD,CAAO9H,KAAK,WACRpB,EAAAM,EAAAC,cAAA,sCACAP,EAAAM,EAAAC,cAAA,8HAAqHP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,YAAtI,4CAKN8I,EAAe,kBACjBnJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,iBAAP,iBACAnB,EAAAM,EAAAC,cAAA,2CACmCP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,oBAAoBP,MAAM,sCADlF,KAGAL,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,kBACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,KACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,kBAEPnB,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,gBACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,KACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,kBAEPnB,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,eACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,KACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,kBAEPnB,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,gBACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,KACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,kBAEPnB,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,gBACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,KACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,kBAEPnB,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInE,MAAM,qBACNxE,MAAOkI,IAAS9B,OAAO,cACvBA,OAAO,UACPxB,WAAW,OACXD,YAAY,QACZ7D,GAAG,0BAMbiI,EAAc,kBAChBpJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,gBAAP,gBACAnB,EAAAM,EAAAC,cAAA,+DAAsDP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,kBAAkBP,MAAM,SAAnG,KACAL,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACItC,MAAI,EACJrG,MAAOkI,IAAS9B,OAAO,oBACvBA,OAAO,KACP5B,MAAM,OACNI,WAAW,OACXD,YAAY,QACZ7D,GAAG,+BAMbkI,EAAW,kBACbrJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,YAAP,YACAnB,EAAAM,EAAAC,cAAA,uBAAcP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,WAAWP,MAAM,SAApD,+MACAL,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACIvE,UAAQ,EAACI,MAAM,OACfI,WAAW,OACXD,YAAY,QACZ7D,GAAG,2BAMbmI,EAAwB,kBAC1BtJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,2BAAP,2BACAnB,EAAAM,EAAAC,cAAA,0FAAiFP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,oBAAoBP,MAAM,aAAhI,KACAL,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACInC,OAAO,IACPhC,MAAM,OACNI,WAAW,OACXD,YAAY,QACZ7D,GAAG,kCAMboI,EAAY,kBACdvJ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,cAAP,cACAnB,EAAAM,EAAAC,cAAA,2EACmEP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,mBADxF,QACgHZ,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,oBAErIZ,EAAAM,EAAAC,cAACqI,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GAEtD/I,EAAAM,EAAAC,cAACyI,EAAA,EAAD,CACI3I,MAAOkI,IAAS9B,OAAO,cACvBE,IAAK4B,IAASiB,SAAS,EAAG,KAAK/C,OAAO,cACtCG,IAAK2B,IAASkB,IAAI,EAAG,KAAKhD,OAAO,cACjCI,OAAO,IACPJ,OAAO,KACP5B,MAAM,OACNI,WAAW,OACXD,YAAY,QACZ7D,GAAG,2BAIXnB,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,kBAAH,0KAIFmJ,EAAU,kBACZ1J,EAAAM,EAAAC,cAAAP,EAAAM,EAAAoI,SAAA,KACI1I,EAAAM,EAAAC,cAAA,MAAIY,GAAG,qBAAP,qBACAnB,EAAAM,EAAAC,cAAA,sCAA6BP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,eAAlD,OAFJ,oGAE6KZ,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,UAF9L,8BAGIL,EAAAM,EAAAC,cAAA,SAAOC,UAAU,uBACbR,EAAAM,EAAAC,cAAA,aACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,uBACAP,EAAAM,EAAAC,cAAA,2BACAP,EAAAM,EAAAC,cAAA,2BAGRP,EAAAM,EAAAC,cAAA,aACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,sBAEzBZ,EAAAM,EAAAC,cAAA,WACAP,EAAAM,EAAAC,cAAA,iKAIJP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,uBAEzBZ,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,aAErBL,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,4JAGAP,EAAAM,EAAAC,cAAA,iDAGAP,EAAAM,EAAAC,cAAA,MAAIC,UAAU,QACVR,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAAvC,gBACAL,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAAvC,gBACAL,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAAvC,gBACAL,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAAvC,gBACAL,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAAvC,gBACAL,EAAAM,EAAAC,cAAA,MAAIC,UAAU,SAAQR,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,YAAvC,6BAIZL,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,qBAEzBZ,EAAAM,EAAAC,cAAA,WACAP,EAAAM,EAAAC,cAAA,mGAIJP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,uBAEzBZ,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWvI,MAAM,OAErBL,EAAAM,EAAAC,cAAA,6DAIJP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,oBAEzBZ,EAAAM,EAAAC,cAAA,WACAP,EAAAM,EAAAC,cAAA,yCAIJP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,oBAEzBZ,EAAAM,EAAAC,cAAA,WACAP,EAAAM,EAAAC,cAAA,uCAIJP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAAA,UACIP,EAAAM,EAAAC,cAACqI,EAAA,UAAD,CAAWjI,MAAI,EAACC,KAAK,cAEzBZ,EAAAM,EAAAC,cAAA,WACAP,EAAAM,EAAAC,cAAA,4HASdoJ,gaAAoBC,kEAElBC,aAAWC,wCAIX,OACI9J,EAAAM,EAAAC,cAACqI,EAAA,aAAD,CAAczF,QAAM,GAChBnD,EAAAM,EAAAC,cAAA,KAAGC,UAAU,QAAb,8LAIAR,EAAAM,EAAAC,cAACkI,EAAD,MACAzI,EAAAM,EAAAC,cAACoI,EAAD,MACA3I,EAAAM,EAAAC,cAAC0I,EAAD,MACAjJ,EAAAM,EAAAC,cAAC4I,EAAD,MACAnJ,EAAAM,EAAAC,cAAC6I,EAAD,MACApJ,EAAAM,EAAAC,cAAC8I,EAAD,MACArJ,EAAAM,EAAAC,cAAC+I,EAAD,MACAtJ,EAAAM,EAAAC,cAACgJ,EAAD,MACAvJ,EAAAM,EAAAC,cAACmJ,EAAD,4CAMDC","file":"scripts/doc-route.chunk_6.js?268f0434bf7103972f8d","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Property = ({ value }) => <code className=\"token property\">{value}</code>;\n\nconst Attribute = ({ data, name, value }) => {\n    if (name && value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n                <span className=\"token attr-value\">\n                    <span className=\"token punctuation\">{\"=\\\"\"}</span>\n                    {value}\n                    <span className=\"token punctuation\">{\"\\\"\"}</span>\n                </span>\n            </code>\n        );\n    } else if (name && !value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n            </code>\n        );\n    } else if (!name && value) {\n        return (\n            <code>\n                <span className=\"token attr-value\">{value}</span>\n            </code>\n        );\n    }\n};\n\nAttribute.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    data: PropTypes.bool\n};\n\nProperty.propTypes = {\n    value: PropTypes.string.isRequired\n};\n\nexport default Attribute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Alert = ({ id, type, icon, close, text, children }) => (\n    <div id={id} className={`alert alert-${type}`}>{icon ? \"\\n\" : \"\"}\n        {icon ? <i className=\"material-icons alert-icon\">{icon}</i> : null}{text ? \"\\n\" : \"\"}\n        {text ? <p>{text}</p> : null}{children ? \"\\n\" : \"\"}\n        {children ? <div className=\"alert-body\">{children}</div> : null}{close ? \"\\n\" : \"\"}\n        {close ? <a href=\"#\" data-alert-close=\"\" onClick={e => e.preventDefault()}>{\"\\n\\t\\t\"}\n            <i className=\"material-icons\">close</i>{\"\\n\\t\"}\n        </a> : null}{\"\\n\"}\n    </div>\n);\n\nAlert.propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.oneOf([\"success\", \"neutral\", \"warning\", \"danger\", \"default\"]).isRequired,\n    icon: PropTypes.string,\n    close: PropTypes.bool,\n    text: PropTypes.string\n};\n\nexport default Alert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst DeprecatedComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component deprecated!</h3>\n        <p>This component has been deprecated and should not be used!</p>\n    </Alert>\n);\n\nexport default DeprecatedComponentAlert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst ExperimentalComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component under development!</h3>\n        <p>This component is still under development and is subject to change.</p>\n    </Alert>\n);\n\nexport default ExperimentalComponentAlert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Icon = ({ icon }) => <i className=\"material-icons\">{icon}</i>;\n\nIcon.propTypes = { icon: PropTypes.string.isRequired };\n\nexport default Icon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PxScript = ({ component, subComponents, func, params }) => {\n    let renderedParams;\n    let renderedSubComponents;\n\n    if (subComponents) {\n        renderedSubComponents = subComponents.map((component, i) => (\n            <span key={i}>{component}\n                <span className=\"token punctuation\">.</span>\n            </span>\n        ));\n    }\n\n    if (params) {\n        renderedParams = params.map((param, i) => (\n            <span key={i}>{param}\n                {(i < params.length - 1) ? <span className=\"token punctuation\">, </span> : null}\n            </span>\n        ));\n    }\n\n    return (\n        <code>\n            <span>px</span>\n            <span className=\"token punctuation\">.</span>\n            <span>{component}</span>\n            <span className=\"token punctuation\">.</span>\n            {renderedSubComponents}\n            <span className=\"token function\">{func}</span>\n            <span className=\"token punctuation\">(</span>\n            {renderedParams}\n            <span className=\"token punctuation\">);</span>\n        </code>\n    );\n};\n\nPxScript.propTypes = {\n    component: PropTypes.string.isRequired,\n    subComponents: PropTypes.array,\n    func: PropTypes.string.isRequired,\n    params: PropTypes.array\n};\n\nexport default PxScript;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { DocToc } from \"#\";\n\nconst DocContainer = ({ docToc, children }) => {\n    const DocContent = () => <div className={`doc-body ${docToc ? \"col-lg-10\" : \"col-12\"}`}>{children}</div>;\n\n    return (\n        <div className=\"doc-container\">\n            <div className=\"row\">\n                <DocContent />\n                {docToc ? <DocToc component={DocContent} /> : null}\n            </div>\n        </div>\n    );\n};\n\nDocContainer.propTypes = {\n    docToc: PropTypes.bool\n};\n\nexport default DocContainer;\n","import Attribute, { Property } from \"./Attribute\";\nimport ComponentPreview from \"./ComponentPreview\";\nimport DocContainer from \"./DocContainer\";\nimport DocHeading from \"./DocHeading\";\nimport DocToc from \"./DocToc\";\nimport DeprecatedComponentAlert from \"./DeprecatedComponentAlert\";\nimport ExperimentalComponentAlert from \"./ExperimentalComponentAlert\";\nimport Icon from \"./Icon\";\nimport PxScript from \"./PxScript\";\n\nexport {\n    Attribute,\n    ComponentPreview,\n    DocContainer,\n    DocHeading,\n    DocToc,\n    DeprecatedComponentAlert,\n    ExperimentalComponentAlert,\n    Icon,\n    Property,\n    PxScript\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className=\"form-group\">{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            <div className={inputGrpClasses}>{\"\\n\"}\n                {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                {type === \"textarea\" ?\n                    <textarea {...attrs} ></textarea>\n                    : type === \"select\" ?\n                        <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                            {selectOptions.map((opt, i) => (\n                                <Fragment key={opt + i}>\n                                    <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                </Fragment>\n                            ))}{\"\\n\\t\"}\n                        </select>\n                        :\n                        <input {...attrs} />}\n                {\"\\n\"}\n                {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n            </div>\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"success\", \"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.string,\n    errorMessag: PropTypes.string,\n    successMessag: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, required, prefixValue, prefixType, id }) => {\n    const attrs = {\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-required\": required || null,\n        id\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React, { Component } from \"react\";\n\nimport { ComponentPreview, Attribute, Property, DocContainer } from \"#\";\nimport { Datepicker as DatepickerComponent } from \"@/FormComponents\";\nimport { datepicker } from \"$/px-script/main\";\nimport Alert from \"@/Alert\";\n\nconst moment = window.moment;\n\nconst AboutDatepickers = () => (\n    <>\n        <h2 id=\"about-datepickers\">About</h2>\n        <p>\n            Datepickers give a visual presentation of days, months and years. By utilizing the datepicker you can be assured the given input is in the format you\n            expect without having to deal with too much client-side validation. Datepickers should be used for recent dates to avoid having the user click a lot of times to find the required date.\n            If you need a date of birth or something similarly far back, an input field with proper validation will be easier to use.\n        </p>\n    </>\n);\n\nconst SimpleDatepicker = () => (\n    <>\n        <h2 id=\"simple-datepicker\">Simple datepicker</h2>\n        <p>A basic datepicker can be made by applying the attribute <Attribute data name=\"datepicker\" /> to an input element inside a <Property value=\".form-group\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"simle-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst InitialValue = () => (\n    <>\n        <h2 id=\"initial-value\">Initial value</h2>\n        <p>If you want to set an initial value for your datepicker use <Attribute data value=\"{your-date}\" name=\"datepicker-value\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                value={moment().format(\"YYYY-MM-DD\")}\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"init-value-datepicker\"\n            />\n        </ComponentPreview>\n        <Alert type=\"warning\">\n            <h5>Initial value and format</h5>\n            <p>Keep in mind that the datepicker will not insert the initial value if it does not correctly match the set format (<Attribute value=\"iso8601\"/> if you have not specified a format).</p>\n        </Alert>\n    </>\n);\n\nconst CustomFormat = () => (\n    <>\n        <h2 id=\"custom-format\">Custom format</h2>\n        <p>\n            To use a custom format include <Attribute data name=\"datepicker-format\" value=\"[nb|sv|da|fi|en|iso8601(default)]\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                label=\"nb (norwegian):\"\n                value={moment().format(\"DD.MM.YYYY\")}\n                format=\"nb\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"nb-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"sv (swedish):\"\n                value={moment().format(\"YYYY-MM-DD\")}\n                format=\"sv\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"sv-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"da (danish):\"\n                value={moment().format(\"DD.MM.YYYY\")}\n                format=\"da\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"da-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"fi (finnish):\"\n                value={moment().format(\"DD.MM.YYYY\")}\n                format=\"fi\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"fi-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"en (english):\"\n                value={moment().format(\"DD/MM/YYYY\")}\n                format=\"en\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"en-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"iso8601 (robotic):\"\n                value={moment().format(\"YYYY-MM-DD\")}\n                format=\"iso8601\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"iso8601-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst IncludeTime = () => (\n    <>\n        <h2 id=\"include-time\">Include time</h2>\n        <p>Adding time to your datepicker is as easy as using <Attribute data name=\"datepicker-time\" value=\"true\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                time\n                value={moment().format(\"HH:mm DD.MM.YYYY\")}\n                format=\"nb\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"include-time-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst Required = () => (\n    <>\n        <h2 id=\"required\">Required</h2>\n        <p>If you set <Attribute data name=\"required\" value=\"true\" /> to true it will autopopulate the input after clicking it if no date is selected. Keep in mind that if you do not pass a value to the datepicker it will remain blank if the user does not click the input.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                required label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"required-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst ShowingMultipleMonths = () => (\n    <>\n        <h2 id=\"showing-multiple-months\">Showing multiple months</h2>\n        <p>If you need to show more than one month in your date picker use the attribute <Attribute data name=\"datepicker-months\" value=\"[number]\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                months=\"2\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"multiple-months-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst DateRange = () => (\n    <>\n        <h2 id=\"date-range\">Date range</h2>\n        <p>\n            You can set a range of available dates to select from by using <Attribute data name=\"datepicker-min\" /> and <Attribute data name=\"datepicker-max\" />\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            {/* eslint-disable newline-per-chained-call*/}\n            <DatepickerComponent\n                value={moment().format(\"DD.MM.YYYY\")}\n                min={moment().subtract(5, \"d\").format(\"DD.MM.YYYY\")}\n                max={moment().add(5, \"d\").format(\"DD.MM.YYYY\")}\n                months=\"2\"\n                format=\"nb\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"date-range-datepicker\"\n            />\n            {/* eslint-enable newline-per-chained-call*/}\n        </ComponentPreview>\n        <p><b>NOTE:</b> Using range with required and no initial value will make the datepicker select current date if a user clicks the input and does not select a date within the range.</p>\n    </>\n);\n\nconst Options = () => (\n    <>\n        <h2 id=\"available-options\">Available options</h2>\n        <p>Options available through <Attribute data name=\"datepicker\" />...</p> Keep in mind that setting any of these values will render them true, so setting an attribute to <Attribute value=\"false\" /> will still render it true.\n        <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Attribute</th>\n                    <th>Default value</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-value\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        Value used to initialize calendar. Set this value with the same format currently set for the datepicker (including time if you have enabled that).\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-format\" />\n                    </td>\n                    <td>\n                        <Attribute value=\"iso8601\" />\n                    </td>\n                    <td>\n                        <p>\n                            Format string used for the input field and names for days and months. All have the same time format (HH:mm), and starts the week on monday (1).\n                        </p>\n                        <p>\n                            The following options are available:\n                        </p>\n                        <ul className=\"list\">\n                            <li className=\"mb-sm\"><Attribute value=\"nb\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><Attribute value=\"sv\" />: YYYY-MM-DD</li>\n                            <li className=\"mb-sm\"><Attribute value=\"da\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><Attribute value=\"fi\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><Attribute value=\"en\" />: DD/MM/YYYY</li>\n                            <li className=\"mb-sm\"><Attribute value=\"iso8601\" />: YYYY-MM-DD (default)</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-time\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        If the calendar shows the current time and allows you to change it using a dropdown.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-months\" />\n                    </td>\n                    <td>\n                        <Attribute value=\"1\" />\n                    </td>\n                    <td>\n                        Number of months to display in the datepicker.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-min\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        Disallow dates before min.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"datepicker-max\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        Disallow dates past max.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <Attribute data name=\"required\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        Forces a value in the input field, but only if an initial value is set or the user clicks/tabs the input.\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </>\n);\n\nclass Datepickers extends Component {\n    componentDidMount () {\n        datepicker.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Datepickers makes it easy to get dates from your users. With datepickers you do not have to worry about how your users\n                    write the given date, alleviating the need to do format validation.\n                </p>\n                <AboutDatepickers />\n                <SimpleDatepicker />\n                <InitialValue />\n                <CustomFormat />\n                <IncludeTime />\n                <Required />\n                <ShowingMultipleMonths />\n                <DateRange />\n                <Options />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Datepickers;\n\n/* For testing */\nexport { SimpleDatepicker, InitialValue, CustomFormat, IncludeTime, Required, ShowingMultipleMonths, DateRange, Options };\n"],"sourceRoot":""}