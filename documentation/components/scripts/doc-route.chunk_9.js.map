{"version":3,"sources":["webpack://payex/./src/App/Documentation/utils/Attribute/index.js","webpack://payex/./src/App/components/Alert/index.js","webpack://payex/./src/App/Documentation/utils/DeprecatedComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/ExperimentalComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/Icon/index.js","webpack://payex/./src/App/Documentation/utils/PxScript/index.js","webpack://payex/./src/App/Documentation/utils/ComponentPreview/index.js","webpack://payex/./src/App/Documentation/utils/index.js","webpack://payex/./src/App/components/InputGroup/index.js","webpack://payex/./src/App/Documentation/components/InputGroup/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Property","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_ref","value","a","createElement","className","Attribute","_ref2","data","name","propTypes","PropTypes","string","bool","isRequired","Alert","id","type","icon","close","text","children","concat","href","data-alert-close","onClick","e","preventDefault","oneOf","_components_Alert__WEBPACK_IMPORTED_MODULE_1__","DeprecatedComponentAlert","ExperimentalComponentAlert","Icon","PxScript","renderedParams","renderedSubComponents","component","subComponents","func","params","map","i","key","param","length","array","ComponentPreview","language","removeOuterTag","hideValue","removeList","showCasePanel","codeFigure","dangerousHTML","_removeOuterTag","element","div","document","innerHTML","renderToStaticMarkup","firstElementChild","firstChild","nodeValue","_removeList","listElements","querySelectorAll","htmlString","forEach","el","Fragment","val","code","v","child","_typeof","console","warn","jsbeautifier","html_beautify","replace","css","defaultProps","style","prism_react_renderer__WEBPACK_IMPORTED_MODULE_4__","_extends","theme","undefined","tokens","getLineProps","getTokenProps","line","token","_Attribute__WEBPACK_IMPORTED_MODULE_0__","_ComponentPreview__WEBPACK_IMPORTED_MODULE_1__","_DocHeading__WEBPACK_IMPORTED_MODULE_2__","_DocToc__WEBPACK_IMPORTED_MODULE_3__","_DeprecatedComponentAlert__WEBPACK_IMPORTED_MODULE_4__","_ExperimentalComponentAlert__WEBPACK_IMPORTED_MODULE_5__","_Icon__WEBPACK_IMPORTED_MODULE_6__","_PxScript__WEBPACK_IMPORTED_MODULE_7__","Addon","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","color","disabled","Feedback","InputGroup","_ref3","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","opt","data-success","data-error","errorMessag","successMessag","BasicExample","_utils__WEBPACK_IMPORTED_MODULE_1__","_components_InputGroup__WEBPACK_IMPORTED_MODULE_3__","CheckboxesAndRadios","ButtonAddons","react_prism__WEBPACK_IMPORTED_MODULE_2___default","WithSelect","WithFeedbackIcon","ValidationStates","Disabled","InputGroupText","Component"],"mappings":"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","file":"scripts/doc-route.chunk_9.js?f0f61209cfa909dd3b23","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Property = ({ value }) => <code className=\"token property\">{value}</code>;\n\nconst Attribute = ({ data, name, value }) => {\n    if (name && value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n                <span className=\"token attr-value\">\n                    <span className=\"token punctuation\">{\"=\\\"\"}</span>\n                    {value}\n                    <span className=\"token punctuation\">{\"\\\"\"}</span>\n                </span>\n            </code>\n        );\n    } else if (name && !value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n            </code>\n        );\n    } else if (!name && value) {\n        return (\n            <code>\n                <span className=\"token attr-value\">{value}</span>\n            </code>\n        );\n    }\n};\n\nAttribute.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    data: PropTypes.bool\n};\n\nProperty.propTypes = {\n    value: PropTypes.string.isRequired\n};\n\nexport default Attribute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Alert = ({ id, type, icon, close, text, children }) => (\n    <div id={id} className={`alert alert-${type}`}>{icon ? \"\\n\" : \"\"}\n        {icon ? <i className=\"material-icons alert-icon\">{icon}</i> : null}{text ? \"\\n\" : \"\"}\n        {text ? <p>{text}</p> : null}{children ? \"\\n\" : \"\"}\n        {children ? <div className=\"alert-body\">{children}</div> : null}{close ? \"\\n\" : \"\"}\n        {close ? <a href=\"#\" data-alert-close=\"\" onClick={e => e.preventDefault()}>{\"\\n\\t\\t\"}\n            <i className=\"material-icons\">close</i>{\"\\n\\t\"}\n        </a> : null}{\"\\n\"}\n    </div>\n);\n\nAlert.propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.oneOf([\"success\", \"neutral\", \"warning\", \"danger\", \"default\"]).isRequired,\n    icon: PropTypes.string,\n    close: PropTypes.bool,\n    text: PropTypes.string\n};\n\nexport default Alert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst DeprecatedComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component deprecated!</h3>\n        <p>This component has been deprecated and should not be used!</p>\n    </Alert>\n);\n\nexport default DeprecatedComponentAlert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst ExperimentalComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component under development!</h3>\n        <p>This component is still under development and is subject to change.</p>\n    </Alert>\n);\n\nexport default ExperimentalComponentAlert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Icon = ({ icon }) => <i className=\"material-icons\">{icon}</i>;\n\nIcon.propTypes = { icon: PropTypes.string.isRequired };\n\nexport default Icon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PxScript = ({ component, subComponents, func, params }) => {\n    let renderedParams;\n    let renderedSubComponents;\n\n    if (subComponents) {\n        renderedSubComponents = subComponents.map((component, i) => (\n            <span key={i}>{component}\n                <span className=\"token punctuation\">.</span>\n            </span>\n        ));\n    }\n\n    if (params) {\n        renderedParams = params.map((param, i) => (\n            <span key={i}>{param}\n                {(i < params.length - 1) ? <span className=\"token punctuation\">, </span> : null}\n            </span>\n        ));\n    }\n\n    return (\n        <code>\n            <span>px</span>\n            <span className=\"token punctuation\">.</span>\n            <span>{component}</span>\n            <span className=\"token punctuation\">.</span>\n            {renderedSubComponents}\n            <span className=\"token function\">{func}</span>\n            <span className=\"token punctuation\">(</span>\n            {renderedParams}\n            <span className=\"token punctuation\">);</span>\n        </code>\n    );\n};\n\nPxScript.propTypes = {\n    component: PropTypes.string.isRequired,\n    subComponents: PropTypes.array,\n    func: PropTypes.string.isRequired,\n    params: PropTypes.array\n};\n\nexport default PxScript;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport jsbeautifier from \"js-beautify\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\n\n// NOTE: dangerousHTML prop is used when wanting to show html in the codefigure without encoding.\n\nconst ComponentPreview = ({ children, language, removeOuterTag, hideValue, removeList, showCasePanel, codeFigure, dangerousHTML }) => {\n    const _removeOuterTag = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        if (div.firstElementChild) {\n            return div.firstElementChild.innerHTML;\n        } else if (div.firstChild) {\n            return div.firstChild.nodeValue;\n        }\n\n        return \"Check ComponentPreview _removeOuterTag!\";\n    };\n\n    const _removeList = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        const listElements = div.querySelectorAll(\"li\");\n        let htmlString = \"\";\n\n        listElements.forEach(el => {\n            htmlString += `${el.innerHTML} \\n`;\n        });\n\n        return htmlString;\n    };\n\n    const _removeEmpty = val => {\n        val = val.replace(/=\"\"/g, \"\");\n        val = val.replace(/ class>/g, \">\");\n        val = val.replace(/ class /g, \" \");\n        val = val.replace(/value /g, \"\");\n\n        return val;\n    };\n\n    const setDangerousHtml = val => {\n        let code = \"\";\n\n        if (typeof val.forEach === \"function\") {\n            val.forEach(v => code += `${v}\\n`);\n        } else {\n            code = val;\n        }\n\n        return code;\n    };\n\n    const CodeFigure = () => {\n        let code = \"\";\n\n        if (language === \"html\" && dangerousHTML) {\n            code = setDangerousHtml(children);\n        } else if (language === \"html\" && children && typeof children.map === \"function\") {\n            children.map(child => {\n                if (removeOuterTag) {\n                    code += _removeOuterTag(child);\n                } else if (removeList) {\n                    code += _removeList(child);\n                } else {\n                    code += renderToStaticMarkup(child);\n                }\n            });\n\n        } else if (language === \"html\") {\n            if (removeOuterTag) {\n                code += _removeOuterTag(children);\n            } else if (removeList) {\n                code += _removeList(children);\n            } else {\n                code += renderToStaticMarkup(children);\n            }\n        } else {\n            switch (typeof children) {\n                case \"string\":\n                    code = children;\n\n                    break;\n                case \"object\":\n                    children.forEach(child => code += child);\n\n                    break;\n                default:\n                    console.warn(\"CodeFigure: children needs attention!\");\n            }\n        }\n\n        switch (language) {\n            case \"html\":\n                code = jsbeautifier.html_beautify(code);\n                code = _removeEmpty(code);\n\n                if (hideValue) {\n                    code = code.replace(/ value=\"(.*)\"/g, \"\");\n                }\n\n                break;\n            case \"css\":\n                code = jsbeautifier.css(code);\n\n                break;\n            case \"javascript\":\n                // This is not needed, and for some reason crashes after a prod build [EH]\n                // code = jsbeautifier(code);\n                break;\n            default:\n                return \"update switchcase!\";\n        }\n\n        defaultProps.style = \"\";\n\n        return (\n            <figure>\n                {/* keep theme as undefined to apply default prism theme */}\n                <Highlight {...defaultProps} theme={undefined} code={code} language={language}>\n                    {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                        <pre className={className} style={style}>\n                            {tokens.map((line, i) => (\n                                <div key={line + i} {...getLineProps({ line,\n                                    key: i })}>\n                                    {line.map((token, key) => (\n                                        <span key={key} {...getTokenProps({ token,\n                                            key })} />\n                                    ))}\n                                </div>\n                            ))}\n                        </pre>\n                    )}\n                </Highlight>\n            </figure>\n        );\n    };\n\n    const ShowCasePanel = () => (\n        <div className=\"showcase-panel\">\n            {children}\n        </div>\n    );\n\n    return (\n        <>\n            {showCasePanel ? <ShowCasePanel /> : null}\n            {codeFigure ? <CodeFigure /> : null}\n        </>\n    );\n};\n\nComponentPreview.propTypes = {\n    language: PropTypes.oneOf([\"html\", \"javascript\", \"css\"]).isRequired,\n    removeOuterTag: PropTypes.bool,\n    hideValue: PropTypes.bool,\n    removeList: PropTypes.bool,\n    showCasePanel: PropTypes.bool,\n    codeFigure: PropTypes.bool,\n    dangerousHTML: PropTypes.bool\n};\n\nexport default ComponentPreview;\n","import Attribute, { Property } from \"./Attribute\";\nimport ComponentPreview from \"./ComponentPreview\";\nimport DocHeading from \"./DocHeading\";\nimport DocToc from \"./DocToc\";\nimport DeprecatedComponentAlert from \"./DeprecatedComponentAlert\";\nimport ExperimentalComponentAlert from \"./ExperimentalComponentAlert\";\nimport Icon from \"./Icon\";\nimport PxScript from \"./PxScript\";\n\nexport {\n    Attribute,\n    ComponentPreview,\n    DocHeading,\n    DocToc,\n    DeprecatedComponentAlert,\n    ExperimentalComponentAlert,\n    Icon,\n    Property,\n    PxScript\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className=\"form-group\">{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            <div className={inputGrpClasses}>{\"\\n\"}\n                {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                {type === \"textarea\" ?\n                    <textarea {...attrs} ></textarea>\n                    : type === \"select\" ?\n                        <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                            {selectOptions.map((opt, i) => (\n                                <Fragment key={opt + i}>\n                                    <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                </Fragment>\n                            ))}{\"\\n\\t\"}\n                        </select>\n                        :\n                        <input {...attrs} />}\n                {\"\\n\"}\n                {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n            </div>\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"success\", \"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.string,\n    errorMessag: PropTypes.string,\n    successMessag: PropTypes.string\n};\n\nexport default InputGroup;\n","import React, { Component } from \"react\";\n\nimport { ComponentPreview, DocToc, Property, Attribute } from \"#\";\nimport PrismCode from \"react-prism\";\nimport InputGroupComponent from \"@/InputGroup\";\n\nconst BasicExample = () => (\n    <>\n        <h2 id=\"basic-example\">Basic example</h2>\n        <p>\n            Add a span with class <Property value=\".input-group-addon\"/> to get a gray box on the left, right or both sides of an input element. The position of\n            your <Property value=\".input-group-addon\"/> depends on if you place it before or after the input element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure >\n            <InputGroupComponent\n                id=\"input-id-1\"\n                type=\"text\"\n                label=\"Name\"\n                placeholder=\"Name\"\n                prefixValue=\"Mr.\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-2\"\n                type=\"text\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                prefixType=\"icon\"\n                prefixValue=\"email\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-3\"\n                type=\"number\"\n                label=\"Amount\"\n                placeholder=\"Rounded to nearest $\"\n                prefixType=\"icon\"\n                prefixValue=\"attach_money\"\n                postfixValue=\".00\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-4\"\n                type=\"textarea\"\n                label=\"Notes\"\n                placeholder=\"Special requests\"\n                prefixType=\"icon\"\n                prefixValue=\"format_quote\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst CheckboxesAndRadios = () => (\n    <>\n        <h2 id=\"checkboxes-and-radios\">Checkboxes and radios</h2>\n        <p>Place any checkbox or radio option within an input group’s addon instead of text.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"form-group\">\n                <div className=\"input-group\">{\"\\n\"}\n                    <span className=\"input-group-addon\">{\"\\n\\t\\t\"}\n                        <input type=\"checkbox\"/>{\"\\n\\t\"}\n                    </span>{\"\\n\"}\n                    <input type=\"text\" className=\"form-control\" />{\"\\n\"}\n                </div>\n            </div>{\"\\n\\n\"}\n            <div className=\"form-group\">\n                <div className=\"input-group\">{\"\\n\"}\n                    <span className=\"input-group-addon\">{\"\\n\\t\\t\"}\n                        <input type=\"radio\"/>{\"\\n\\t\"}\n                    </span>{\"\\n\"}\n                    <input type=\"text\" className=\"form-control\" />{\"\\n\"}\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonAddons = () => (\n    <>\n        <h2 id=\"button-addons\">Button addons</h2>\n        <p>\n            If you want <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode>s included with your input elements you can just add a <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> inside\n            a input-group like you would anywhere else.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"text\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"primary\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                type=\"text\"\n                prefixType=\"button\"\n                prefixValue=\"Button\"\n                prefixBtnColor=\"secondary\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"danger\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst WithSelect = () => (\n    <>\n        <h2 id=\"with-select\">With select</h2>\n        <p>\n            Inserting text next to a <PrismCode className=\"language-html\">{\"<select>\"}</PrismCode> works just like any other input element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"select\"\n                selectOptions={[\"Bounty hunter\", \"Smuggler\", \"Jedi\"]}\n                prefixValue=\"Profession\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst WithFeedbackIcon = () => (\n    <>\n        <h2 id=\"with-feedback\">With feedback</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                id=\"input-with-feedback-1\"\n                type=\"text\"\n                label=\"Name\"\n                placeholder=\"Name\"\n                prefixValue=\"Mr.\"\n                feedbackIcon=\"cancel\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst ValidationStates = () => (\n    <>\n        <h2 id=\"validation-states\">Validation states</h2>\n        <p>\n            You can also visualize validation on your input-groups. Just add <Property value=\".has-success\" /> or <Property value=\".has-error\" /> with a <Property value=\".input-group\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"text\"\n                validationState=\"success\"\n                placeholder=\"Name\"\n                prefixValue=\"Mr.\"\n                defaultValue=\"Anderson\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                type=\"text\"\n                validationState=\"error\"\n                placeholder=\"Name\"\n                prefixValue=\"Agent\"\n                defaultValue=\"Smith\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst Disabled = () => (\n    <>\n        <h2 id=\"disabled\">Disabled</h2>\n        <p>\n            Just like for forms you can add <Attribute name=\"disabled\" /> to an input element to disable it.\n            If you are going to disable an element in a <Property value=\".input-group\" /> make sure to also add the <Attribute name=\"disabled\"/> attribute to the buttons.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                id=\"input-id-3\"\n                type=\"number\"\n                label=\"Amount\"\n                placeholder=\"Rounded to nearest $\"\n                disabled\n                prefixType=\"icon\"\n                prefixValue=\"attach_money\"\n                postfixValue=\".00\"\n            />\n            <InputGroupComponent\n                type=\"text\"\n                disabled\n                prefixType=\"button\"\n                prefixValue=\"Button\"\n                prefixBtnColor=\"secondary\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"danger\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst InputGroupText = () => (\n    <div className=\"col-lg-10 doc-body\">\n        <p className=\"lead\">\n            You can include additional information to specific input elements by adding <PrismCode className=\"language-html\">{\"<span>\"}</PrismCode>s\n            or <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode>s in a <Property value=\".input-group\" />.\n        </p>\n        <BasicExample />\n        {/* <CheckboxesAndRadios /> */}\n        <ButtonAddons />\n        <WithSelect />\n        {/* <WithFeedbackIcon /> */}\n        <ValidationStates />\n        <Disabled />\n    </div>\n);\n\nclass InputGroup extends Component {\n    componentDidMount () {\n        // forms.init();\n    }\n\n    render () {\n        return (\n            <div className=\"doc-container\">\n                <div className=\"row\">\n                    <InputGroupText />\n                    <DocToc component={InputGroupText} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputGroup;\n\n/* For testing */\nexport { BasicExample, CheckboxesAndRadios, ButtonAddons, WithSelect, WithFeedbackIcon, ValidationStates, Disabled, InputGroupText };\n"],"sourceRoot":""}