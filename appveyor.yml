# https://www.appveyor.com/docs/appveyor-yml/

#---------------------------------#
#      general configuration      #
#---------------------------------#

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# Maximum number of concurrent jobs for the project
max_jobs: 1

environment:
  # Github
  access_token:
    secure: IGs25EMrhe0au+uVDbOck6akDzC9ykvJeR0zJjhrT6idNuYOr/JpyGdefQxSlWXk
  github_email:
    secure: U3oByHGtWDiIy9psThpxwg==

# scripts that run after cloning repository
install:
- cmd: >-
    choco install gitversion.portable --pre

    npm install

#---------------------------------#
#       build configuration       #
#---------------------------------#

before_build:
- cmd: >-
    gitversion /output BuildServer

    gitversion /output json

build_script:
- cmd: npm run build:prod

# to disable automatic builds
# build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# test_script:
# - cmd: >-
#     npm run lint

#     npm test

# to disable automatic tests
# test: off

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# deploy:

  # Deploy to GitHub Releases
  # - provider: GitHub
  #   artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
  #   draft: false
  #   prerelease: false
  #   on:
  #     branch: master                # release from master branch only
  #     appveyor_repo_tag: true       # deploy on tag push only

deploy_script:
- ps: |
    if (($Env:APPVEYOR_REPO_TAG -eq "true") -and ($Env:GitVersion_BranchName -eq "master")) {
      git config --global credential.helper store
      git config --global user.email $Env:github_email
      git config --global user.name "payex-dev"
      Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
      git add --ignore-removal dist -f
      git commit -m "GitHub release $Env:GitVersion_FullSemVer"
      # git subtree push --prefix dist origin gh-pages
      $split_token = git subtree split --prefix dist master
      Write-Host "TOKEN -- $split_token"
      # git push origin TOKEN:gh-pages --foce
      # git push origin `git subtree split --prefix dist master`:gh-pages --force
    } elseif ($Env:APPVEYOR_REPO_BRANCH -eq "master") {
      Write-Host "Skipping deploy, master does not have a tag."
    } else {
      Write-Host "Branch not master, skipping deploy."
    }

# to disable deployment
# deploy: off
