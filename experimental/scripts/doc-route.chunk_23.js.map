{"version":3,"sources":["webpack://payex/./src/App/components/Topbar/index.js","webpack://payex/./src/App/Documentation/components/Topbar/index.js"],"names":["TopbarBtn","_ref","icon","text","iconClass","classnames","react_default","a","createElement","type","className","Fragment","TopbarMenu","_ref2","menu","logout","items","map","item","i","react","key","console","log","href","onClick","e","preventDefault","Topbar","_ref3","topbarContent","wide","concat","Topbar_TopbarBtn","btn","target","id","Topbar_TopbarMenu","propTypes","PropTypes","object","fixed","bool","Overview","utils","value","lib_default","data","name","language","showCasePanel","codeFigure","components_Topbar","TopbarWide","Component","topbar","init","docToc","Topbar_Overview","Topbar_TopbarWide"],"mappings":"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","file":"scripts/doc-route.chunk_23.js?13945419b7bce141b61e","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TopbarBtn = ({ icon, text }) => {\n    const iconClass = classnames(\"material-icons\", icon === \"menu\" ? \"topbar-menu-icon\" : \"\");\n\n    if (icon || text) {\n        return (\n            <button type=\"button\" className=\"topbar-menu\">{\"\\n\\t\\t\"}\n                    <>\n                        <i className={iconClass}>{icon}</i>\n                        {\"\\n\\t\\t\"}\n                    </>\n            </button>\n        );\n    }\n\n    return null;\n};\n\nconst TopbarMenu = ({ menu, logout }) => {\n    const { items } = menu;\n\n    console.log(menu);\n\n    return (\n        <nav className=\"topbar-nav\">\n            {items.map((item, i) => (\n                <Fragment key={i}>\n                    {console.log(item)}\n                    {\"\\n\"}\n                    <a href=\"#\" className={item.text === \"Home\" ? \"active\" : null} onClick={e => e.preventDefault()}>{item.text}</a>\n                </Fragment>\n            ))}{\"\\n\"}\n            {logout ?\n                <>\n                    <a className=\"topbar-link-right\" href=\"#\" onClick={e => e.preventDefault()}>{\"\\n\"}Log out {\"\\n\"}<i className=\"material-icons\">exit_to_app</i>{\"\\n\"}</a>{\"\\n\"}\n                </> : null}\n        </nav>\n    );\n};\n\nconst Topbar = ({ topbarContent, wide, logout }) => (\n    <header className={`topbar ${wide ? \"topbar-wide\" : \"\"}`}>{\"\\n\"}\n        <>\n            {topbarContent ?\n            <>\n                <TopbarBtn icon={topbarContent.btn.icon} text={topbarContent.btn.text} target={topbarContent.id} />{\"\\n\"}\n                {\"\\n\"}<a href=\"#\" className=\"topbar-logo\" onClick={e => e.preventDefault()}></a>{\"\\n\"}\n                <TopbarMenu menu={topbarContent} logout={!!logout} />\n            </> :\n            <>\n                {\"\\n\"} <a href=\"#\" className=\"topbar-logo\" onClick={e => e.preventDefault()}></a>{\"\\n\"}\n            </>}\n        </>\n    </header>\n);\n\nTopbar.propTypes = {\n    topbarContent: PropTypes.object,\n    fixed: PropTypes.bool,\n    logout: PropTypes.bool\n};\n\nexport default Topbar;\n","import React, { Component } from \"react\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Property, Attribute } from \"#\";\nimport TopbarComponent from \"@/Topbar\";\nimport { topbar } from \"$/px-script/main\";\n\nconst menu = {\n    btn: {\n        icon: \"menu\",\n        text: \"Menu\"\n    },\n    items: [\n        {\n            text: \"Home\",\n            icon: \"home\"\n        },\n        {\n            text: \"Purchase history\",\n            icon: \"shopping_cart\"\n        },\n        {\n            text: \"Settings\",\n            icon: \"settings\"\n        }\n    ]\n};\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            To use a topbar the bare minimum markup required is:\n        </p>\n        <ul>\n            <li><Property value=\".topbar\" /> wrapper.</li>\n            <li>Anchor with class <Property value=\".topbar-logo\" /> to display the logo and make it clickable.</li>\n        </ul>\n        <p>\n            With this you get a topbar with the PayEx logo.\n            In the topbar you can add additional functionality like a menu containing links. To enable this add a <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> and\n            a <PrismCode className=\"language-html\">{\"<nav>\"}</PrismCode> containing anchors. Remember to include <Attribute data name=\"toggle-nav\" value=\"{your_nav_id}\"/> as a <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> attribute\n            to get the menu to appear when the menu-button is clicked.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <TopbarComponent topbarContent={menu} logout />\n        </ComponentPreview>\n    </>\n);\n\nconst TopbarWide = () => (\n    <>\n        <h2 id=\"topbar-wide\">Wide topbar</h2>\n        <p>\n            This is a wide topbar.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <TopbarComponent topbarContent={menu} wide logout />\n        </ComponentPreview>\n    </>\n);\n\nclass Topbar extends Component {\n    componentDidMount () {\n        topbar.init(1);\n        topbar.init(2);\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">The topbar is used to give users an easily available navigational bar at the top of your web application.</p>\n                <Overview />\n                <TopbarWide />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Topbar;\n\n/* For testing */\nexport { Overview, TopbarWide };\n"],"sourceRoot":""}