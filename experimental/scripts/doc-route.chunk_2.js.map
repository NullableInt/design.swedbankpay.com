{"version":3,"sources":["webpack://payex/./src/App/Documentation/components/Alerts/index.js"],"names":["alert","window","px","BasicUsage","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","id","_utils__WEBPACK_IMPORTED_MODULE_3__","language","showCasePanel","codeFigure","_components_Alert__WEBPACK_IMPORTED_MODULE_4__","type","icon","headerText","close","AlertWithIcon","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","text","ClosingTheAlert","react_prism__WEBPACK_IMPORTED_MODULE_2___default","className","data","name","value","data-alert-close","ExtendedUsage","JavascriptMethods","componentName","Alerts","Component","init","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_2.js?fd62468224b5fbb19bc9","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, Attribute, Property, DocContainer, JavascriptDocs } from \"#\";\nimport AlertComponent, { ComplexAlert } from \"@/Alert\";\n\nconst { alert } = window.px;\n\nconst BasicUsage = () => (\n    <>\n        <h2 id=\"basic-usage\">Basic usage</h2>\n        <p>The default behavior of the alert present itself in a box with a border.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            {/* <AlertComponent type=\"default\" text=\"This is a default alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert!\" /> */}\n            <ComplexAlert type=\"success\" icon=\"check_circle\" headerText=\"Success!\" close>\n                <p>PDF was successfully uploaded.\n                    <br />Some additional information.</p>\n                <hr/>\n                <p>By the way, great job!</p>\n            </ComplexAlert>\n        </ComponentPreview>\n    </>\n);\n\nconst AlertWithIcon = () => (\n    <>\n        <h2 id=\"icons\">Icons</h2>\n        <p>To use an alert with an icon... Read more about icon usage here <Link to=\"/docs/core/icons\">here</Link>.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"default\" text=\"This is a default alert with an icon!\" icon=\"info_outline\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert with an icon!\" icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" icon=\"error\" />\n        </ComponentPreview>\n    </>\n);\n\nconst ClosingTheAlert = () => (\n    <>\n        <h2 id=\"closing-the-alert\">Closing the alert</h2>\n        <p>\n            To add a close-button, add the following code inside your alert-element:<br/>\n            <PrismCode className=\"language-html\">{\"<a href=\\\"#\\\" data-alert-close><i class=\\\"material-icons\\\">close</i></a>\"}</PrismCode>\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"default\" text=\"This is a default alert with an icon!\" close icon=\"info_outline\" />{\"\\n\\n\"}\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" close icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"neutral\" text=\"This is a neutral alert with an icon!\" close icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" close icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" close icon=\"error\" />\n        </ComponentPreview>\n        <h3>External close button</h3>\n        <p>To add an external close-button for your alert add the attribute <Attribute data name=\"alert-close\" value=\"{id}\" /> to the button element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent id=\"alert-success-1\" type=\"success\" text=\"Press the button below to close me\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <button type=\"button\" className=\"btn btn-executive\" data-alert-close=\"alert-success-1\">Close alert</button>\n        </ComponentPreview>\n    </>\n);\n\nconst ExtendedUsage = () => (\n    <>\n        <h2 id=\"extended-usage\">Extended usage</h2>\n        <p>Alerts can also contain additional HTML elements like headings, paragraphs and dividers.</p>\n        <p>Just make sure to wrap the content in a container with the class <Property value=\".alert-body\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"success\" close icon=\"check_circle\">\n                <h3 className=\"text-success\">Success!</h3>\n                <p>PDF was successfully uploaded. <br /> Some additional information.</p>\n                <hr/>\n                <p>By the way, great job!</p>\n            </AlertComponent>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"alert\" />\n    </>\n);\n\nclass Alerts extends Component {\n    componentDidMount () {\n        alert.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p>\n                <BasicUsage />\n                <AlertWithIcon />\n                <ClosingTheAlert />\n                <ExtendedUsage />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Alerts;\n\n/* For testing */\nexport { BasicUsage, AlertWithIcon, ClosingTheAlert, ExtendedUsage, JavascriptMethods };\n"],"sourceRoot":""}