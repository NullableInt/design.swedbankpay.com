{"version":3,"sources":["webpack://payex/./src/App/Documentation/utils/Attribute/index.js","webpack://payex/./src/App/components/Alert/index.js","webpack://payex/./src/App/Documentation/utils/DeprecatedComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/ExperimentalComponentAlert/index.js","webpack://payex/./src/App/Documentation/utils/Icon/index.js","webpack://payex/./src/App/Documentation/utils/PxScript/index.js","webpack://payex/./src/App/Documentation/utils/index.js","webpack://payex/./src/App/Documentation/components/Toast/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Property","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_ref","value","a","createElement","className","Attribute","_ref2","data","name","propTypes","PropTypes","string","bool","isRequired","Alert","id","type","icon","close","text","children","concat","href","data-alert-close","onClick","e","preventDefault","oneOf","_components_Alert__WEBPACK_IMPORTED_MODULE_1__","DeprecatedComponentAlert","ExperimentalComponentAlert","Icon","PxScript","renderedParams","renderedSubComponents","component","subComponents","func","params","map","i","key","param","length","array","_Attribute__WEBPACK_IMPORTED_MODULE_0__","_ComponentPreview__WEBPACK_IMPORTED_MODULE_1__","_DocHeading__WEBPACK_IMPORTED_MODULE_2__","_DocToc__WEBPACK_IMPORTED_MODULE_3__","_DeprecatedComponentAlert__WEBPACK_IMPORTED_MODULE_4__","_ExperimentalComponentAlert__WEBPACK_IMPORTED_MODULE_5__","_Icon__WEBPACK_IMPORTED_MODULE_6__","_PxScript__WEBPACK_IMPORTED_MODULE_7__","Overview","Fragment","_utils__WEBPACK_IMPORTED_MODULE_2__","language","codeFigure","dangerousHTML","showCasePanel","toast","html","Options","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","PremadeToasts","CustomHtml","ToastText","Toast","Component"],"mappings":"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","file":"scripts/doc-route.chunk_19.js?15aa7f87e492652fc8f9","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Property = ({ value }) => <code className=\"token property\">{value}</code>;\n\nconst Attribute = ({ data, name, value }) => {\n    if (name && value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n                <span className=\"token attr-value\">\n                    <span className=\"token punctuation\">{\"=\\\"\"}</span>\n                    {value}\n                    <span className=\"token punctuation\">{\"\\\"\"}</span>\n                </span>\n            </code>\n        );\n    } else if (name && !value) {\n        return (\n            <code>\n                {data ? <span className=\"token attr-name\">data-</span> : null}\n                <span className=\"token attr-name\">{name}</span>\n            </code>\n        );\n    } else if (!name && value) {\n        return (\n            <code>\n                <span className=\"token attr-value\">{value}</span>\n            </code>\n        );\n    }\n};\n\nAttribute.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    data: PropTypes.bool\n};\n\nProperty.propTypes = {\n    value: PropTypes.string.isRequired\n};\n\nexport default Attribute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Alert = ({ id, type, icon, close, text, children }) => (\n    <div id={id} className={`alert alert-${type}`}>{icon ? \"\\n\" : \"\"}\n        {icon ? <i className=\"material-icons alert-icon\">{icon}</i> : null}{text ? \"\\n\" : \"\"}\n        {text ? <p>{text}</p> : null}{children ? \"\\n\" : \"\"}\n        {children ? <div className=\"alert-body\">{children}</div> : null}{close ? \"\\n\" : \"\"}\n        {close ? <a href=\"#\" data-alert-close=\"\" onClick={e => e.preventDefault()}>{\"\\n\\t\\t\"}\n            <i className=\"material-icons\">close</i>{\"\\n\\t\"}\n        </a> : null}{\"\\n\"}\n    </div>\n);\n\nAlert.propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.oneOf([\"success\", \"neutral\", \"warning\", \"danger\", \"default\"]).isRequired,\n    icon: PropTypes.string,\n    close: PropTypes.bool,\n    text: PropTypes.string\n};\n\nexport default Alert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst DeprecatedComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component deprecated!</h3>\n        <p>This component has been deprecated and should not be used!</p>\n    </Alert>\n);\n\nexport default DeprecatedComponentAlert;\n","import React from \"react\";\nimport Alert from \"@/Alert\";\n\nconst ExperimentalComponentAlert = () => (\n    <Alert type=\"danger\">\n        <h3 className=\"color-danger\">Component under development!</h3>\n        <p>This component is still under development and is subject to change.</p>\n    </Alert>\n);\n\nexport default ExperimentalComponentAlert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Icon = ({ icon }) => <i className=\"material-icons\">{icon}</i>;\n\nIcon.propTypes = { icon: PropTypes.string.isRequired };\n\nexport default Icon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PxScript = ({ component, subComponents, func, params }) => {\n    let renderedParams;\n    let renderedSubComponents;\n\n    if (subComponents) {\n        renderedSubComponents = subComponents.map((component, i) => (\n            <span key={i}>{component}\n                <span className=\"token punctuation\">.</span>\n            </span>\n        ));\n    }\n\n    if (params) {\n        renderedParams = params.map((param, i) => (\n            <span key={i}>{param}\n                {(i < params.length - 1) ? <span className=\"token punctuation\">, </span> : null}\n            </span>\n        ));\n    }\n\n    return (\n        <code>\n            <span>px</span>\n            <span className=\"token punctuation\">.</span>\n            <span>{component}</span>\n            <span className=\"token punctuation\">.</span>\n            {renderedSubComponents}\n            <span className=\"token function\">{func}</span>\n            <span className=\"token punctuation\">(</span>\n            {renderedParams}\n            <span className=\"token punctuation\">);</span>\n        </code>\n    );\n};\n\nPxScript.propTypes = {\n    component: PropTypes.string.isRequired,\n    subComponents: PropTypes.array,\n    func: PropTypes.string.isRequired,\n    params: PropTypes.array\n};\n\nexport default PxScript;\n","import Attribute, { Property } from \"./Attribute\";\nimport ComponentPreview from \"./ComponentPreview\";\nimport DocHeading from \"./DocHeading\";\nimport DocToc from \"./DocToc\";\nimport DeprecatedComponentAlert from \"./DeprecatedComponentAlert\";\nimport ExperimentalComponentAlert from \"./ExperimentalComponentAlert\";\nimport Icon from \"./Icon\";\nimport PxScript from \"./PxScript\";\n\nexport {\n    Attribute,\n    ComponentPreview,\n    DocHeading,\n    DocToc,\n    DeprecatedComponentAlert,\n    ExperimentalComponentAlert,\n    Icon,\n    Property,\n    PxScript\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocToc, ExperimentalComponentAlert, Attribute } from \"#\";\nimport { toast } from \"$/px-script\";\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>You want jam on that toast?</p>\n        <ComponentPreview language=\"javascript\" codeFigure>\n            {\"px.toast({ html: \\\"I am a toast!\\\" });\"}\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" codeFigure dangerousHTML>\n            {\"<button onclick=\\\"px.toast({ html: 'I am a toast!' })\\\" class=\\\"btn btn-primary\\\">Toast!</button>\"}\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" showCasePanel>\n            <button className=\"btn btn-primary\" type=\"button\" onClick={() => toast({ html: \"I am a toast!\" })}>Click for toast!</button>\n        </ComponentPreview>\n    </>\n);\n\nconst Options = () => (\n    <>\n        <h2 id=\"options\">Options</h2>\n        <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Default</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>html</td>\n                    <td>String</td>\n                    <td><Attribute value={\"\\\"\\\"\"} /></td>\n                    <td>The HTML content of the Toast.</td>\n                </tr>\n                <tr>\n                    <td>type</td>\n                    <td>String</td>\n                    <td><Attribute value={\"\\\"\\\"\"} /></td>\n                    <td>Premade alert types; <Attribute value=\"success\" />, <Attribute value=\"neutral\" />, <Attribute value=\"warning\" /> and <Attribute value=\"danger\" /> are available.</td>\n                </tr>\n                <tr>\n                    <td>dismissable</td>\n                    <td>Boolean</td>\n                    <td><Attribute value=\"true\" /></td>\n                    <td>Wether or not the alert should be dismissable by the user (close button).</td>\n                </tr>\n                <tr>\n                    <td>icon</td>\n                    <td>String</td>\n                    <td><Attribute value={\"\\\"\\\"\"} /></td>\n                    <td>Custom icon for the toast. See <Link to=\"/docs/core/icons\">icons</Link> for more info.</td>\n                </tr>\n                <tr>\n                    <td>displayLength</td>\n                    <td>Number</td>\n                    <td><Attribute value=\"4000\" /></td>\n                    <td>Length in ms the Toast stays before dismissal.</td>\n                </tr>\n                {/* <tr>\n                    <td>inDuration</td>\n                    <td>Number</td>\n                    <td><Attribute value=\"300\" /></td>\n                    <td>Transition in duration in milliseconds.</td>\n                </tr>\n                <tr>\n                    <td>outDuration</td>\n                    <td>Number</td>\n                    <td><Attribute value=\"375\" /></td>\n                    <td>Transition out duration in milliseconds.</td>\n                </tr> */}\n                <tr>\n                    <td>classes</td>\n                    <td>Array of strings</td>\n                    <td><Attribute value=\"[]\" /></td>\n                    <td>Classes to be added to the toast element.</td>\n                </tr>\n                <tr>\n                    <td>completeCallback</td>\n                    <td>Function</td>\n                    <td><Attribute value=\"null\" /></td>\n                    <td>Callback function called when toast is dismissed.</td>\n                </tr>\n                {/* <tr>\n                    <td>activationPercent</td>\n                    <td>Number</td>\n                    <td><Attribute value=\"0.8\" /></td>\n                    <td>The percentage of the toast{\"'\"}s width it takes for a drag to dismiss a Toast.</td>\n                </tr> */}\n            </tbody>\n        </table>\n    </>\n);\n\nconst PremadeToasts = () => (\n    <>\n        <h2 id=\"premade-toasts\">Premade toasts</h2>\n        <p>There are four premade toast styles other than the default one; <Attribute value=\"neutral\" />, <Attribute value=\"success\" />, <Attribute value=\"warning\" /> and <Attribute value=\"danger\" />. Apply the desired one to the options object and be amazed!</p>\n        <ComponentPreview language=\"html\" codeFigure dangerousHTML>\n            {\"<button type=\\\"button\\\" onclick=\\\"px.toast({ html: 'I am a neutral toast!', type: 'neutral' })\\\" class=\\\"btn btn-primary\\\">Neutral toast</button>\"}\n            {\"<button type=\\\"button\\\" onclick=\\\"px.toast({ html: 'I am a success toast!', type: 'success' })\\\" class=\\\"btn btn-primary\\\">Success toast</button>\"}\n            {\"<button type=\\\"button\\\" onclick=\\\"px.toast({ html: 'I am a warning toast!', type: 'warning' })\\\" class=\\\"btn btn-primary\\\">Warning toast</button>\"}\n            {\"<button type=\\\"button\\\" onclick=\\\"px.toast({ html: 'I am a danger toast!', type: 'danger' })\\\" class=\\\"btn btn-primary\\\">Danger toast</button>\"}\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" showCasePanel>\n            <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => toast({\n                    html: \"I am a toast!\",\n                    type: \"neutral\"\n                })}\n            >\n                Neutral toast\n            </button>{\"\\n\"}\n            <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => toast({\n                    html: \"I am a toast!\",\n                    type: \"success\"\n                })}\n            >\n                Success toast\n            </button>{\"\\n\"}\n            <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => toast({\n                    html: \"I am a toast!\",\n                    type: \"warning\"\n                })}\n            >\n                Warning toast\n            </button>{\"\\n\"}\n            <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => toast({\n                    html: \"I am a toast!\",\n                    type: \"danger\"\n                })}\n            >\n                Danger toast\n            </button>\n        </ComponentPreview>\n    </>\n);\n\nconst CustomHtml = () => {\n    const toastHtml = \"<span><p>I am toast content.</p><p>You can put me on several lines.</p></span><button class=\\\"btn toast-action\\\">Undo</button>\";\n\n    return (\n        <>\n            <h2 id=\"custom-html\">Custom HTML</h2>\n            <p>You can pass in an HTML String as the first argument as well. Take a look at the example below, where we pass in text as well as a flat button. If you call an external function instead of in-line JavaScript, you will not need to escape quotation marks.</p>\n            <ComponentPreview language=\"javascript\" codeFigure>\n                {\"const toastHtml = \\\"<span><p>I am toast content.</p><p>You can put me on several lines.</p></span><button class='btn toast-action'>Undo</button>\\\";\"}{\"\\n\"}\n                {\"px.toast({ html: toastHtml });\"}\n            </ComponentPreview>\n            <ComponentPreview language=\"html\" showCasePanel>\n                <button className=\"btn btn-primary\" type=\"button\" onClick={() => toast({ html: toastHtml })}>Toast with action</button>\n            </ComponentPreview>\n        </>\n    );\n};\n\nconst ToastText = () => (\n    <div className=\"col-md-12 col-lg-10 doc-body\">\n        <ExperimentalComponentAlert />\n        <p className=\"lead\">Toast...</p>\n        <Overview />\n        <Options />\n        <PremadeToasts />\n        <CustomHtml />\n    </div>\n);\n\nclass Toast extends Component {\n    render () {\n        return (\n            <div className=\"doc-container\">\n                <div className=\"row\">\n                    <ToastText />\n                    <DocToc component={ToastText} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Toast;\n\n/* For testing */\nexport { Overview, Options, PremadeToasts, ToastText };\n"],"sourceRoot":""}