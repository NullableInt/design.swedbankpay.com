{"version":3,"sources":["webpack://payex/./src/App/components/Card/index.js","webpack://payex/./src/App/Documentation/components/Card/index.js"],"names":["Card","_ref","type","title","imgSrc","text","textSection","smallText","btnTxt","footerTxt","footerLink","footerLinkTxt","children","react_default","a","createElement","className","concat","href","src","alt","map","secText","i","key","propTypes","PropTypes","oneOf","string","icon","array","textArr","DefaultBehaviour","Fragment","id","utils","value","Link","to","language","showCasePanel","codeFigure","components_Card","MediaObject","size","heading","textSmall","muted","CardVariants","Component","docToc","Card_DefaultBehaviour","Card_CardVariants"],"mappings":"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","file":"scripts/doc-route.chunk_5.js?585ccf8c2d520fd5b9a7","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Card = ({ type, title, imgSrc, text, textSection, smallText, btnTxt, footerTxt, footerLink, footerLinkTxt, children }) => (\n    <div className={`card${type ? ` card-${type}` : \"\"}`}>\n        {title ? <header>\n            <h3>\n                <a href=\"#\">{title}</a>\n            </h3>\n        </header> : null}\n        {imgSrc ? <div className=\"card-img\">{\"\\n\"}\n            <img src={imgSrc} alt=\"\"/>{\"\\n\"}\n        </div> : null}\n        {children ?\n            <div className=\"highlight\">\n                {children}\n            </div>\n            : null\n        }\n        <div className=\"card-body\">\n            {text ? <p>{text}</p> : null}{\"\\n\"}\n            {textSection ?\n                textSection.map((secText, i) => <p key={`card-p-${i}`}>{secText}</p>)\n                : null\n            }\n            {smallText ? <small>{smallText}</small> : null}\n        </div>\n        {btnTxt || footerTxt || footerLinkTxt ? <footer>\n            {btnTxt ? <button type=\"button\" className=\"btn btn-primary btn-block\">{btnTxt}</button> : null}\n            {footerTxt ? <div className=\"footer-text\"><p>{footerTxt}</p></div> : null}\n            {footerLinkTxt ? <div className=\"footer-link\"><a href={footerLink || \"#\"}>{footerLinkTxt}</a></div> : null}\n        </footer> : null}\n    </div>\n);\n\nCard.propTypes = {\n    type: PropTypes.oneOf([\"brand\", \"default\", \"light\"]),\n    title: PropTypes.string,\n    imgSrc: PropTypes.string,\n    icon: PropTypes.string,\n    text: PropTypes.string,\n    smallText: PropTypes.string,\n    textSection: PropTypes.array,\n    btnTxt: PropTypes.string,\n    footerTxt: PropTypes.string,\n    footerLink: PropTypes.string,\n    footerLinkTxt: PropTypes.string\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, Property, DocContainer } from \"#\";\nimport CardComponent from \"@/Card\";\nimport MediaObject from \"@/MediaObject\";\n\nconst textArr = [\"This is a lot of text\", \"With some more text\", \"And then even some more\", \"Is it really possible to have this much text in one card?\", \"Yes!\"];\n\nconst DefaultBehaviour = () => (\n    <>\n        <h2 id=\"default-behaviour\">Default behaviour</h2>\n        <p>\n            Wrap indiviual cards in the <Property value=\".cards\" /> class to display them lined up next to each other.\n            When the window reaches <Link to=\"/docs/core/breakpoints\">breakpoint</Link> sm the cards will switch to mobile view and take up one row each and stretch to fill the width of the container.\n            To decide how your cards will look use <Property value=\".card-default\" />, <Property value=\".card-brand\" />, or <Property value=\".card-light\" />\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"cards\">\n                <CardComponent\n                    type=\"default\"\n                    title=\"Card default\"\n                    imgSrc=\"https://picsum.photos/300/?random\"\n                    text=\"This is the cards text\"\n                    smallText=\"And the small text\"\n                    btnTxt=\"Button\"\n                    footerTxt=\"This is some text that goes in the footer.\"\n                    footerLinkTxt=\"You wanna click this link?\"\n                >\n                    <MediaObject size=\"sm\" icon=\"account_circle\" heading=\"Bob Corlsan\" text=\"bob.corlsan@payex.com\" textSmall muted />\n                </CardComponent>\n            </div>\n            <div className=\"cards\">\n                <CardComponent\n                    type=\"brand\"\n                    title=\"Card brand\"\n                    imgSrc=\"https://picsum.photos/300/?random\"\n                    text=\"This is the cards text\"\n                    smallText=\"And the small text\"\n                    btnTxt=\"Button\"\n                    footerTxt=\"This is some text that goes in the footer.\"\n                    footerLinkTxt=\"You wanna click this link?\"\n                >\n                    <MediaObject size=\"sm\" icon=\"account_balance\" heading=\"725 NOK\" text=\"Outstanding balance\" textSmall muted />\n                </CardComponent>\n            </div>\n            <div className=\"cards\">\n                <CardComponent\n                    type=\"light\"\n                    title=\"Card light\"\n                    imgSrc=\"https://picsum.photos/300/?random\"\n                    text=\"This is the cards text\"\n                    smallText=\"And the small text\"\n                    btnTxt=\"Button\"\n                    footerTxt=\"This is some text that goes in the footer.\"\n                    footerLinkTxt=\"You wanna click this link?\"\n                >\n                    <MediaObject size=\"sm\" icon=\"verified_user\" heading=\"75%\" text=\"Complete\" textSmall muted />\n                </CardComponent>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst CardVariants = () => (\n    <>\n        <h2 id=\"card-variants\">Card Variants</h2>\n        <p>\n            You don`t have to use all sections of a card, you can use different combinations as you see fit.\n            The card body inherits the size of the largest card that exists on the same line when wrapped with a <Property value=\".cards\" /> container.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"cards\">\n                <CardComponent\n                    type=\"default\"\n                    title=\"My custom card\"\n                    text=\"Card text\"\n                    smallText=\"Small card text\"\n                    footerTxt=\"This is some text that goes in the footer.\"\n                >\n                    <MediaObject size=\"sm\" icon=\"verified_user\" heading=\"75%\" text=\"Complete\" textSmall muted />\n                </CardComponent>\n\n                <CardComponent\n                    type=\"default\"\n                    title=\"Text card\"\n                    textSection={textArr}\n                    smallText=\"This is some small text\"\n                    footerTxt=\"This is some text that goes in the footer.\"\n                />\n\n                <CardComponent\n                    type=\"brand\"\n                    title=\"Image card\"\n                    imgSrc=\"https://picsum.photos/300/?random\"\n                    text=\"This is a card with an image and body\"\n                />\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nclass Card extends Component {\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Cards are meant to display smaller items and is not intended to span the entire width of a page.\n                    See <Link to=\"/docs/components/panel\">panel</Link> if the card component is too narrow.\n                </p>\n                <DefaultBehaviour />\n                <CardVariants />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Card;\n\n/* For testing */\nexport { DefaultBehaviour, CardVariants };\n"],"sourceRoot":""}