// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Forms Checkboxes renders 1`] = `
<React.Fragment>
  <h2
    id="checkboxes"
  >
    Checkboxes
  </h2>
  <p>
    Checkboxes...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Checkbox
      id="checkbox-example-1"
      label="Bread"
    />
    <Checkbox
      id="checkbox-example-2"
      label="Not bread. I'm not really fond of it. What I would really like, however, is one single piece of cracker with some nutella on it. Perhaps this could be the second checkbox. These thoughts are written here simply to show you how the checkboxes align themselves when label text is fairly long."
    />
    <Checkbox
      checked={true}
      id="checkbox-example-3"
      label="Milk"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms DisabledCheckboxes renders 1`] = `
<React.Fragment>
  <h2
    id="disabled-checkboxes"
  >
    Disabled checkboxes
  </h2>
  <p>
    Disabled checkboxes...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Checkbox
      disabled={true}
      id="checkbox-disabled-example-1"
      label="Bread"
    />
    <Checkbox
      disabled={true}
      id="checkbox-disabled-example-2"
      label="Not bread. I'm not really fond of it. What I would really like, however, is one single piece of cracker with some nutella on it. Perhaps this could be the second checkbox. These thoughts are written here simply to show you how the checkboxes align themselves when label text is fairly long."
    />
    <Checkbox
      checked={true}
      disabled={true}
      id="checkbox-disabled-example-3"
      label="Milk"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms DisabledRadioButtons renders 1`] = `
<React.Fragment>
  <h2
    id="disabled-radio-buttons"
  >
    Disabled radio buttons
  </h2>
  <p>
    Disabled radio buttons...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Radio
      disabled={true}
      id="radio-disabled-example-1"
      label="Hamburgers"
      name="radio-disabled-example"
    />
    <Radio
      disabled={true}
      id="radio-disabled-example-2"
      label="Not the one above because I'm not really fond of hamburgers. What I would really like, however, is a nice piece of steak. Perhaps that could be the second option. These thoughts are written here simply to show you how radio buttons align themselves when label text is fairly long."
      name="radio-disabled-example"
    />
    <Radio
      checked={true}
      disabled={true}
      id="radio-disabled-example-3"
      label="Pizza"
      name="radio-disabled-example"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms DisabledRangeSlider renders 1`] = `
<React.Fragment>
  <h2
    id="disabled-rangeslider"
  >
    Disabled rangeslider
  </h2>
  <p>
    Disabled rangeslider...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Rangeslider
      disabled={true}
      max={200}
      min={0}
      step={1}
      value={100}
      valueLabel={true}
      valueLabelPostfix="%"
      valueLabelPrefix="$"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms DisabledToggleboxes renders 1`] = `
<React.Fragment>
  <h2
    id="disabled-toggleboxes"
  >
    Disabled toggleboxes
  </h2>
  <p>
    Disabled toggleboxes...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Togglebox
      disabled={true}
      id="togglebox-disabled-example-1"
      label="Enable overdrive"
    />
    <Togglebox
      checked={true}
      disabled={true}
      id="togglebox-disabled-example-2"
      label="Enable superpowers"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms FormGrid renders 1`] = `
<React.Fragment>
  <h2
    id="form-grid"
  >
    Form grid
  </h2>
  <p>
    Form grid...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <form
      onSubmit={[Function]}
    >
      <div
        className="row"
      >
        <div
          className="col-5"
        >
          <InputGroup
            autoComplete="given-name"
            helpBlock="Hope it is something cool"
            id="grid-first-name"
            label="First name"
            placeholder="Enter your first name"
            type="text"
          />
        </div>
        <div
          className="col-5"
        >
          <InputGroup
            autoComplete="family-name"
            helpBlock="Most likely in your passport"
            id="grid-last-name"
            label="Last name"
            placeholder="Enter your last name"
            type="text"
          />
        </div>
        <div
          className="col-2"
        >
          <div
            className="form-group"
          >
            

            <br />
            

            <button
              className="btn btn-primary"
              type="submit"
            >
              Search
            </button>
            

          </div>
        </div>
      </div>
    </form>
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms FormsText renders 1`] = `
<div
  className="col-md-12 col-lg-10 doc-body"
>
  <p
    className="lead"
  >
    Forms...
  </p>
  <Overview />
  <FormGrid />
  <Validation />
  <UsageWithFieldsets />
  <StaticText />
  <Checkboxes />
  <DisabledCheckboxes />
  <RadioButtons />
  <DisabledRadioButtons />
  <Toggleboxes />
  <DisabledToggleboxes />
  <RangeSlider />
  <DisabledRangeSlider />
</div>
`;

exports[`Documentation: Forms Overview renders 1`] = `
<React.Fragment>
  <h2
    id="overview"
  >
    Overview
  </h2>
  <p>
    Forms overview...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <form
      onSubmit={[Function]}
    >
      <InputGroup
        autoComplete="given-name"
        helpBlock="The first word of your full name"
        id="first-name"
        label="First name"
        placeholder="Enter your first name"
        type="text"
      />
      <InputGroup
        autoComplete="family-name"
        helpBlock="The very last collection of letters in your name"
        id="last-name"
        label="Last name"
        placeholder="Enter your last name"
        type="text"
      />
      <InputGroup
        autoComplete="email"
        helpBlock="The last part is probably @payex.com"
        id="email-address"
        label="Email"
        placeholder="Enter your email"
        type="text"
      />
      <div
        className="form-group"
      >
        <Checkbox
          id="subscribe-checkbox"
          label="Subscribe to our Shovels and Tapestry catalogue"
        />
      </div>
      

      <Button
        btnType="submit"
        label="Submit"
        type="primary"
      />
      

    </form>
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms RadioButtons renders 1`] = `
<React.Fragment>
  <h2
    id="radio-buttons"
  >
    Radio buttons
  </h2>
  <p>
    Radio buttons...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Radio
      id="radio-example-1"
      label="Hamburgers"
      name="radio-example"
    />
    <Radio
      id="radio-example-2"
      label="Not the one above because I'm not really fond of hamburgers. What I would really like, however, is a nice piece of steak. Perhaps that could be the second option. These thoughts are written here simply to show you how radio buttons align themselves when label text is fairly long."
      name="radio-example"
    />
    <Radio
      checked={true}
      id="radio-example-3"
      label="Pizza"
      name="radio-example"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms RangeSlider renders 1`] = `
<React.Fragment>
  <h2
    id="rangeslider"
  >
    Rangeslider
  </h2>
  <p>
    Asides from the default behavior of a range input, the Rangeslider
    '
    s colors and label positioning can be customized.
  </p>
  <p>
    Currently there are three different supported colors for the slider:  
    <code
      className="token property"
    >
      rangeslider-brand
    </code>
    , 
    <code
      className="token property"
    >
      rangeslider-default
    </code>
     and 
    <code
      className="token property"
    >
      rangeslider-neutral
    </code>
    .
  </p>
  <p>
    The Rangeslider currently supports two positions: 
    <code
      className="token property"
    >
      label-right
    </code>
     and 
    <code
      className="token property"
    >
      label-top
    </code>
    . If no position is given, 
    <code
      className="token property"
    >
      right
    </code>
     is defaulted.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Rangeslider
      max={200}
      min={0}
      step={1}
      value={100}
      valueLabel={true}
      valueLabelPostfix="%"
      valueLabelPrefix="$"
    />
  </ComponentPreview>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Rangeslider
      color="neutral"
      max={200}
      min={0}
      step={1}
      value={100}
      valueLabel={true}
      valueLabelPosition="top"
      valueLabelPostfix="%"
      valueLabelPrefix="$"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms StaticText renders 1`] = `
<React.Fragment>
  <h2
    id="static-text"
  >
    Static text
  </h2>
  <p>
    Static text...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <FormControlText
      label="Company"
      text="PayEx"
    />
    <FormControlText
      label="Employee"
      text="Bob Corlsan"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms Toggleboxes renders 1`] = `
<React.Fragment>
  <h2
    id="toggleboxes"
  >
    Toggleboxes
  </h2>
  <p>
    Toggleboxes...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Togglebox
      id="togglebox-example-1"
      label="Enable overdrive"
    />
    <Togglebox
      checked={true}
      id="togglebox-example-2"
      label="Enable superpowers"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms UsageWithFieldsets renders 1`] = `
<React.Fragment>
  <h2
    id="usage-with-fieldsets"
  >
    Usage with fieldsets
  </h2>
  <p>
    Usage with fieldsets...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <form
      onSubmit={[Function]}
    >
      <fieldset>
        <legend>
          Log in
        </legend>
        <InputGroup
          autoComplete="username"
          id="fieldset-username"
          label="Username"
          placeholder="Enter your username"
          type="text"
        />
        <InputGroup
          autoComplete="current-password"
          id="fieldset-password"
          label="Password"
          placeholder="Enter your password"
          type="password"
        />
        <Checkbox
          id="fieldset-checkbox"
          label="Remember me"
        />
      </fieldset>
      

      <Button
        btnType="submit"
        label="Log in"
        type="primary"
      />
      

    </form>
  </ComponentPreview>
  <h3>
    Disable a fieldset
  </h3>
  <p>
    Disable entire fieldsets with 
    <span
      className="token attr-name"
    >
      disabled
    </span>
     attribute...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <form>
      <fieldset
        disabled={true}
      >
        <legend>
          Log in
        </legend>
        <InputGroup
          autoComplete="username"
          id="fieldset-disabled-username"
          label="Username"
          placeholder="Enter your username"
          type="text"
        />
        <InputGroup
          autoComplete="current-password"
          id="fieldset-disabled-password"
          label="Password"
          placeholder="Enter your password"
          type="password"
        />
        <Checkbox
          id="fieldset-disabled-checkbox"
          label="Remember me"
        />
      </fieldset>
      

      <Button
        btnType="submit"
        disabled={true}
        label="Log in"
        type="primary"
      />
      

    </form>
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms Validation renders 1`] = `
<React.Fragment>
  <h2
    id="validation"
  >
    Validation
  </h2>
  <p>
    Forms validation...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <form
      data-validate=""
      onSubmit={[Function]}
    >
      <InputGroup
        helpBlock="Comes before your last name"
        id="validate-first-name"
        label="First name"
        placeholder="Enter your first name"
        required={true}
        type="text"
        validate={true}
      />
      <InputGroup
        helpBlock="Probably the same as at least one of your parents"
        id="validate-last-name"
        label="Last name"
        placeholder="Enter your last name"
        type="text"
        validate={true}
      />
      <InputGroup
        helpBlock="You know, electronic mail?"
        id="validate-email-address"
        label="Email"
        placeholder="Enter your email"
        type="email"
        validate={true}
      />
      

      <Button
        btnType="submit"
        label="Submit"
        type="primary"
      />
      

    </form>
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Forms renders 1`] = `
<div
  className="doc-container"
>
  <div
    className="row"
  >
    <FormsText />
    <DocToc
      component={[Function]}
    />
  </div>
</div>
`;
