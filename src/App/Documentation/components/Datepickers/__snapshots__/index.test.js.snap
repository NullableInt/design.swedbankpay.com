// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Datepickers CustomFormat renders 1`] = `
<React.Fragment>
  <h2
    id="custom-format"
  >
    Custom format
  </h2>
  <p>
    Custom format..
    <Attribute
      data={true}
      name="datepicker-format"
      value="[nb|sv|da|fi|en|iso8601(default)]"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      label="nb (norwegian):"
      value="08.05.2018"
    />
    <Datepicker
      format="sv"
      label="sv (swedish):"
      value="2018-05-08"
    />
    <Datepicker
      format="da"
      label="da (danish):"
      value="08.05.2018"
    />
    <Datepicker
      format="fi"
      label="fi (finnish):"
      value="08.05.2018"
    />
    <Datepicker
      format="en"
      label="en (english):"
      value="08/05/2018"
    />
    <Datepicker
      format="iso8601"
      label="iso8601 (robotic):"
      value="2018-05-08"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Datepickers DateRange renders 1`] = `
<React.Fragment>
  <h2
    id="date-range"
  >
    Date range
  </h2>
  <p>
    Date range with 
    <Attribute
      data={true}
      name="datepicker-min"
    />
     and 
    <Attribute
      data={true}
      name="datepicker-max"
    />
    ...
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      max="13.05.2018"
      min="03.05.2018"
      months="2"
      value="08.05.2018"
    />
  </ComponentPreview>
  <p>
    <b>
      NOTE:
    </b>
     Using range with required and no initial value will make the datepicker select current date if a user clicks the input and does not select a date within the range.
  </p>
</React.Fragment>
`;

exports[`Documentation: Datepickers DatepickersText renders 1`] = `
<div
  className="col-md-12 col-lg-10 doc-body"
>
  <p
    className="lead"
  >
    Datepickers...
  </p>
  <SimpleDatepicker />
  <InitialValue />
  <CustomFormat />
  <IncludeTime />
  <Required />
  <ShowingMultipleMonths />
  <DateRange />
  <Options />
</div>
`;

exports[`Documentation: Datepickers IncludeTime renders 1`] = `
<React.Fragment>
  <h2
    id="include-time"
  >
    Include time
  </h2>
  <p>
    Include time.. 
    <Attribute
      data={true}
      name="datepicker-time"
      value="true"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      time={true}
      value="17:38 08.05.2018"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Datepickers InitialValue renders 1`] = `
<React.Fragment>
  <h2
    id="initial-value"
  >
    Initial value
  </h2>
  <p>
    Initial value..
    <Attribute
      data={true}
      name="datepicker-init-value"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      value="2018-05-08"
    />
  </ComponentPreview>
  <p>
    Keep in mind that the datepicker will not insert the initial value if it does not correctly match the set format (iso8601 if you have not specified a format).
  </p>
</React.Fragment>
`;

exports[`Documentation: Datepickers Options renders 1`] = `
<React.Fragment>
  <h2
    id="available-options"
  >
    Available options
  </h2>
  <p>
    Options available through 
    <Attribute
      data={true}
      name="datepicker"
    />
    ...
  </p>
   Keep in mind that setting any of these values will render them true, so setting an attribute to 
  <Attribute
    value="false"
  />
   will still render it true.
  <table
    className="table table-striped"
  >
    <thead>
      <tr>
        <th>
          Attribute
        </th>
        <th>
          Default value
        </th>
        <th>
          Description
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-value"
          />
        </td>
        <td />
        <td>
          Value used to initialize calendar. Set this value with the same format currently set for the datepicker (including time if you have enabled that).
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-format"
          />
        </td>
        <td>
          <Attribute
            value="iso8601"
          />
        </td>
        <td>
          <p>
            Format string used for the input field and names for days and months. All have the same time format (HH:mm), and starts the week on monday (1), except 
            <Attribute
              value="en"
            />
            , which starts on sunday (0).
          </p>
          <p>
            The following options are available:
          </p>
          <ul
            className="list"
          >
            <li
              className="mb-sm"
            >
              <Attribute
                value="nb"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="sv"
              />
              : YYYY-MM-DD
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="da"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="fi"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="en"
              />
              : DD/MM/YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="iso8601"
              />
              : YYYY-MM-DD (default)
            </li>
          </ul>
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-time"
          />
        </td>
        <td />
        <td>
          If the calendar shows the current time and allows you to change it using a dropdown.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-months"
          />
        </td>
        <td>
          <Attribute
            value="1"
          />
        </td>
        <td>
          Number of months to display in the datepicker.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-min"
          />
        </td>
        <td />
        <td>
          Disallow dates before min.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-max"
          />
        </td>
        <td />
        <td>
          Disallow dates past max.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="required"
          />
        </td>
        <td />
        <td>
          Forces a value in the input field, but only if an initial value is set or the user clicks/tabs the input.
        </td>
      </tr>
    </tbody>
  </table>
</React.Fragment>
`;

exports[`Documentation: Datepickers Required renders 1`] = `
<React.Fragment>
  <h2
    id="required"
  >
    Required
  </h2>
  <p>
    Required.. 
    <Attribute
      data={true}
      name="required"
      value="true"
    />
     will autopopulate the input after clicking it if no date is selected. Keep in mind that if you do not pass a value to the datepicker it will remain blank if the user does not click the input.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      required={true}
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Datepickers ShowingMultipleMonths renders 1`] = `
<React.Fragment>
  <h2
    id="showing-multiple-months"
  >
    Showing multiple months
  </h2>
  <p>
    Showing multiple months.. 
    <Attribute
      data={true}
      name="datepicker-months"
      value="[number]"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      months="2"
    />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Datepickers SimpleDatepicker renders 1`] = `
<React.Fragment>
  <h2
    id="simple-datepicker"
  >
    Simple datepicker
  </h2>
  <p>
    Simple datepicker..
    <Attribute
      data={true}
      name="datepicker"
      value="true"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker />
  </ComponentPreview>
</React.Fragment>
`;

exports[`Documentation: Datepickers renders 1`] = `
<div
  className="doc-container"
>
  <div
    className="row"
  >
    <DatepickersText />
    <DocToc
      component={[Function]}
    />
  </div>
</div>
`;
