// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Datepickers CustomFormat renders 1`] = `
<Fragment>
  <h2
    id="custom-format"
  >
    Custom format
  </h2>
  <p>
    To use a custom format include 
    <Attribute
      data={true}
      name="datepicker-format"
      value="[nb|sv|da|fi|en|iso8601(default)]"
    />
    . If no format is provided then datepicker will default to 
    <Attribute
      value="iso8601"
    />
    . Same behaviour applies if you try to set an invalid date.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="nb-datepicker"
      label="nb (norwegian):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="sv"
      id="sv-datepicker"
      label="sv (swedish):"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
    <Datepicker
      format="da"
      id="da-datepicker"
      label="da (danish):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="fi"
      id="fi-datepicker"
      label="fi (finnish):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="en"
      id="en-datepicker"
      label="en (english):"
      prefixType="icon"
      prefixValue="event"
      value="28/12/1972"
    />
    <Datepicker
      format="iso8601"
      id="iso8601-datepicker"
      label="iso8601 (robotic):"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers DateRange renders 1`] = `
<Fragment>
  <h2
    id="date-range"
  >
    Date range
  </h2>
  <p>
    You can make it possible to select a range of dates with 
    <Attribute
      data={true}
      name="datepicker-mode"
      value="range"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="date-range-datepicker"
      label="date"
      min="10.12.1972"
      mode="range"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers IncludeTime renders 1`] = `
<Fragment>
  <h2
    id="include-time"
  >
    Include time
  </h2>
  <p>
    Adding time to your datepicker is as easy as using 
    <Attribute
      data={true}
      name="datepicker-time"
      value="true"
    />
    . If you wish to set a default time for the time picker just include it in the 
    <Attribute
      data={true}
      name="datepicker-value"
    />
     attribute.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="include-time-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
      time={true}
      value="28.12.1972 12:00"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers InitialValue renders 1`] = `
<Fragment>
  <h2
    id="initial-value"
  >
    Initial value
  </h2>
  <p>
    If you want to set an initial value for your datepicker use 
    <Attribute
      data={true}
      name="datepicker-value"
      value="{your-date}"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="init-value-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers Options renders 1`] = `
<Fragment>
  <h2
    id="available-options"
  >
    Available options
  </h2>
  <p>
    Options available through 
    <Attribute
      data={true}
      name="datepicker"
    />
    ...
  </p>
   Keep in mind that setting any of these values will render them true, so setting an attribute to 
  <Attribute
    value="false"
  />
   will still render it true.
  <table
    className="table table-striped"
  >
    <thead>
      <tr>
        <th>
          Attribute
        </th>
        <th>
          Default value
        </th>
        <th>
          Description
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-value"
          />
        </td>
        <td>
          <Attribute
            value="null"
          />
        </td>
        <td>
          Value used to initialize calendar. Set this value with the same format currently set for the datepicker (including time if you have enabled that).
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-allowinput"
          />
        </td>
        <td />
        <td>
          This allows the user to write in the input field. The dates given must match the format of the datepicker.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-format"
          />
        </td>
        <td>
          <Attribute
            value="iso8601"
          />
        </td>
        <td>
          <p>
            Format string used for the input field and names for days and months. All have the same time format (HH:mm), and starts the week on monday (1).
          </p>
          <p>
            The following options are available:
          </p>
          <ul
            className="list"
          >
            <li
              className="mb-sm"
            >
              <Attribute
                value="nb"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="sv"
              />
              : YYYY-MM-DD
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="da"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="fi"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="en"
              />
              : DD/MM/YYYY
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="iso8601"
              />
              : YYYY-MM-DD (default)
            </li>
          </ul>
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-time"
          />
        </td>
        <td>
          <Attribute
            value="false"
          />
        </td>
        <td>
          If the calendar shows the current time and allows you to change it using a dropdown.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-months"
          />
        </td>
        <td>
          <Attribute
            value="1"
          />
        </td>
        <td>
          Number of months to display in the datepicker.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-min"
          />
        </td>
        <td>
          <Attribute
            value="null"
          />
        </td>
        <td>
          Disallow dates before min.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-max"
          />
        </td>
        <td>
          <Attribute
            value="null"
          />
        </td>
        <td>
          Disallow dates past max.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-altinput"
          />
        </td>
        <td />
        <td>
          Use a custom format to display the selected date(s) shown in the input field.
        </td>
      </tr>
      <tr>
        <td>
          <Attribute
            data={true}
            name="datepicker-mode"
          />
        </td>
        <td>
          <Attribute
            value="single"
          />
        </td>
        <td>
          Different variations of date selection. Available options are:
          <ul
            className="list"
          >
            <li
              className="mb-sm"
            >
              <Attribute
                value="single"
              />
              User can select one date
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="multiple"
              />
              User can select multiple dates
            </li>
            <li
              className="mb-sm"
            >
              <Attribute
                value="range"
              />
              User can select a range of continuous dates
            </li>
          </ul>
        </td>
      </tr>
    </tbody>
  </table>
</Fragment>
`;

exports[`Documentation: Datepickers ShowingMultipleMonths renders 1`] = `
<Fragment>
  <h2
    id="showing-multiple-months"
  >
    Showing multiple months
  </h2>
  <p>
    If you need to show more than one month in your date picker use the attribute 
    <Attribute
      data={true}
      name="datepicker-months"
      value="{number}"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="multiple-months-datepicker"
      label="Date"
      months="2"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers SimpleDatepicker renders 1`] = `
<Fragment>
  <h2
    id="simple-datepicker"
  >
    Simple datepicker
  </h2>
  <p>
    A basic datepicker can be made by applying the attribute 
    <Attribute
      data={true}
      name="datepicker"
    />
     to an input element inside a 
    <Property
      value=".form-group"
    />
    . The basic datepicker has a read-only input field.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="simle-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    Datepickers makes it easy to get dates from your users. With datepickers you do not have to worry about how your users write the given date, alleviating the need to do format validation.
  </p>
  <AboutDatepickers />
  <SimpleDatepicker />
  <AllowInput />
  <AltInput />
  <InitialValue />
  <CustomFormat />
  <IncludeTime />
  <ShowingMultipleMonths />
  <ValidDates />
  <DateRange />
  <MultipleDates />
  <Options />
</DocContainer>
`;
